(window.webpackJsonp=window.webpackJsonp||[]).push([[201],{257:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return o})),r.d(t,"default",(function(){return l}));var a=r(2),s=r(6),n=(r(0),r(529)),i={title:"Src"},c={unversionedId:"api/contracts/0x/coordinator/contracts/src",id:"api/contracts/0x/coordinator/contracts/src",isDocsHomePage:!1,title:"Src",description:"Contracts",source:"@site/../docs/api/contracts/0x/coordinator/contracts/src.md",permalink:"/docs/api/contracts/0x/coordinator/contracts/src",editUrl:"https://github.com/AugurProject/augur/edit/v2/augur.sh/../docs/api/contracts/0x/coordinator/contracts/src.md"},o=[{value:"Contracts",id:"contracts",children:[{value:"<code>Coordinator</code>",id:"coordinator",children:[]},{value:"<code>IAssetProxyDispatcher</code>",id:"iassetproxydispatcher",children:[]},{value:"<code>ICoordinatorApprovalVerifier</code>",id:"icoordinatorapprovalverifier",children:[]},{value:"<code>ICoordinatorCore</code>",id:"icoordinatorcore",children:[]},{value:"<code>ICoordinatorSignatureValidator</code>",id:"icoordinatorsignaturevalidator",children:[]},{value:"<code>IExchange</code>",id:"iexchange",children:[]},{value:"<code>IExchangeCore</code>",id:"iexchangecore",children:[]},{value:"<code>IMatchOrders</code>",id:"imatchorders",children:[]},{value:"<code>IProtocolFees</code>",id:"iprotocolfees",children:[]},{value:"<code>ISignatureValidator</code>",id:"isignaturevalidator",children:[]},{value:"<code>ITransactions</code>",id:"itransactions",children:[]},{value:"<code>ITransferSimulator</code>",id:"itransfersimulator",children:[]},{value:"<code>IWrapperFunctions</code>",id:"iwrapperfunctions",children:[]},{value:"<code>LibAddressArray</code>",id:"libaddressarray",children:[]},{value:"<code>LibAddressArrayRichErrors</code>",id:"libaddressarrayricherrors",children:[]},{value:"<code>LibBytes</code>",id:"libbytes",children:[]},{value:"<code>LibConstants</code>",id:"libconstants",children:[]},{value:"<code>LibCoordinatorApproval</code>",id:"libcoordinatorapproval",children:[]},{value:"<code>LibCoordinatorRichErrors</code>",id:"libcoordinatorricherrors",children:[]},{value:"<code>LibEIP712</code>",id:"libeip712",children:[]},{value:"<code>LibEIP712CoordinatorDomain</code>",id:"libeip712coordinatordomain",children:[]},{value:"<code>LibEIP712ExchangeDomain</code>",id:"libeip712exchangedomain",children:[]},{value:"<code>LibFillResults</code>",id:"libfillresults",children:[]},{value:"<code>LibMath</code>",id:"libmath",children:[]},{value:"<code>LibMathRichErrors</code>",id:"libmathricherrors",children:[]},{value:"<code>LibOrder</code>",id:"liborder",children:[]},{value:"<code>LibReentrancyGuardRichErrors</code>",id:"libreentrancyguardricherrors",children:[]},{value:"<code>LibSafeMath</code>",id:"libsafemath",children:[]},{value:"<code>LibSafeMathRichErrors</code>",id:"libsafemathricherrors",children:[]},{value:"<code>LibZeroExTransaction</code>",id:"libzeroextransaction",children:[]},{value:"<code>MixinCoordinatorApprovalVerifier</code>",id:"mixincoordinatorapprovalverifier",children:[]},{value:"<code>MixinCoordinatorCore</code>",id:"mixincoordinatorcore",children:[]},{value:"<code>MixinSignatureValidator</code>",id:"mixinsignaturevalidator",children:[]},{value:"<code>ReentrancyGuard</code>",id:"reentrancyguard",children:[]},{value:"<code>Refundable</code>",id:"refundable",children:[]}]}],b={rightToc:o};function l(e){var t=e.components,r=Object(s.a)(e,["components"]);return Object(n.b)("wrapper",Object(a.a)({},b,r,{components:t,mdxType:"MDXLayout"}),Object(n.b)("div",{class:"contracts"},Object(n.b)("h2",{id:"contracts"},"Contracts"),Object(n.b)("h3",{id:"coordinator"},Object(n.b)("inlineCode",{parentName:"h3"},"Coordinator")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#Coordinator.constructor(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"constructor(address exchange, uint256 chainId)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinCoordinatorCore.fallback()"},Object(n.b)("code",{class:"function-signature"},"fallback()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinCoordinatorCore.executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,address,bytes,bytes[])"},Object(n.b)("code",{class:"function-signature"},"executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, address txOrigin, bytes transactionSignature, bytes[] approvalSignatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinCoordinatorApprovalVerifier.assertValidCoordinatorApprovals(struct LibZeroExTransaction.ZeroExTransaction,address,bytes,bytes[])"},Object(n.b)("code",{class:"function-signature"},"assertValidCoordinatorApprovals(struct LibZeroExTransaction.ZeroExTransaction transaction, address txOrigin, bytes transactionSignature, bytes[] approvalSignatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinCoordinatorApprovalVerifier.decodeOrdersFromFillData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeOrdersFromFillData(bytes data)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinCoordinatorApprovalVerifier._assertValidTransactionOrdersApproval(struct LibZeroExTransaction.ZeroExTransaction,struct LibOrder.Order[],address,bytes,bytes[])"},Object(n.b)("code",{class:"function-signature"},"_assertValidTransactionOrdersApproval(struct LibZeroExTransaction.ZeroExTransaction transaction, struct LibOrder.Order[] orders, address txOrigin, bytes transactionSignature, bytes[] approvalSignatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.getSignerAddress(bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"getSignerAddress(bytes32 hash, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibConstants.constructor(address)"},Object(n.b)("code",{class:"function-signature"},"constructor(address exchange)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._refundNonZeroBalanceIfEnabled()"},Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalanceIfEnabled()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._refundNonZeroBalance()"},Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalance()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._disableRefund()"},Object(n.b)("code",{class:"function-signature"},"_disableRefund()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._enableAndRefundNonZeroBalance()"},Object(n.b)("code",{class:"function-signature"},"_enableAndRefundNonZeroBalance()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._areRefundsDisabled()"},Object(n.b)("code",{class:"function-signature"},"_areRefundsDisabled()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ReentrancyGuard._lockMutexOrThrowIfAlreadyLocked()"},Object(n.b)("code",{class:"function-signature"},"_lockMutexOrThrowIfAlreadyLocked()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ReentrancyGuard._unlockMutex()"},Object(n.b)("code",{class:"function-signature"},"_unlockMutex()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibEIP712ExchangeDomain.constructor(uint256,address)"},Object(n.b)("code",{class:"function-signature"},"constructor(uint256 chainId, address verifyingContractAddressIfExists)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibCoordinatorApproval.getCoordinatorApprovalHash(struct LibCoordinatorApproval.CoordinatorApproval)"},Object(n.b)("code",{class:"function-signature"},"getCoordinatorApprovalHash(struct LibCoordinatorApproval.CoordinatorApproval approval)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibCoordinatorApproval._hashCoordinatorApproval(struct LibCoordinatorApproval.CoordinatorApproval)"},Object(n.b)("code",{class:"function-signature"},"_hashCoordinatorApproval(struct LibCoordinatorApproval.CoordinatorApproval approval)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibEIP712CoordinatorDomain._hashEIP712CoordinatorMessage(bytes32)"},Object(n.b)("code",{class:"function-signature"},"_hashEIP712CoordinatorMessage(bytes32 hashStruct)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"Coordinator.constructor(address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"constructor(address exchange, uint256 chainId)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("h3",{id:"iassetproxydispatcher"},Object(n.b)("inlineCode",{parentName:"h3"},"IAssetProxyDispatcher")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IAssetProxyDispatcher.registerAssetProxy(address)"},Object(n.b)("code",{class:"function-signature"},"registerAssetProxy(address assetProxy)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IAssetProxyDispatcher.getAssetProxy(bytes4)"},Object(n.b)("code",{class:"function-signature"},"getAssetProxy(bytes4 assetProxyId)")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IAssetProxyDispatcher.AssetProxyRegistered(bytes4,address)"},Object(n.b)("code",{class:"function-signature"},"AssetProxyRegistered(bytes4 id, address assetProxy)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IAssetProxyDispatcher.registerAssetProxy(address)"}),Object(n.b)("code",{class:"function-signature"},"registerAssetProxy(address assetProxy)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Registers an asset proxy to its asset proxy id.\nOnce an asset proxy is registered, it cannot be unregistered.\n@param assetProxy Address of new asset proxy to register."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IAssetProxyDispatcher.getAssetProxy(bytes4)"}),Object(n.b)("code",{class:"function-signature"},"getAssetProxy(bytes4 assetProxyId) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Gets an asset proxy.\n@param assetProxyId Id of the asset proxy.\n@return The asset proxy registered to assetProxyId. Returns 0x0 if no proxy is registered."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IAssetProxyDispatcher.AssetProxyRegistered(bytes4,address)"}),Object(n.b)("code",{class:"function-signature"},"AssetProxyRegistered(bytes4 id, address assetProxy)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h3",{id:"icoordinatorapprovalverifier"},Object(n.b)("inlineCode",{parentName:"h3"},"ICoordinatorApprovalVerifier")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#ICoordinatorApprovalVerifier.assertValidCoordinatorApprovals(struct LibZeroExTransaction.ZeroExTransaction,address,bytes,bytes[])"},Object(n.b)("code",{class:"function-signature"},"assertValidCoordinatorApprovals(struct LibZeroExTransaction.ZeroExTransaction transaction, address txOrigin, bytes transactionSignature, bytes[] approvalSignatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ICoordinatorApprovalVerifier.decodeOrdersFromFillData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeOrdersFromFillData(bytes data)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ICoordinatorApprovalVerifier.assertValidCoordinatorApprovals(struct LibZeroExTransaction.ZeroExTransaction,address,bytes,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"assertValidCoordinatorApprovals(struct LibZeroExTransaction.ZeroExTransaction transaction, address txOrigin, bytes transactionSignature, bytes[] approvalSignatures)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Validates that the 0x transaction has been approved by all of the feeRecipients\nthat correspond to each order in the transaction","'","s Exchange calldata.\n@param transaction 0x transaction containing salt, signerAddress, and data.\n@param txOrigin Required signer of Ethereum transaction calling this function.\n@param transactionSignature Proof that the transaction has been signed by the signer.\n@param approvalSignatures Array of signatures that correspond to the feeRecipients of each\norder in the transaction","'","s Exchange calldata."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ICoordinatorApprovalVerifier.decodeOrdersFromFillData(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeOrdersFromFillData(bytes data) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibOrder.Order[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decodes the orders from Exchange calldata representing any fill method.\n@param data Exchange calldata representing a fill method.\n@return orders The orders from the Exchange calldata."),Object(n.b)("h3",{id:"icoordinatorcore"},Object(n.b)("inlineCode",{parentName:"h3"},"ICoordinatorCore")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#ICoordinatorCore.executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,address,bytes,bytes[])"},Object(n.b)("code",{class:"function-signature"},"executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, address txOrigin, bytes transactionSignature, bytes[] approvalSignatures)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ICoordinatorCore.executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,address,bytes,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, address txOrigin, bytes transactionSignature, bytes[] approvalSignatures)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes a 0x transaction that has been signed by the feeRecipients that correspond to\neach order in the transaction","'","s Exchange calldata.\n@param transaction 0x transaction containing salt, signerAddress, and data.\n@param txOrigin Required signer of Ethereum transaction calling this function.\n@param transactionSignature Proof that the transaction has been signed by the signer.\n@param approvalSignatures Array of signatures that correspond to the feeRecipients of each\norder in the transaction","'","s Exchange calldata."),Object(n.b)("h3",{id:"icoordinatorsignaturevalidator"},Object(n.b)("inlineCode",{parentName:"h3"},"ICoordinatorSignatureValidator")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#ICoordinatorSignatureValidator.getSignerAddress(bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"getSignerAddress(bytes32 hash, bytes signature)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ICoordinatorSignatureValidator.getSignerAddress(bytes32,bytes)"}),Object(n.b)("code",{class:"function-signature"},"getSignerAddress(bytes32 hash, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Recovers the address of a signer given a hash and signature.\n@param hash Any 32 byte hash.\n@param signature Proof that the hash has been signed by signer.\n@return signerAddress Address of the signer. "),Object(n.b)("h3",{id:"iexchange"},Object(n.b)("inlineCode",{parentName:"h3"},"IExchange")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IWrapperFunctions.fillOrKillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"fillOrKillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IWrapperFunctions.batchFillOrders(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IWrapperFunctions.batchFillOrKillOrders(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrKillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IWrapperFunctions.batchFillOrdersNoThrow(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrdersNoThrow(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IWrapperFunctions.marketSellOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketSellOrdersNoThrow(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IWrapperFunctions.marketBuyOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersNoThrow(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IWrapperFunctions.marketSellOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketSellOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IWrapperFunctions.marketBuyOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IWrapperFunctions.batchCancelOrders(struct LibOrder.Order[])"},Object(n.b)("code",{class:"function-signature"},"batchCancelOrders(struct LibOrder.Order[] orders)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ITransferSimulator.simulateDispatchTransferFromCalls(bytes[],address[],address[],uint256[])"},Object(n.b)("code",{class:"function-signature"},"simulateDispatchTransferFromCalls(bytes[] assetData, address[] fromAddresses, address[] toAddresses, uint256[] amounts)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IAssetProxyDispatcher.registerAssetProxy(address)"},Object(n.b)("code",{class:"function-signature"},"registerAssetProxy(address assetProxy)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IAssetProxyDispatcher.getAssetProxy(bytes4)"},Object(n.b)("code",{class:"function-signature"},"getAssetProxy(bytes4 assetProxyId)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ITransactions.executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ITransactions.batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[] transactions, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ITransactions._getCurrentContextAddress()"},Object(n.b)("code",{class:"function-signature"},"_getCurrentContextAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.preSign(bytes32)"},Object(n.b)("code",{class:"function-signature"},"preSign(bytes32 hash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.setSignatureValidatorApproval(address,bool)"},Object(n.b)("code",{class:"function-signature"},"setSignatureValidatorApproval(address validatorAddress, bool approval)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.isValidHashSignature(bytes32,address,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidHashSignature(bytes32 hash, address signerAddress, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.isValidOrderSignature(struct LibOrder.Order,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidOrderSignature(struct LibOrder.Order order, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator._isValidOrderWithHashSignature(struct LibOrder.Order,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidOrderWithHashSignature(struct LibOrder.Order order, bytes32 orderHash, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator._isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 transactionHash, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IMatchOrders.batchMatchOrders(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchMatchOrders(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IMatchOrders.batchMatchOrdersWithMaximalFill(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchMatchOrdersWithMaximalFill(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IMatchOrders.matchOrders(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"matchOrders(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IMatchOrders.matchOrdersWithMaximalFill(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"matchOrdersWithMaximalFill(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.cancelOrdersUpTo(uint256)"},Object(n.b)("code",{class:"function-signature"},"cancelOrdersUpTo(uint256 targetOrderEpoch)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.fillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"fillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.cancelOrder(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"cancelOrder(struct LibOrder.Order order)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.getOrderInfo(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"getOrderInfo(struct LibOrder.Order order)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.setProtocolFeeMultiplier(uint256)"},Object(n.b)("code",{class:"function-signature"},"setProtocolFeeMultiplier(uint256 updatedProtocolFeeMultiplier)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.setProtocolFeeCollectorAddress(address)"},Object(n.b)("code",{class:"function-signature"},"setProtocolFeeCollectorAddress(address updatedProtocolFeeCollector)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.protocolFeeMultiplier()"},Object(n.b)("code",{class:"function-signature"},"protocolFeeMultiplier()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.protocolFeeCollector()"},Object(n.b)("code",{class:"function-signature"},"protocolFeeCollector()")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IAssetProxyDispatcher.AssetProxyRegistered(bytes4,address)"},Object(n.b)("code",{class:"function-signature"},"AssetProxyRegistered(bytes4 id, address assetProxy)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ITransactions.TransactionExecution(bytes32)"},Object(n.b)("code",{class:"function-signature"},"TransactionExecution(bytes32 transactionHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.SignatureValidatorApproval(address,address,bool)"},Object(n.b)("code",{class:"function-signature"},"SignatureValidatorApproval(address signerAddress, address validatorAddress, bool isApproved)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.Fill(address,address,bytes,bytes,bytes,bytes,bytes32,address,address,uint256,uint256,uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"Fill(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, bytes makerFeeAssetData, bytes takerFeeAssetData, bytes32 orderHash, address takerAddress, address senderAddress, uint256 makerAssetFilledAmount, uint256 takerAssetFilledAmount, uint256 makerFeePaid, uint256 takerFeePaid, uint256 protocolFeePaid)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.Cancel(address,address,bytes,bytes,address,bytes32)"},Object(n.b)("code",{class:"function-signature"},"Cancel(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, address senderAddress, bytes32 orderHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.CancelUpTo(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"CancelUpTo(address makerAddress, address orderSenderAddress, uint256 orderEpoch)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.ProtocolFeeMultiplier(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"ProtocolFeeMultiplier(uint256 oldProtocolFeeMultiplier, uint256 updatedProtocolFeeMultiplier)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.ProtocolFeeCollectorAddress(address,address)"},Object(n.b)("code",{class:"function-signature"},"ProtocolFeeCollectorAddress(address oldProtocolFeeCollector, address updatedProtocolFeeCollector)"))))),Object(n.b)("h3",{id:"iexchangecore"},Object(n.b)("inlineCode",{parentName:"h3"},"IExchangeCore")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.cancelOrdersUpTo(uint256)"},Object(n.b)("code",{class:"function-signature"},"cancelOrdersUpTo(uint256 targetOrderEpoch)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.fillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"fillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.cancelOrder(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"cancelOrder(struct LibOrder.Order order)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.getOrderInfo(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"getOrderInfo(struct LibOrder.Order order)")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.Fill(address,address,bytes,bytes,bytes,bytes,bytes32,address,address,uint256,uint256,uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"Fill(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, bytes makerFeeAssetData, bytes takerFeeAssetData, bytes32 orderHash, address takerAddress, address senderAddress, uint256 makerAssetFilledAmount, uint256 takerAssetFilledAmount, uint256 makerFeePaid, uint256 takerFeePaid, uint256 protocolFeePaid)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.Cancel(address,address,bytes,bytes,address,bytes32)"},Object(n.b)("code",{class:"function-signature"},"Cancel(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, address senderAddress, bytes32 orderHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.CancelUpTo(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"CancelUpTo(address makerAddress, address orderSenderAddress, uint256 orderEpoch)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.cancelOrdersUpTo(uint256)"}),Object(n.b)("code",{class:"function-signature"},"cancelOrdersUpTo(uint256 targetOrderEpoch)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Cancels all orders created by makerAddress with a salt less than or equal to the targetOrderEpoch\nand senderAddress equal to msg.sender (or null address if msg.sender == makerAddress).\n@param targetOrderEpoch Orders created with a salt less or equal to this value will be cancelled."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.fillOrder(struct LibOrder.Order,uint256,bytes)"}),Object(n.b)("code",{class:"function-signature"},"fillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Fills the input order.\n@param order Order struct containing order specifications.\n@param takerAssetFillAmount Desired amount of takerAsset to sell.\n@param signature Proof that order has been created by maker.\n@return Amounts filled and fees paid by maker and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.cancelOrder(struct LibOrder.Order)"}),Object(n.b)("code",{class:"function-signature"},"cancelOrder(struct LibOrder.Order order)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"After calling, the order can not be filled anymore.\n@param order Order struct containing order specifications."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.getOrderInfo(struct LibOrder.Order)"}),Object(n.b)("code",{class:"function-signature"},"getOrderInfo(struct LibOrder.Order order) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibOrder.OrderInfo")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Gets information about an order: status, hash, and amount filled.\n@param order Order to gather information on.\n@return OrderInfo Information about the order and its state.\nSee LibOrder.OrderInfo for a complete description."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.Fill(address,address,bytes,bytes,bytes,bytes,bytes32,address,address,uint256,uint256,uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"Fill(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, bytes makerFeeAssetData, bytes takerFeeAssetData, bytes32 orderHash, address takerAddress, address senderAddress, uint256 makerAssetFilledAmount, uint256 takerAssetFilledAmount, uint256 makerFeePaid, uint256 takerFeePaid, uint256 protocolFeePaid)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.Cancel(address,address,bytes,bytes,address,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"Cancel(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, address senderAddress, bytes32 orderHash)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.CancelUpTo(address,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"CancelUpTo(address makerAddress, address orderSenderAddress, uint256 orderEpoch)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h3",{id:"imatchorders"},Object(n.b)("inlineCode",{parentName:"h3"},"IMatchOrders")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IMatchOrders.batchMatchOrders(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchMatchOrders(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IMatchOrders.batchMatchOrdersWithMaximalFill(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchMatchOrdersWithMaximalFill(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IMatchOrders.matchOrders(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"matchOrders(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IMatchOrders.matchOrdersWithMaximalFill(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"matchOrdersWithMaximalFill(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IMatchOrders.batchMatchOrders(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchMatchOrders(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.BatchMatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Match complementary orders that have a profitable spread.\nEach order is filled at their respective price point, and\nthe matcher receives a profit denominated in the left maker asset.\n@param leftOrders Set of orders with the same maker / taker asset.\n@param rightOrders Set of orders to match against ",Object(n.b)("inlineCode",{parentName:"p"},"leftOrders"),"\n@param leftSignatures Proof that left orders were created by the left makers.\n@param rightSignatures Proof that right orders were created by the right makers.\n@return batchMatchedFillResults Amounts filled and profit generated."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IMatchOrders.batchMatchOrdersWithMaximalFill(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchMatchOrdersWithMaximalFill(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.BatchMatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Match complementary orders that have a profitable spread.\nEach order is maximally filled at their respective price point, and\nthe matcher receives a profit denominated in either the left maker asset,\nright maker asset, or a combination of both.\n@param leftOrders Set of orders with the same maker / taker asset.\n@param rightOrders Set of orders to match against ",Object(n.b)("inlineCode",{parentName:"p"},"leftOrders"),"\n@param leftSignatures Proof that left orders were created by the left makers.\n@param rightSignatures Proof that right orders were created by the right makers.\n@return batchMatchedFillResults Amounts filled and profit generated."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IMatchOrders.matchOrders(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"}),Object(n.b)("code",{class:"function-signature"},"matchOrders(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.MatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Match two complementary orders that have a profitable spread.\nEach order is filled at their respective price point. However, the calculations are\ncarried out as though the orders are both being filled at the right order","'","s price point.\nThe profit made by the left order goes to the taker (who matched the two orders).\n@param leftOrder First order to match.\n@param rightOrder Second order to match.\n@param leftSignature Proof that order was created by the left maker.\n@param rightSignature Proof that order was created by the right maker.\n@return matchedFillResults Amounts filled and fees paid by maker and taker of matched orders."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IMatchOrders.matchOrdersWithMaximalFill(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"}),Object(n.b)("code",{class:"function-signature"},"matchOrdersWithMaximalFill(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.MatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Match two complementary orders that have a profitable spread.\nEach order is maximally filled at their respective price point, and\nthe matcher receives a profit denominated in either the left maker asset,\nright maker asset, or a combination of both.\n@param leftOrder First order to match.\n@param rightOrder Second order to match.\n@param leftSignature Proof that order was created by the left maker.\n@param rightSignature Proof that order was created by the right maker.\n@return matchedFillResults Amounts filled by maker and taker of matched orders."),Object(n.b)("h3",{id:"iprotocolfees"},Object(n.b)("inlineCode",{parentName:"h3"},"IProtocolFees")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IProtocolFees.setProtocolFeeMultiplier(uint256)"},Object(n.b)("code",{class:"function-signature"},"setProtocolFeeMultiplier(uint256 updatedProtocolFeeMultiplier)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IProtocolFees.setProtocolFeeCollectorAddress(address)"},Object(n.b)("code",{class:"function-signature"},"setProtocolFeeCollectorAddress(address updatedProtocolFeeCollector)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IProtocolFees.protocolFeeMultiplier()"},Object(n.b)("code",{class:"function-signature"},"protocolFeeMultiplier()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IProtocolFees.protocolFeeCollector()"},Object(n.b)("code",{class:"function-signature"},"protocolFeeCollector()")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IProtocolFees.ProtocolFeeMultiplier(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"ProtocolFeeMultiplier(uint256 oldProtocolFeeMultiplier, uint256 updatedProtocolFeeMultiplier)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IProtocolFees.ProtocolFeeCollectorAddress(address,address)"},Object(n.b)("code",{class:"function-signature"},"ProtocolFeeCollectorAddress(address oldProtocolFeeCollector, address updatedProtocolFeeCollector)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IProtocolFees.setProtocolFeeMultiplier(uint256)"}),Object(n.b)("code",{class:"function-signature"},"setProtocolFeeMultiplier(uint256 updatedProtocolFeeMultiplier)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Allows the owner to update the protocol fee multiplier.\n@param updatedProtocolFeeMultiplier The updated protocol fee multiplier."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IProtocolFees.setProtocolFeeCollectorAddress(address)"}),Object(n.b)("code",{class:"function-signature"},"setProtocolFeeCollectorAddress(address updatedProtocolFeeCollector)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Allows the owner to update the protocolFeeCollector address.\n@param updatedProtocolFeeCollector The updated protocolFeeCollector contract address."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IProtocolFees.protocolFeeMultiplier()"}),Object(n.b)("code",{class:"function-signature"},"protocolFeeMultiplier() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Returns the protocolFeeMultiplier"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IProtocolFees.protocolFeeCollector()"}),Object(n.b)("code",{class:"function-signature"},"protocolFeeCollector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Returns the protocolFeeCollector address"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IProtocolFees.ProtocolFeeMultiplier(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"ProtocolFeeMultiplier(uint256 oldProtocolFeeMultiplier, uint256 updatedProtocolFeeMultiplier)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IProtocolFees.ProtocolFeeCollectorAddress(address,address)"}),Object(n.b)("code",{class:"function-signature"},"ProtocolFeeCollectorAddress(address oldProtocolFeeCollector, address updatedProtocolFeeCollector)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h3",{id:"isignaturevalidator"},Object(n.b)("inlineCode",{parentName:"h3"},"ISignatureValidator")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator.preSign(bytes32)"},Object(n.b)("code",{class:"function-signature"},"preSign(bytes32 hash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator.setSignatureValidatorApproval(address,bool)"},Object(n.b)("code",{class:"function-signature"},"setSignatureValidatorApproval(address validatorAddress, bool approval)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator.isValidHashSignature(bytes32,address,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidHashSignature(bytes32 hash, address signerAddress, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator.isValidOrderSignature(struct LibOrder.Order,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidOrderSignature(struct LibOrder.Order order, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator.isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator._isValidOrderWithHashSignature(struct LibOrder.Order,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidOrderWithHashSignature(struct LibOrder.Order order, bytes32 orderHash, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator._isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 transactionHash, bytes signature)")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator.SignatureValidatorApproval(address,address,bool)"},Object(n.b)("code",{class:"function-signature"},"SignatureValidatorApproval(address signerAddress, address validatorAddress, bool isApproved)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator.preSign(bytes32)"}),Object(n.b)("code",{class:"function-signature"},"preSign(bytes32 hash)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Approves a hash on-chain.\nAfter presigning a hash, the preSign signature type will become valid for that hash and signer.\n@param hash Any 32-byte hash."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator.setSignatureValidatorApproval(address,bool)"}),Object(n.b)("code",{class:"function-signature"},"setSignatureValidatorApproval(address validatorAddress, bool approval)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Approves/unnapproves a Validator contract to verify signatures on signer","'","s behalf.\n@param validatorAddress Address of Validator contract.\n@param approval Approval or disapproval of  Validator contract."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator.isValidHashSignature(bytes32,address,bytes)"}),Object(n.b)("code",{class:"function-signature"},"isValidHashSignature(bytes32 hash, address signerAddress, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Verifies that a hash has been signed by the given signer.\n@param hash Any 32-byte hash.\n@param signature Proof that the hash has been signed by signer.\n@return isValid ",Object(n.b)("inlineCode",{parentName:"p"},"true")," if the signature is valid for the given hash and signer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator.isValidOrderSignature(struct LibOrder.Order,bytes)"}),Object(n.b)("code",{class:"function-signature"},"isValidOrderSignature(struct LibOrder.Order order, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Verifies that a signature for an order is valid.\n@param order The order.\n@param signature Proof that the order has been signed by signer.\n@return isValid true if the signature is valid for the given order and signer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator.isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes)"}),Object(n.b)("code",{class:"function-signature"},"isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Verifies that a signature for a transaction is valid.\n@param transaction The transaction.\n@param signature Proof that the order has been signed by signer.\n@return isValid true if the signature is valid for the given transaction and signer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator._isValidOrderWithHashSignature(struct LibOrder.Order,bytes32,bytes)"}),Object(n.b)("code",{class:"function-signature"},"_isValidOrderWithHashSignature(struct LibOrder.Order order, bytes32 orderHash, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Verifies that an order, with provided order hash, has been signed\nby the given signer.\n@param order The order.\n@param orderHash The hash of the order.\n@param signature Proof that the hash has been signed by signer.\n@return isValid True if the signature is valid for the given order and signer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator._isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes32,bytes)"}),Object(n.b)("code",{class:"function-signature"},"_isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 transactionHash, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Verifies that a transaction, with provided order hash, has been signed\nby the given signer.\n@param transaction The transaction.\n@param transactionHash The hash of the transaction.\n@param signature Proof that the hash has been signed by signer.\n@return isValid True if the signature is valid for the given transaction and signer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator.SignatureValidatorApproval(address,address,bool)"}),Object(n.b)("code",{class:"function-signature"},"SignatureValidatorApproval(address signerAddress, address validatorAddress, bool isApproved)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h3",{id:"itransactions"},Object(n.b)("inlineCode",{parentName:"h3"},"ITransactions")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#ITransactions.executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ITransactions.batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[] transactions, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ITransactions._getCurrentContextAddress()"},Object(n.b)("code",{class:"function-signature"},"_getCurrentContextAddress()")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#ITransactions.TransactionExecution(bytes32)"},Object(n.b)("code",{class:"function-signature"},"TransactionExecution(bytes32 transactionHash)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ITransactions.executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"}),Object(n.b)("code",{class:"function-signature"},"executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes an Exchange method call in the context of signer.\n@param transaction 0x transaction containing salt, signerAddress, and data.\n@param signature Proof that transaction has been signed by signer.\n@return ABI encoded return data of the underlying Exchange function call."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ITransactions.batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[] transactions, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes a batch of Exchange method calls in the context of signer(s).\n@param transactions Array of 0x transactions containing salt, signerAddress, and data.\n@param signatures Array of proofs that transactions have been signed by signer(s).\n@return Array containing ABI encoded return data for each of the underlying Exchange function calls."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ITransactions._getCurrentContextAddress()"}),Object(n.b)("code",{class:"function-signature"},"_getCurrentContextAddress() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"The current function will be called in the context of this address (either 0x transaction signer or ",Object(n.b)("inlineCode",{parentName:"p"},"msg.sender"),").\nIf calling a fill function, this address will represent the taker.\nIf calling a cancel function, this address will represent the maker.\n@return Signer of 0x transaction if entry point is ",Object(n.b)("a",Object(a.a)({parentName:"p"},{href:"../../exchange/contracts/src#ITransactions.executeTransaction(struct%20LibZeroExTransaction.ZeroExTransaction,bytes)"}),Object(n.b)("inlineCode",{parentName:"a"},"executeTransaction")),".\n",Object(n.b)("inlineCode",{parentName:"p"},"msg.sender")," if entry point is any other function."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ITransactions.TransactionExecution(bytes32)"}),Object(n.b)("code",{class:"function-signature"},"TransactionExecution(bytes32 transactionHash)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h3",{id:"itransfersimulator"},Object(n.b)("inlineCode",{parentName:"h3"},"ITransferSimulator")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#ITransferSimulator.simulateDispatchTransferFromCalls(bytes[],address[],address[],uint256[])"},Object(n.b)("code",{class:"function-signature"},"simulateDispatchTransferFromCalls(bytes[] assetData, address[] fromAddresses, address[] toAddresses, uint256[] amounts)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ITransferSimulator.simulateDispatchTransferFromCalls(bytes[],address[],address[],uint256[])"}),Object(n.b)("code",{class:"function-signature"},"simulateDispatchTransferFromCalls(bytes[] assetData, address[] fromAddresses, address[] toAddresses, uint256[] amounts)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"This function may be used to simulate any amount of transfers\nAs they would occur through the Exchange contract. Note that this function\nwill always revert, even if all transfers are successful. However, it may\nbe used with eth_call or with a try/catch pattern in order to simulate\nthe results of the transfers.\n@param assetData Array of asset details, each encoded per the AssetProxy contract specification.\n@param fromAddresses Array containing the ",Object(n.b)("inlineCode",{parentName:"p"},"from")," addresses that correspond with each transfer.\n@param toAddresses Array containing the ",Object(n.b)("inlineCode",{parentName:"p"},"to")," addresses that correspond with each transfer.\n@param amounts Array containing the amounts that correspond to each transfer.\n@return This function does not return a value. However, it will always revert with\n",Object(n.b)("inlineCode",{parentName:"p"},"Error(&quot;TRANSFERS_SUCCESSFUL&quot;)")," if all of the transfers were successful."),Object(n.b)("h3",{id:"iwrapperfunctions"},Object(n.b)("inlineCode",{parentName:"h3"},"IWrapperFunctions")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.fillOrKillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"fillOrKillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.batchFillOrders(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.batchFillOrKillOrders(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrKillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.batchFillOrdersNoThrow(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrdersNoThrow(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.marketSellOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketSellOrdersNoThrow(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.marketBuyOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersNoThrow(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.marketSellOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketSellOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.marketBuyOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.batchCancelOrders(struct LibOrder.Order[])"},Object(n.b)("code",{class:"function-signature"},"batchCancelOrders(struct LibOrder.Order[] orders)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.fillOrKillOrder(struct LibOrder.Order,uint256,bytes)"}),Object(n.b)("code",{class:"function-signature"},"fillOrKillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Fills the input order. Reverts if exact takerAssetFillAmount not filled.\n@param order Order struct containing order specifications.\n@param takerAssetFillAmount Desired amount of takerAsset to sell.\n@param signature Proof that order has been created by maker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.batchFillOrders(struct LibOrder.Order[],uint256[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchFillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of fillOrder.\n@param orders Array of order specifications.\n@param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n@param signatures Proofs that orders have been created by makers.\n@return Array of amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.batchFillOrKillOrders(struct LibOrder.Order[],uint256[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchFillOrKillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of fillOrKillOrder.\n@param orders Array of order specifications.\n@param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n@param signatures Proofs that orders have been created by makers.\n@return Array of amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.batchFillOrdersNoThrow(struct LibOrder.Order[],uint256[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchFillOrdersNoThrow(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of fillOrder. If any fill reverts, the error is caught and ignored.\n@param orders Array of order specifications.\n@param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n@param signatures Proofs that orders have been created by makers.\n@return Array of amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.marketSellOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"marketSellOrdersNoThrow(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.\nIf any fill reverts, the error is caught and ignored.\nNOTE: This function does not enforce that the takerAsset is the same for each order.\n@param orders Array of order specifications.\n@param takerAssetFillAmount Desired amount of takerAsset to sell.\n@param signatures Proofs that orders have been signed by makers.\n@return Amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.marketBuyOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersNoThrow(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of fillOrder until total amount of makerAsset is bought by taker.\nIf any fill reverts, the error is caught and ignored.\nNOTE: This function does not enforce that the makerAsset is the same for each order.\n@param orders Array of order specifications.\n@param makerAssetFillAmount Desired amount of makerAsset to buy.\n@param signatures Proofs that orders have been signed by makers.\n@return Amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.marketSellOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"marketSellOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Calls marketSellOrdersNoThrow then reverts if ","<"," takerAssetFillAmount has been sold.\nNOTE: This function does not enforce that the takerAsset is the same for each order.\n@param orders Array of order specifications.\n@param takerAssetFillAmount Minimum amount of takerAsset to sell.\n@param signatures Proofs that orders have been signed by makers.\n@return Amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.marketBuyOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Calls marketBuyOrdersNoThrow then reverts if ","<"," makerAssetFillAmount has been bought.\nNOTE: This function does not enforce that the makerAsset is the same for each order.\n@param orders Array of order specifications.\n@param makerAssetFillAmount Minimum amount of makerAsset to buy.\n@param signatures Proofs that orders have been signed by makers.\n@return Amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.batchCancelOrders(struct LibOrder.Order[])"}),Object(n.b)("code",{class:"function-signature"},"batchCancelOrders(struct LibOrder.Order[] orders)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of cancelOrder.\n@param orders Array of order specifications."),Object(n.b)("h3",{id:"libaddressarray"},Object(n.b)("inlineCode",{parentName:"h3"},"LibAddressArray")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAddressArray.append(address[],address)"},Object(n.b)("code",{class:"function-signature"},"append(address[] addressArray, address addressToAppend)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAddressArray.contains(address[],address)"},Object(n.b)("code",{class:"function-signature"},"contains(address[] addressArray, address target)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAddressArray.indexOf(address[],address)"},Object(n.b)("code",{class:"function-signature"},"indexOf(address[] addressArray, address target)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAddressArray.append(address[],address)"}),Object(n.b)("code",{class:"function-signature"},"append(address[] addressArray, address addressToAppend) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address[]")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Append a new address to an array of addresses.\nThe ",Object(n.b)("inlineCode",{parentName:"p"},"addressArray")," may need to be reallocated to make space\nfor the new address. Because of this we return the resulting\nmemory location of ",Object(n.b)("inlineCode",{parentName:"p"},"addressArray"),".\n@param addressArray Array of addresses.\n@param addressToAppend  Address to append.\n@return Array of addresses: ","[... addressArray, addressToAppend]"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAddressArray.contains(address[],address)"}),Object(n.b)("code",{class:"function-signature"},"contains(address[] addressArray, address target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Checks if an address array contains the target address.\n@param addressArray Array of addresses.\n@param target Address to search for in array.\n@return True if the addressArray contains the target."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAddressArray.indexOf(address[],address)"}),Object(n.b)("code",{class:"function-signature"},"indexOf(address[] addressArray, address target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool,uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Finds the index of an address within an array.\n@param addressArray Array of addresses.\n@param target Address to search for in array.\n@return Existence and index of the target in the array."),Object(n.b)("h3",{id:"libaddressarrayricherrors"},Object(n.b)("inlineCode",{parentName:"h3"},"LibAddressArrayRichErrors")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAddressArrayRichErrors.MismanagedMemoryError(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"MismanagedMemoryError(uint256 freeMemPtr, uint256 addressArrayEndPtr)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAddressArrayRichErrors.MismanagedMemoryError(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"MismanagedMemoryError(uint256 freeMemPtr, uint256 addressArrayEndPtr) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"libbytes"},Object(n.b)("inlineCode",{parentName:"h3"},"LibBytes")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.rawAddress(bytes)"},Object(n.b)("code",{class:"function-signature"},"rawAddress(bytes input)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.contentAddress(bytes)"},Object(n.b)("code",{class:"function-signature"},"contentAddress(bytes input)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.memCopy(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"memCopy(uint256 dest, uint256 source, uint256 length)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.slice(bytes,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"slice(bytes b, uint256 from, uint256 to)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.sliceDestructive(bytes,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"sliceDestructive(bytes b, uint256 from, uint256 to)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.popLastByte(bytes)"},Object(n.b)("code",{class:"function-signature"},"popLastByte(bytes b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.equals(bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"equals(bytes lhs, bytes rhs)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.readAddress(bytes,uint256)"},Object(n.b)("code",{class:"function-signature"},"readAddress(bytes b, uint256 index)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.writeAddress(bytes,uint256,address)"},Object(n.b)("code",{class:"function-signature"},"writeAddress(bytes b, uint256 index, address input)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.readBytes32(bytes,uint256)"},Object(n.b)("code",{class:"function-signature"},"readBytes32(bytes b, uint256 index)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.writeBytes32(bytes,uint256,bytes32)"},Object(n.b)("code",{class:"function-signature"},"writeBytes32(bytes b, uint256 index, bytes32 input)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.readUint256(bytes,uint256)"},Object(n.b)("code",{class:"function-signature"},"readUint256(bytes b, uint256 index)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.writeUint256(bytes,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"writeUint256(bytes b, uint256 index, uint256 input)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.readBytes4(bytes,uint256)"},Object(n.b)("code",{class:"function-signature"},"readBytes4(bytes b, uint256 index)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.writeLength(bytes,uint256)"},Object(n.b)("code",{class:"function-signature"},"writeLength(bytes b, uint256 length)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.rawAddress(bytes)"}),Object(n.b)("code",{class:"function-signature"},"rawAddress(bytes input) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Gets the memory address for a byte array.\n@param input Byte array to lookup.\n@return memoryAddress Memory address of byte array. This\npoints to the header of the byte array which contains\nthe length."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.contentAddress(bytes)"}),Object(n.b)("code",{class:"function-signature"},"contentAddress(bytes input) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Gets the memory address for the contents of a byte array.\n@param input Byte array to lookup.\n@return memoryAddress Memory address of the contents of the byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.memCopy(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"memCopy(uint256 dest, uint256 source, uint256 length)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Copies ",Object(n.b)("inlineCode",{parentName:"p"},"length")," bytes from memory location ",Object(n.b)("inlineCode",{parentName:"p"},"source")," to ",Object(n.b)("inlineCode",{parentName:"p"},"dest"),".\n@param dest memory address to copy bytes to.\n@param source memory address to copy bytes from.\n@param length number of bytes to copy."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.slice(bytes,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"slice(bytes b, uint256 from, uint256 to) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Returns a slices from a byte array.\n@param b The byte array to take a slice from.\n@param from The starting index for the slice (inclusive).\n@param to The final index for the slice (exclusive).\n@return result The slice containing bytes at indices [from, to)"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.sliceDestructive(bytes,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"sliceDestructive(bytes b, uint256 from, uint256 to) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Returns a slice from a byte array without preserving the input.\n@param b The byte array to take a slice from. Will be destroyed in the process.\n@param from The starting index for the slice (inclusive).\n@param to The final index for the slice (exclusive).\n@return result The slice containing bytes at indices [from, to)\n@dev When ",Object(n.b)("inlineCode",{parentName:"p"},"from == 0"),", the original array will match the slice. In other cases its state will be corrupted."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.popLastByte(bytes)"}),Object(n.b)("code",{class:"function-signature"},"popLastByte(bytes b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes1")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Pops the last byte off of a byte array by modifying its length.\n@param b Byte array that will be modified.\n@return The byte that was popped off."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.equals(bytes,bytes)"}),Object(n.b)("code",{class:"function-signature"},"equals(bytes lhs, bytes rhs) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Tests equality of two byte arrays.\n@param lhs First byte array to compare.\n@param rhs Second byte array to compare.\n@return True if arrays are the same. False otherwise."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.readAddress(bytes,uint256)"}),Object(n.b)("code",{class:"function-signature"},"readAddress(bytes b, uint256 index) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Reads an address from a position in a byte array.\n@param b Byte array containing an address.\n@param index Index in byte array of address.\n@return address from byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.writeAddress(bytes,uint256,address)"}),Object(n.b)("code",{class:"function-signature"},"writeAddress(bytes b, uint256 index, address input)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Writes an address into a specific position in a byte array.\n@param b Byte array to insert address into.\n@param index Index in byte array of address.\n@param input Address to put into byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.readBytes32(bytes,uint256)"}),Object(n.b)("code",{class:"function-signature"},"readBytes32(bytes b, uint256 index) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Reads a bytes32 value from a position in a byte array.\n@param b Byte array containing a bytes32 value.\n@param index Index in byte array of bytes32 value.\n@return bytes32 value from byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.writeBytes32(bytes,uint256,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"writeBytes32(bytes b, uint256 index, bytes32 input)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Writes a bytes32 into a specific position in a byte array.\n@param b Byte array to insert ","<","input",">"," into.\n@param index Index in byte array of ","<","input",">",".\n@param input bytes32 to put into byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.readUint256(bytes,uint256)"}),Object(n.b)("code",{class:"function-signature"},"readUint256(bytes b, uint256 index) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Reads a uint256 value from a position in a byte array.\n@param b Byte array containing a uint256 value.\n@param index Index in byte array of uint256 value.\n@return uint256 value from byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.writeUint256(bytes,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"writeUint256(bytes b, uint256 index, uint256 input)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Writes a uint256 into a specific position in a byte array.\n@param b Byte array to insert ","<","input",">"," into.\n@param index Index in byte array of ","<","input",">",".\n@param input uint256 to put into byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.readBytes4(bytes,uint256)"}),Object(n.b)("code",{class:"function-signature"},"readBytes4(bytes b, uint256 index) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Reads an unpadded bytes4 value from a position in a byte array.\n@param b Byte array containing a bytes4 value.\n@param index Index in byte array of bytes4 value.\n@return bytes4 value from byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.writeLength(bytes,uint256)"}),Object(n.b)("code",{class:"function-signature"},"writeLength(bytes b, uint256 length)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Writes a new length to a byte array.\nDecreasing length will lead to removing the corresponding lower order bytes from the byte array.\nIncreasing length may lead to appending adjacent in-memory bytes to the end of the byte array.\n@param b Bytes array to write new length to.\n@param length New length of byte array."),Object(n.b)("h3",{id:"libconstants"},Object(n.b)("inlineCode",{parentName:"h3"},"LibConstants")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibConstants.constructor(address)"},Object(n.b)("code",{class:"function-signature"},"constructor(address exchange)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibConstants.constructor(address)"}),Object(n.b)("code",{class:"function-signature"},"constructor(address exchange)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("h3",{id:"libcoordinatorapproval"},Object(n.b)("inlineCode",{parentName:"h3"},"LibCoordinatorApproval")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibCoordinatorApproval.getCoordinatorApprovalHash(struct LibCoordinatorApproval.CoordinatorApproval)"},Object(n.b)("code",{class:"function-signature"},"getCoordinatorApprovalHash(struct LibCoordinatorApproval.CoordinatorApproval approval)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibCoordinatorApproval._hashCoordinatorApproval(struct LibCoordinatorApproval.CoordinatorApproval)"},Object(n.b)("code",{class:"function-signature"},"_hashCoordinatorApproval(struct LibCoordinatorApproval.CoordinatorApproval approval)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibEIP712CoordinatorDomain.constructor(uint256,address)"},Object(n.b)("code",{class:"function-signature"},"constructor(uint256 chainId, address verifyingContractAddressIfExists)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibEIP712CoordinatorDomain._hashEIP712CoordinatorMessage(bytes32)"},Object(n.b)("code",{class:"function-signature"},"_hashEIP712CoordinatorMessage(bytes32 hashStruct)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibCoordinatorApproval.getCoordinatorApprovalHash(struct LibCoordinatorApproval.CoordinatorApproval)"}),Object(n.b)("code",{class:"function-signature"},"getCoordinatorApprovalHash(struct LibCoordinatorApproval.CoordinatorApproval approval) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Calculates the EIP712 hash of the Coordinator approval mesasage using the domain\nseparator of this contract.\n@param approval Coordinator approval message containing the transaction hash, and transaction\nsignature.\n@return approvalHash EIP712 hash of the Coordinator approval message with the domain\nseparator of this contract."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibCoordinatorApproval._hashCoordinatorApproval(struct LibCoordinatorApproval.CoordinatorApproval)"}),Object(n.b)("code",{class:"function-signature"},"_hashCoordinatorApproval(struct LibCoordinatorApproval.CoordinatorApproval approval) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"libcoordinatorricherrors"},Object(n.b)("inlineCode",{parentName:"h3"},"LibCoordinatorRichErrors")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibCoordinatorRichErrors.SignatureError(enum LibCoordinatorRichErrors.SignatureErrorCodes,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"SignatureError(enum LibCoordinatorRichErrors.SignatureErrorCodes errorCode, bytes32 hash, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibCoordinatorRichErrors.InvalidOriginError(address)"},Object(n.b)("code",{class:"function-signature"},"InvalidOriginError(address expectedOrigin)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibCoordinatorRichErrors.InvalidApprovalSignatureError(bytes32,address)"},Object(n.b)("code",{class:"function-signature"},"InvalidApprovalSignatureError(bytes32 transactionHash, address approverAddress)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibCoordinatorRichErrors.SignatureError(enum LibCoordinatorRichErrors.SignatureErrorCodes,bytes32,bytes)"}),Object(n.b)("code",{class:"function-signature"},"SignatureError(enum LibCoordinatorRichErrors.SignatureErrorCodes errorCode, bytes32 hash, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibCoordinatorRichErrors.InvalidOriginError(address)"}),Object(n.b)("code",{class:"function-signature"},"InvalidOriginError(address expectedOrigin) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibCoordinatorRichErrors.InvalidApprovalSignatureError(bytes32,address)"}),Object(n.b)("code",{class:"function-signature"},"InvalidApprovalSignatureError(bytes32 transactionHash, address approverAddress) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"libeip712"},Object(n.b)("inlineCode",{parentName:"h3"},"LibEIP712")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibEIP712.hashEIP712Domain(string,string,uint256,address)"},Object(n.b)("code",{class:"function-signature"},"hashEIP712Domain(string name, string version, uint256 chainId, address verifyingContract)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibEIP712.hashEIP712Message(bytes32,bytes32)"},Object(n.b)("code",{class:"function-signature"},"hashEIP712Message(bytes32 eip712DomainHash, bytes32 hashStruct)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibEIP712.hashEIP712Domain(string,string,uint256,address)"}),Object(n.b)("code",{class:"function-signature"},"hashEIP712Domain(string name, string version, uint256 chainId, address verifyingContract) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates a EIP712 domain separator.\n@param name The EIP712 domain name.\n@param version The EIP712 domain version.\n@param verifyingContract The EIP712 verifying contract.\n@return EIP712 domain separator."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibEIP712.hashEIP712Message(bytes32,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"hashEIP712Message(bytes32 eip712DomainHash, bytes32 hashStruct) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates EIP712 encoding for a hash struct with a given domain hash.\n@param eip712DomainHash Hash of the domain domain separator data, computed\nwith getDomainHash().\n@param hashStruct The EIP712 hash struct.\n@return EIP712 hash applied to the given EIP712 Domain."),Object(n.b)("h3",{id:"libeip712coordinatordomain"},Object(n.b)("inlineCode",{parentName:"h3"},"LibEIP712CoordinatorDomain")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibEIP712CoordinatorDomain.constructor(uint256,address)"},Object(n.b)("code",{class:"function-signature"},"constructor(uint256 chainId, address verifyingContractAddressIfExists)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibEIP712CoordinatorDomain._hashEIP712CoordinatorMessage(bytes32)"},Object(n.b)("code",{class:"function-signature"},"_hashEIP712CoordinatorMessage(bytes32 hashStruct)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibEIP712CoordinatorDomain.constructor(uint256,address)"}),Object(n.b)("code",{class:"function-signature"},"constructor(uint256 chainId, address verifyingContractAddressIfExists)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibEIP712CoordinatorDomain._hashEIP712CoordinatorMessage(bytes32)"}),Object(n.b)("code",{class:"function-signature"},"_hashEIP712CoordinatorMessage(bytes32 hashStruct) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates EIP712 encoding for a hash struct in the EIP712 domain\nof this contract.\n@param hashStruct The EIP712 hash struct.\n@return result EIP712 hash applied to this EIP712 Domain."),Object(n.b)("h3",{id:"libeip712exchangedomain"},Object(n.b)("inlineCode",{parentName:"h3"},"LibEIP712ExchangeDomain")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibEIP712ExchangeDomain.constructor(uint256,address)"},Object(n.b)("code",{class:"function-signature"},"constructor(uint256 chainId, address verifyingContractAddressIfExists)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibEIP712ExchangeDomain.constructor(uint256,address)"}),Object(n.b)("code",{class:"function-signature"},"constructor(uint256 chainId, address verifyingContractAddressIfExists)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("h3",{id:"libfillresults"},Object(n.b)("inlineCode",{parentName:"h3"},"LibFillResults")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibFillResults.calculateFillResults(struct LibOrder.Order,uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"calculateFillResults(struct LibOrder.Order order, uint256 takerAssetFilledAmount, uint256 protocolFeeMultiplier, uint256 gasPrice)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibFillResults.calculateMatchedFillResults(struct LibOrder.Order,struct LibOrder.Order,uint256,uint256,uint256,uint256,bool)"},Object(n.b)("code",{class:"function-signature"},"calculateMatchedFillResults(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, uint256 leftOrderTakerAssetFilledAmount, uint256 rightOrderTakerAssetFilledAmount, uint256 protocolFeeMultiplier, uint256 gasPrice, bool shouldMaximallyFillOrders)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibFillResults.addFillResults(struct LibFillResults.FillResults,struct LibFillResults.FillResults)"},Object(n.b)("code",{class:"function-signature"},"addFillResults(struct LibFillResults.FillResults fillResults1, struct LibFillResults.FillResults fillResults2)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibFillResults.calculateFillResults(struct LibOrder.Order,uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"calculateFillResults(struct LibOrder.Order order, uint256 takerAssetFilledAmount, uint256 protocolFeeMultiplier, uint256 gasPrice) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates amounts filled and fees paid by maker and taker.\n@param order to be filled.\n@param takerAssetFilledAmount Amount of takerAsset that will be filled.\n@param protocolFeeMultiplier The current protocol fee of the exchange contract.\n@param gasPrice The gasprice of the transaction. This is provided so that the function call can continue\nto be pure rather than view.\n@return fillResults Amounts filled and fees paid by maker and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibFillResults.calculateMatchedFillResults(struct LibOrder.Order,struct LibOrder.Order,uint256,uint256,uint256,uint256,bool)"}),Object(n.b)("code",{class:"function-signature"},"calculateMatchedFillResults(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, uint256 leftOrderTakerAssetFilledAmount, uint256 rightOrderTakerAssetFilledAmount, uint256 protocolFeeMultiplier, uint256 gasPrice, bool shouldMaximallyFillOrders) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.MatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates fill amounts for the matched orders.\nEach order is filled at their respective price point. However, the calculations are\ncarried out as though the orders are both being filled at the right order","'","s price point.\nThe profit made by the leftOrder order goes to the taker (who matched the two orders).\n@param leftOrder First order to match.\n@param rightOrder Second order to match.\n@param leftOrderTakerAssetFilledAmount Amount of left order already filled.\n@param rightOrderTakerAssetFilledAmount Amount of right order already filled.\n@param protocolFeeMultiplier The current protocol fee of the exchange contract.\n@param gasPrice The gasprice of the transaction. This is provided so that the function call can continue\nto be pure rather than view.\n@param shouldMaximallyFillOrders A value that indicates whether or not this calculation should use\nthe maximal fill order matching strategy.\n@param matchedFillResults Amounts to fill and fees to pay by maker and taker of matched orders."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibFillResults.addFillResults(struct LibFillResults.FillResults,struct LibFillResults.FillResults)"}),Object(n.b)("code",{class:"function-signature"},"addFillResults(struct LibFillResults.FillResults fillResults1, struct LibFillResults.FillResults fillResults2) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Adds properties of both FillResults instances.\n@param fillResults1 The first FillResults.\n@param fillResults2 The second FillResults.\n@return The sum of both fill results."),Object(n.b)("h3",{id:"libmath"},Object(n.b)("inlineCode",{parentName:"h3"},"LibMath")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMath.safeGetPartialAmountFloor(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"safeGetPartialAmountFloor(uint256 numerator, uint256 denominator, uint256 target)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMath.safeGetPartialAmountCeil(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"safeGetPartialAmountCeil(uint256 numerator, uint256 denominator, uint256 target)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMath.getPartialAmountFloor(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"getPartialAmountFloor(uint256 numerator, uint256 denominator, uint256 target)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMath.getPartialAmountCeil(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"getPartialAmountCeil(uint256 numerator, uint256 denominator, uint256 target)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMath.isRoundingErrorFloor(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"isRoundingErrorFloor(uint256 numerator, uint256 denominator, uint256 target)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMath.isRoundingErrorCeil(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"isRoundingErrorCeil(uint256 numerator, uint256 denominator, uint256 target)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMath.safeGetPartialAmountFloor(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"safeGetPartialAmountFloor(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates partial value given a numerator and denominator rounded down.\nReverts if rounding error is ",">","= 0.1%\n@param numerator Numerator.\n@param denominator Denominator.\n@param target Value to calculate partial of.\n@return Partial value of target rounded down."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMath.safeGetPartialAmountCeil(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"safeGetPartialAmountCeil(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates partial value given a numerator and denominator rounded down.\nReverts if rounding error is ",">","= 0.1%\n@param numerator Numerator.\n@param denominator Denominator.\n@param target Value to calculate partial of.\n@return Partial value of target rounded up."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMath.getPartialAmountFloor(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"getPartialAmountFloor(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates partial value given a numerator and denominator rounded down.\n@param numerator Numerator.\n@param denominator Denominator.\n@param target Value to calculate partial of.\n@return Partial value of target rounded down."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMath.getPartialAmountCeil(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"getPartialAmountCeil(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates partial value given a numerator and denominator rounded down.\n@param numerator Numerator.\n@param denominator Denominator.\n@param target Value to calculate partial of.\n@return Partial value of target rounded up."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMath.isRoundingErrorFloor(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"isRoundingErrorFloor(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Checks if rounding error ",">","= 0.1% when rounding down.\n@param numerator Numerator.\n@param denominator Denominator.\n@param target Value to multiply with numerator/denominator.\n@return Rounding error is present."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMath.isRoundingErrorCeil(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"isRoundingErrorCeil(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Checks if rounding error ",">","= 0.1% when rounding up.\n@param numerator Numerator.\n@param denominator Denominator.\n@param target Value to multiply with numerator/denominator.\n@return Rounding error is present."),Object(n.b)("h3",{id:"libmathricherrors"},Object(n.b)("inlineCode",{parentName:"h3"},"LibMathRichErrors")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMathRichErrors.DivisionByZeroError()"},Object(n.b)("code",{class:"function-signature"},"DivisionByZeroError()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMathRichErrors.RoundingError(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"RoundingError(uint256 numerator, uint256 denominator, uint256 target)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMathRichErrors.DivisionByZeroError()"}),Object(n.b)("code",{class:"function-signature"},"DivisionByZeroError() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMathRichErrors.RoundingError(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"RoundingError(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"liborder"},Object(n.b)("inlineCode",{parentName:"h3"},"LibOrder")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibOrder.getTypedDataHash(struct LibOrder.Order,bytes32)"},Object(n.b)("code",{class:"function-signature"},"getTypedDataHash(struct LibOrder.Order order, bytes32 eip712ExchangeDomainHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibOrder.getStructHash(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"getStructHash(struct LibOrder.Order order)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibOrder.getTypedDataHash(struct LibOrder.Order,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"getTypedDataHash(struct LibOrder.Order order, bytes32 eip712ExchangeDomainHash) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates the EIP712 typed data hash of an order with a given domain separator.\n@param order The order structure.\n@return EIP712 typed data hash of the order."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibOrder.getStructHash(struct LibOrder.Order)"}),Object(n.b)("code",{class:"function-signature"},"getStructHash(struct LibOrder.Order order) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates EIP712 hash of the order struct.\n@param order The order structure.\n@return EIP712 hash of the order struct."),Object(n.b)("h3",{id:"libreentrancyguardricherrors"},Object(n.b)("inlineCode",{parentName:"h3"},"LibReentrancyGuardRichErrors")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibReentrancyGuardRichErrors.IllegalReentrancyError()"},Object(n.b)("code",{class:"function-signature"},"IllegalReentrancyError()"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibReentrancyGuardRichErrors.IllegalReentrancyError()"}),Object(n.b)("code",{class:"function-signature"},"IllegalReentrancyError() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"libsafemath"},Object(n.b)("inlineCode",{parentName:"h3"},"LibSafeMath")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMath.safeMul(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"safeMul(uint256 a, uint256 b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMath.safeDiv(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"safeDiv(uint256 a, uint256 b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMath.safeSub(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"safeSub(uint256 a, uint256 b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMath.safeAdd(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"safeAdd(uint256 a, uint256 b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMath.max256(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"max256(uint256 a, uint256 b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMath.min256(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"min256(uint256 a, uint256 b)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMath.safeMul(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"safeMul(uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMath.safeDiv(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"safeDiv(uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMath.safeSub(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"safeSub(uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMath.safeAdd(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"safeAdd(uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMath.max256(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"max256(uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMath.min256(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"min256(uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"libsafemathricherrors"},Object(n.b)("inlineCode",{parentName:"h3"},"LibSafeMathRichErrors")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMathRichErrors.Uint256BinOpError(enum LibSafeMathRichErrors.BinOpErrorCodes,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"Uint256BinOpError(enum LibSafeMathRichErrors.BinOpErrorCodes errorCode, uint256 a, uint256 b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMathRichErrors.Uint256DowncastError(enum LibSafeMathRichErrors.DowncastErrorCodes,uint256)"},Object(n.b)("code",{class:"function-signature"},"Uint256DowncastError(enum LibSafeMathRichErrors.DowncastErrorCodes errorCode, uint256 a)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMathRichErrors.Uint256BinOpError(enum LibSafeMathRichErrors.BinOpErrorCodes,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"Uint256BinOpError(enum LibSafeMathRichErrors.BinOpErrorCodes errorCode, uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMathRichErrors.Uint256DowncastError(enum LibSafeMathRichErrors.DowncastErrorCodes,uint256)"}),Object(n.b)("code",{class:"function-signature"},"Uint256DowncastError(enum LibSafeMathRichErrors.DowncastErrorCodes errorCode, uint256 a) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"libzeroextransaction"},Object(n.b)("inlineCode",{parentName:"h3"},"LibZeroExTransaction")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibZeroExTransaction.getTypedDataHash(struct LibZeroExTransaction.ZeroExTransaction,bytes32)"},Object(n.b)("code",{class:"function-signature"},"getTypedDataHash(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 eip712ExchangeDomainHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibZeroExTransaction.getStructHash(struct LibZeroExTransaction.ZeroExTransaction)"},Object(n.b)("code",{class:"function-signature"},"getStructHash(struct LibZeroExTransaction.ZeroExTransaction transaction)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibZeroExTransaction.getTypedDataHash(struct LibZeroExTransaction.ZeroExTransaction,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"getTypedDataHash(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 eip712ExchangeDomainHash) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates the EIP712 typed data hash of a transaction with a given domain separator.\n@param transaction 0x transaction structure.\n@return EIP712 typed data hash of the transaction."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibZeroExTransaction.getStructHash(struct LibZeroExTransaction.ZeroExTransaction)"}),Object(n.b)("code",{class:"function-signature"},"getStructHash(struct LibZeroExTransaction.ZeroExTransaction transaction) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates EIP712 hash of the 0x transaction struct.\n@param transaction 0x transaction structure.\n@return EIP712 hash of the transaction struct."),Object(n.b)("h3",{id:"mixincoordinatorapprovalverifier"},Object(n.b)("inlineCode",{parentName:"h3"},"MixinCoordinatorApprovalVerifier")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinCoordinatorApprovalVerifier.assertValidCoordinatorApprovals(struct LibZeroExTransaction.ZeroExTransaction,address,bytes,bytes[])"},Object(n.b)("code",{class:"function-signature"},"assertValidCoordinatorApprovals(struct LibZeroExTransaction.ZeroExTransaction transaction, address txOrigin, bytes transactionSignature, bytes[] approvalSignatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinCoordinatorApprovalVerifier.decodeOrdersFromFillData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeOrdersFromFillData(bytes data)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinCoordinatorApprovalVerifier._assertValidTransactionOrdersApproval(struct LibZeroExTransaction.ZeroExTransaction,struct LibOrder.Order[],address,bytes,bytes[])"},Object(n.b)("code",{class:"function-signature"},"_assertValidTransactionOrdersApproval(struct LibZeroExTransaction.ZeroExTransaction transaction, struct LibOrder.Order[] orders, address txOrigin, bytes transactionSignature, bytes[] approvalSignatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ICoordinatorSignatureValidator.getSignerAddress(bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"getSignerAddress(bytes32 hash, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibEIP712ExchangeDomain.constructor(uint256,address)"},Object(n.b)("code",{class:"function-signature"},"constructor(uint256 chainId, address verifyingContractAddressIfExists)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibCoordinatorApproval.getCoordinatorApprovalHash(struct LibCoordinatorApproval.CoordinatorApproval)"},Object(n.b)("code",{class:"function-signature"},"getCoordinatorApprovalHash(struct LibCoordinatorApproval.CoordinatorApproval approval)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibCoordinatorApproval._hashCoordinatorApproval(struct LibCoordinatorApproval.CoordinatorApproval)"},Object(n.b)("code",{class:"function-signature"},"_hashCoordinatorApproval(struct LibCoordinatorApproval.CoordinatorApproval approval)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibEIP712CoordinatorDomain._hashEIP712CoordinatorMessage(bytes32)"},Object(n.b)("code",{class:"function-signature"},"_hashEIP712CoordinatorMessage(bytes32 hashStruct)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinCoordinatorApprovalVerifier.assertValidCoordinatorApprovals(struct LibZeroExTransaction.ZeroExTransaction,address,bytes,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"assertValidCoordinatorApprovals(struct LibZeroExTransaction.ZeroExTransaction transaction, address txOrigin, bytes transactionSignature, bytes[] approvalSignatures)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Validates that the 0x transaction has been approved by all of the feeRecipients\nthat correspond to each order in the transaction","'","s Exchange calldata.\n@param transaction 0x transaction containing salt, signerAddress, and data.\n@param txOrigin Required signer of Ethereum transaction calling this function.\n@param transactionSignature Proof that the transaction has been signed by the signer.\n@param approvalSignatures Array of signatures that correspond to the feeRecipients of each\norder in the transaction","'","s Exchange calldata."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinCoordinatorApprovalVerifier.decodeOrdersFromFillData(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeOrdersFromFillData(bytes data) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibOrder.Order[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decodes the orders from Exchange calldata representing any fill method.\n@param data Exchange calldata representing a fill method.\n@return orders The orders from the Exchange calldata."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinCoordinatorApprovalVerifier._assertValidTransactionOrdersApproval(struct LibZeroExTransaction.ZeroExTransaction,struct LibOrder.Order[],address,bytes,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"_assertValidTransactionOrdersApproval(struct LibZeroExTransaction.ZeroExTransaction transaction, struct LibOrder.Order[] orders, address txOrigin, bytes transactionSignature, bytes[] approvalSignatures)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Validates that the feeRecipients of a batch of order have approved a 0x transaction.\n@param transaction 0x transaction containing salt, signerAddress, and data.\n@param orders Array of order structs containing order specifications.\n@param txOrigin Required signer of Ethereum transaction calling this function.\n@param transactionSignature Proof that the transaction has been signed by the signer.\n@param approvalSignatures Array of signatures that correspond to the feeRecipients of each order."),Object(n.b)("h3",{id:"mixincoordinatorcore"},Object(n.b)("inlineCode",{parentName:"h3"},"MixinCoordinatorCore")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinCoordinatorCore.fallback()"},Object(n.b)("code",{class:"function-signature"},"fallback()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinCoordinatorCore.executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,address,bytes,bytes[])"},Object(n.b)("code",{class:"function-signature"},"executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, address txOrigin, bytes transactionSignature, bytes[] approvalSignatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ICoordinatorApprovalVerifier.assertValidCoordinatorApprovals(struct LibZeroExTransaction.ZeroExTransaction,address,bytes,bytes[])"},Object(n.b)("code",{class:"function-signature"},"assertValidCoordinatorApprovals(struct LibZeroExTransaction.ZeroExTransaction transaction, address txOrigin, bytes transactionSignature, bytes[] approvalSignatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ICoordinatorApprovalVerifier.decodeOrdersFromFillData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeOrdersFromFillData(bytes data)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibConstants.constructor(address)"},Object(n.b)("code",{class:"function-signature"},"constructor(address exchange)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._refundNonZeroBalanceIfEnabled()"},Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalanceIfEnabled()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._refundNonZeroBalance()"},Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalance()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._disableRefund()"},Object(n.b)("code",{class:"function-signature"},"_disableRefund()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._enableAndRefundNonZeroBalance()"},Object(n.b)("code",{class:"function-signature"},"_enableAndRefundNonZeroBalance()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._areRefundsDisabled()"},Object(n.b)("code",{class:"function-signature"},"_areRefundsDisabled()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ReentrancyGuard._lockMutexOrThrowIfAlreadyLocked()"},Object(n.b)("code",{class:"function-signature"},"_lockMutexOrThrowIfAlreadyLocked()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ReentrancyGuard._unlockMutex()"},Object(n.b)("code",{class:"function-signature"},"_unlockMutex()"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinCoordinatorCore.fallback()"}),Object(n.b)("code",{class:"function-signature"},"fallback()"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"A payable fallback function that makes this contract ",'"',"payable",'"',". This is necessary to allow\nthis contract to gracefully handle refunds from the Exchange."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinCoordinatorCore.executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,address,bytes,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, address txOrigin, bytes transactionSignature, bytes[] approvalSignatures)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes a 0x transaction that has been signed by the feeRecipients that correspond to\neach order in the transaction","'","s Exchange calldata.\n@param transaction 0x transaction containing salt, signerAddress, and data.\n@param txOrigin Required signer of Ethereum transaction calling this function.\n@param transactionSignature Proof that the transaction has been signed by the signer.\n@param approvalSignatures Array of signatures that correspond to the feeRecipients of each\norder in the transaction","'","s Exchange calldata."),Object(n.b)("h3",{id:"mixinsignaturevalidator"},Object(n.b)("inlineCode",{parentName:"h3"},"MixinSignatureValidator")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinSignatureValidator.getSignerAddress(bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"getSignerAddress(bytes32 hash, bytes signature)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinSignatureValidator.getSignerAddress(bytes32,bytes)"}),Object(n.b)("code",{class:"function-signature"},"getSignerAddress(bytes32 hash, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Recovers the address of a signer given a hash and signature.\n@param hash Any 32 byte hash.\n@param signature Proof that the hash has been signed by signer.\n@return signerAddress Address of the signer."),Object(n.b)("h3",{id:"reentrancyguard"},Object(n.b)("inlineCode",{parentName:"h3"},"ReentrancyGuard")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#ReentrancyGuard._lockMutexOrThrowIfAlreadyLocked()"},Object(n.b)("code",{class:"function-signature"},"_lockMutexOrThrowIfAlreadyLocked()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ReentrancyGuard._unlockMutex()"},Object(n.b)("code",{class:"function-signature"},"_unlockMutex()"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ReentrancyGuard._lockMutexOrThrowIfAlreadyLocked()"}),Object(n.b)("code",{class:"function-signature"},"_lockMutexOrThrowIfAlreadyLocked()"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ReentrancyGuard._unlockMutex()"}),Object(n.b)("code",{class:"function-signature"},"_unlockMutex()"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"refundable"},Object(n.b)("inlineCode",{parentName:"h3"},"Refundable")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#Refundable._refundNonZeroBalanceIfEnabled()"},Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalanceIfEnabled()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#Refundable._refundNonZeroBalance()"},Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalance()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#Refundable._disableRefund()"},Object(n.b)("code",{class:"function-signature"},"_disableRefund()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#Refundable._enableAndRefundNonZeroBalance()"},Object(n.b)("code",{class:"function-signature"},"_enableAndRefundNonZeroBalance()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#Refundable._areRefundsDisabled()"},Object(n.b)("code",{class:"function-signature"},"_areRefundsDisabled()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ReentrancyGuard._lockMutexOrThrowIfAlreadyLocked()"},Object(n.b)("code",{class:"function-signature"},"_lockMutexOrThrowIfAlreadyLocked()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ReentrancyGuard._unlockMutex()"},Object(n.b)("code",{class:"function-signature"},"_unlockMutex()"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"Refundable._refundNonZeroBalanceIfEnabled()"}),Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalanceIfEnabled()"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"Refundable._refundNonZeroBalance()"}),Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalance()"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"Refundable._disableRefund()"}),Object(n.b)("code",{class:"function-signature"},"_disableRefund()"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"Refundable._enableAndRefundNonZeroBalance()"}),Object(n.b)("code",{class:"function-signature"},"_enableAndRefundNonZeroBalance()"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"Refundable._areRefundsDisabled()"}),Object(n.b)("code",{class:"function-signature"},"_areRefundsDisabled() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal"))))}l.isMDXComponent=!0},529:function(e,t,r){"use strict";r.d(t,"a",(function(){return d})),r.d(t,"b",(function(){return h}));var a=r(0),s=r.n(a);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,s=function(e,t){if(null==e)return{};var r,a,s={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var b=s.a.createContext({}),l=function(e){var t=s.a.useContext(b),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},d=function(e){var t=l(e.components);return s.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},O=s.a.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,i=e.parentName,b=o(e,["components","mdxType","originalType","parentName"]),d=l(r),O=a,h=d["".concat(i,".").concat(O)]||d[O]||u[O]||n;return r?s.a.createElement(h,c(c({ref:t},b),{},{components:r})):s.a.createElement(h,c({ref:t},b))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,i=new Array(n);i[0]=O;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var b=2;b<n;b++)i[b]=r[b];return s.a.createElement.apply(null,i)}return s.a.createElement.apply(null,r)}O.displayName="MDXCreateElement"}}]);