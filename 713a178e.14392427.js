(window.webpackJsonp=window.webpackJsonp||[]).push([[193],{249:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return i})),r.d(t,"rightToc",(function(){return b})),r.d(t,"default",(function(){return d}));var s=r(2),a=r(6),n=(r(0),r(530)),c={title:"Src"},i={unversionedId:"api/contracts/0x/dev-utils/contracts/src",id:"api/contracts/0x/dev-utils/contracts/src",isDocsHomePage:!1,title:"Src",description:"Contracts",source:"@site/../docs/api/contracts/0x/dev-utils/contracts/src.md",permalink:"/docs/api/contracts/0x/dev-utils/contracts/src",editUrl:"https://github.com/AugurProject/augur/edit/documentation/augur.sh/../docs/api/contracts/0x/dev-utils/contracts/src.md"},b=[{value:"Contracts",id:"contracts",children:[{value:"<code>DeploymentConstants</code>",id:"deploymentconstants",children:[]},{value:"<code>DevUtils</code>",id:"devutils",children:[]},{value:"<code>EthBalanceChecker</code>",id:"ethbalancechecker",children:[]},{value:"<code>IAssetData</code>",id:"iassetdata",children:[]},{value:"<code>IAssetProxy</code>",id:"iassetproxy",children:[]},{value:"<code>IAssetProxyDispatcher</code>",id:"iassetproxydispatcher",children:[]},{value:"<code>IChai</code>",id:"ichai",children:[]},{value:"<code>IERC1155</code>",id:"ierc1155",children:[]},{value:"<code>IERC20Token</code>",id:"ierc20token",children:[]},{value:"<code>IERC721Token</code>",id:"ierc721token",children:[]},{value:"<code>IExchange</code>",id:"iexchange",children:[]},{value:"<code>IExchangeCore</code>",id:"iexchangecore",children:[]},{value:"<code>IMatchOrders</code>",id:"imatchorders",children:[]},{value:"<code>IProtocolFees</code>",id:"iprotocolfees",children:[]},{value:"<code>ISignatureValidator</code>",id:"isignaturevalidator",children:[]},{value:"<code>ITransactions</code>",id:"itransactions",children:[]},{value:"<code>ITransferSimulator</code>",id:"itransfersimulator",children:[]},{value:"<code>IWrapperFunctions</code>",id:"iwrapperfunctions",children:[]},{value:"<code>LibAssetData</code>",id:"libassetdata",children:[]},{value:"<code>LibBytes</code>",id:"libbytes",children:[]},{value:"<code>LibEIP712</code>",id:"libeip712",children:[]},{value:"<code>LibEIP712ExchangeDomain</code>",id:"libeip712exchangedomain",children:[]},{value:"<code>LibExchangeRichErrorDecoder</code>",id:"libexchangericherrordecoder",children:[]},{value:"<code>LibExchangeRichErrors</code>",id:"libexchangericherrors",children:[]},{value:"<code>LibFillResults</code>",id:"libfillresults",children:[]},{value:"<code>LibMath</code>",id:"libmath",children:[]},{value:"<code>LibMathRichErrors</code>",id:"libmathricherrors",children:[]},{value:"<code>LibOrder</code>",id:"liborder",children:[]},{value:"<code>LibSafeMath</code>",id:"libsafemath",children:[]},{value:"<code>LibSafeMathRichErrors</code>",id:"libsafemathricherrors",children:[]},{value:"<code>LibZeroExTransaction</code>",id:"libzeroextransaction",children:[]},{value:"<code>OrderTransferSimulationUtils</code>",id:"ordertransfersimulationutils",children:[]},{value:"<code>OrderValidationUtils</code>",id:"ordervalidationutils",children:[]},{value:"<code>PotLike</code>",id:"potlike",children:[]}]}],o={rightToc:b};function d(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(n.b)("wrapper",Object(s.a)({},o,r,{components:t,mdxType:"MDXLayout"}),Object(n.b)("div",{class:"contracts"},Object(n.b)("h2",{id:"contracts"},"Contracts"),Object(n.b)("h3",{id:"deploymentconstants"},Object(n.b)("inlineCode",{parentName:"h3"},"DeploymentConstants")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#DeploymentConstants._getKyberNetworkProxyAddress()"},Object(n.b)("code",{class:"function-signature"},"_getKyberNetworkProxyAddress()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#DeploymentConstants._getWethAddress()"},Object(n.b)("code",{class:"function-signature"},"_getWethAddress()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#DeploymentConstants._getUniswapExchangeFactoryAddress()"},Object(n.b)("code",{class:"function-signature"},"_getUniswapExchangeFactoryAddress()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#DeploymentConstants._getEth2DaiAddress()"},Object(n.b)("code",{class:"function-signature"},"_getEth2DaiAddress()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#DeploymentConstants._getERC20BridgeProxyAddress()"},Object(n.b)("code",{class:"function-signature"},"_getERC20BridgeProxyAddress()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#DeploymentConstants._getDaiAddress()"},Object(n.b)("code",{class:"function-signature"},"_getDaiAddress()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#DeploymentConstants._getChaiAddress()"},Object(n.b)("code",{class:"function-signature"},"_getChaiAddress()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#DeploymentConstants._getDevUtilsAddress()"},Object(n.b)("code",{class:"function-signature"},"_getDevUtilsAddress()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#DeploymentConstants._getDydxAddress()"},Object(n.b)("code",{class:"function-signature"},"_getDydxAddress()"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"DeploymentConstants._getKyberNetworkProxyAddress()"}),Object(n.b)("code",{class:"function-signature"},"_getKyberNetworkProxyAddress() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Overridable way to get the ",Object(n.b)("inlineCode",{parentName:"p"},"KyberNetworkProxy")," address.\n@return kyberAddress The ",Object(n.b)("inlineCode",{parentName:"p"},"IKyberNetworkProxy")," address."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"DeploymentConstants._getWethAddress()"}),Object(n.b)("code",{class:"function-signature"},"_getWethAddress() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Overridable way to get the WETH address.\n@return wethAddress The WETH address."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"DeploymentConstants._getUniswapExchangeFactoryAddress()"}),Object(n.b)("code",{class:"function-signature"},"_getUniswapExchangeFactoryAddress() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Overridable way to get the ",Object(n.b)("inlineCode",{parentName:"p"},"UniswapExchangeFactory")," address.\n@return uniswapAddress The ",Object(n.b)("inlineCode",{parentName:"p"},"UniswapExchangeFactory")," address."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"DeploymentConstants._getEth2DaiAddress()"}),Object(n.b)("code",{class:"function-signature"},"_getEth2DaiAddress() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"An overridable way to retrieve the Eth2Dai ",Object(n.b)("inlineCode",{parentName:"p"},"MatchingMarket")," contract.\n@return eth2daiAddress The Eth2Dai ",Object(n.b)("inlineCode",{parentName:"p"},"MatchingMarket")," contract."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"DeploymentConstants._getERC20BridgeProxyAddress()"}),Object(n.b)("code",{class:"function-signature"},"_getERC20BridgeProxyAddress() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"An overridable way to retrieve the ",Object(n.b)("inlineCode",{parentName:"p"},"ERC20BridgeProxy")," contract.\n@return erc20BridgeProxyAddress The ",Object(n.b)("inlineCode",{parentName:"p"},"ERC20BridgeProxy")," contract."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"DeploymentConstants._getDaiAddress()"}),Object(n.b)("code",{class:"function-signature"},"_getDaiAddress() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"An overridable way to retrieve the ",Object(n.b)("inlineCode",{parentName:"p"},"Dai")," contract.\n@return daiAddress The ",Object(n.b)("inlineCode",{parentName:"p"},"Dai")," contract."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"DeploymentConstants._getChaiAddress()"}),Object(n.b)("code",{class:"function-signature"},"_getChaiAddress() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"An overridable way to retrieve the ",Object(n.b)("inlineCode",{parentName:"p"},"Chai")," contract.\n@return chaiAddress The ",Object(n.b)("inlineCode",{parentName:"p"},"Chai")," contract."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"DeploymentConstants._getDevUtilsAddress()"}),Object(n.b)("code",{class:"function-signature"},"_getDevUtilsAddress() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"An overridable way to retrieve the 0x ",Object(n.b)("a",Object(s.a)({parentName:"p"},{href:"#devutils"}),Object(n.b)("inlineCode",{parentName:"a"},"DevUtils"))," contract address.\n@return devUtils The 0x ",Object(n.b)("a",Object(s.a)({parentName:"p"},{href:"#devutils"}),Object(n.b)("inlineCode",{parentName:"a"},"DevUtils"))," contract address."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"DeploymentConstants._getDydxAddress()"}),Object(n.b)("code",{class:"function-signature"},"_getDydxAddress() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Overridable way to get the DyDx contract.\n@return exchange The DyDx exchange contract."),Object(n.b)("h3",{id:"devutils"},Object(n.b)("inlineCode",{parentName:"h3"},"DevUtils")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#DevUtils.constructor(address,address)"},Object(n.b)("code",{class:"function-signature"},"constructor(address _exchange, address _chaiBridge)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#DevUtils.getOrderHash(struct LibOrder.Order,uint256,address)"},Object(n.b)("code",{class:"function-signature"},"getOrderHash(struct LibOrder.Order order, uint256 chainId, address exchange)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#DevUtils.getTransactionHash(struct LibZeroExTransaction.ZeroExTransaction,uint256,address)"},Object(n.b)("code",{class:"function-signature"},"getTransactionHash(struct LibZeroExTransaction.ZeroExTransaction transaction, uint256 chainId, address exchange)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#EthBalanceChecker.getEthBalances(address[])"},Object(n.b)("code",{class:"function-signature"},"getEthBalances(address[] addresses)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibEIP712ExchangeDomain.constructor(uint256,address)"},Object(n.b)("code",{class:"function-signature"},"constructor(uint256 chainId, address verifyingContractAddressIfExists)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#OrderValidationUtils.getOrderRelevantState(struct LibOrder.Order,bytes)"},Object(n.b)("code",{class:"function-signature"},"getOrderRelevantState(struct LibOrder.Order order, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#OrderValidationUtils.getOrderRelevantStates(struct LibOrder.Order[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"getOrderRelevantStates(struct LibOrder.Order[] orders, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#OrderValidationUtils.getTransferableAssetAmount(address,bytes)"},Object(n.b)("code",{class:"function-signature"},"getTransferableAssetAmount(address ownerAddress, bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#OrderValidationUtils._isAssetDataValid(bytes)"},Object(n.b)("code",{class:"function-signature"},"_isAssetDataValid(bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#OrderValidationUtils._isAssetDataDuplicated(bytes[],uint256)"},Object(n.b)("code",{class:"function-signature"},"_isAssetDataDuplicated(bytes[] nestedAssetData, uint256 startIdx)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#OrderTransferSimulationUtils.constructor(address)"},Object(n.b)("code",{class:"function-signature"},"constructor(address _exchange)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#OrderTransferSimulationUtils.getSimulatedOrderMakerTransferResults(struct LibOrder.Order,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"getSimulatedOrderMakerTransferResults(struct LibOrder.Order order, address takerAddress, uint256 takerAssetFillAmount)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#OrderTransferSimulationUtils.getSimulatedOrderTransferResults(struct LibOrder.Order,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"getSimulatedOrderTransferResults(struct LibOrder.Order order, address takerAddress, uint256 takerAssetFillAmount)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#OrderTransferSimulationUtils.getSimulatedOrdersTransferResults(struct LibOrder.Order[],address[],uint256[])"},Object(n.b)("code",{class:"function-signature"},"getSimulatedOrdersTransferResults(struct LibOrder.Order[] orders, address[] takerAddresses, uint256[] takerAssetFillAmounts)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#OrderTransferSimulationUtils._simulateTransferFromCalls(bytes[],address[],address[],uint256[])"},Object(n.b)("code",{class:"function-signature"},"_simulateTransferFromCalls(bytes[] assetData, address[] fromAddresses, address[] toAddresses, uint256[] amounts)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeSignatureError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeSignatureError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeEIP1271SignatureError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeEIP1271SignatureError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeSignatureValidatorNotApprovedError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeSignatureValidatorNotApprovedError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeSignatureWalletError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeSignatureWalletError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeOrderStatusError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeOrderStatusError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeExchangeInvalidContextError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeExchangeInvalidContextError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeFillError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeFillError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeOrderEpochError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeOrderEpochError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeAssetProxyExistsError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeAssetProxyExistsError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeAssetProxyDispatchError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeAssetProxyDispatchError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeAssetProxyTransferError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeAssetProxyTransferError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeNegativeSpreadError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeNegativeSpreadError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeTransactionError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeTransactionError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeTransactionExecutionError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeTransactionExecutionError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeIncompleteFillError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeIncompleteFillError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.getBalance(address,bytes)"},Object(n.b)("code",{class:"function-signature"},"getBalance(address ownerAddress, bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.getBatchBalances(address,bytes[])"},Object(n.b)("code",{class:"function-signature"},"getBatchBalances(address ownerAddress, bytes[] assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.getAssetProxyAllowance(address,bytes)"},Object(n.b)("code",{class:"function-signature"},"getAssetProxyAllowance(address ownerAddress, bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.getBatchAssetProxyAllowances(address,bytes[])"},Object(n.b)("code",{class:"function-signature"},"getBatchAssetProxyAllowances(address ownerAddress, bytes[] assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.getBalanceAndAssetProxyAllowance(address,bytes)"},Object(n.b)("code",{class:"function-signature"},"getBalanceAndAssetProxyAllowance(address ownerAddress, bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.getBatchBalancesAndAssetProxyAllowances(address,bytes[])"},Object(n.b)("code",{class:"function-signature"},"getBatchBalancesAndAssetProxyAllowances(address ownerAddress, bytes[] assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.decodeAssetProxyId(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeAssetProxyId(bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.encodeERC20AssetData(address)"},Object(n.b)("code",{class:"function-signature"},"encodeERC20AssetData(address tokenAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.decodeERC20AssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeERC20AssetData(bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.encodeERC721AssetData(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"encodeERC721AssetData(address tokenAddress, uint256 tokenId)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.decodeERC721AssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeERC721AssetData(bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.encodeERC1155AssetData(address,uint256[],uint256[],bytes)"},Object(n.b)("code",{class:"function-signature"},"encodeERC1155AssetData(address tokenAddress, uint256[] tokenIds, uint256[] tokenValues, bytes callbackData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.decodeERC1155AssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeERC1155AssetData(bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.encodeMultiAssetData(uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"encodeMultiAssetData(uint256[] amounts, bytes[] nestedAssetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.decodeMultiAssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeMultiAssetData(bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.encodeStaticCallAssetData(address,bytes,bytes32)"},Object(n.b)("code",{class:"function-signature"},"encodeStaticCallAssetData(address staticCallTargetAddress, bytes staticCallData, bytes32 expectedReturnDataHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.decodeStaticCallAssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeStaticCallAssetData(bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.decodeERC20BridgeAssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeERC20BridgeAssetData(bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.revertIfInvalidAssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"revertIfInvalidAssetData(bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData._erc20BalanceOf(address,address)"},Object(n.b)("code",{class:"function-signature"},"_erc20BalanceOf(address tokenAddress, address ownerAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData._convertChaiToDaiAmount(uint256)"},Object(n.b)("code",{class:"function-signature"},"_convertChaiToDaiAmount(uint256 chaiAmount)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getKyberNetworkProxyAddress()"},Object(n.b)("code",{class:"function-signature"},"_getKyberNetworkProxyAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getWethAddress()"},Object(n.b)("code",{class:"function-signature"},"_getWethAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getUniswapExchangeFactoryAddress()"},Object(n.b)("code",{class:"function-signature"},"_getUniswapExchangeFactoryAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getEth2DaiAddress()"},Object(n.b)("code",{class:"function-signature"},"_getEth2DaiAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getERC20BridgeProxyAddress()"},Object(n.b)("code",{class:"function-signature"},"_getERC20BridgeProxyAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getDaiAddress()"},Object(n.b)("code",{class:"function-signature"},"_getDaiAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getChaiAddress()"},Object(n.b)("code",{class:"function-signature"},"_getChaiAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getDevUtilsAddress()"},Object(n.b)("code",{class:"function-signature"},"_getDevUtilsAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getDydxAddress()"},Object(n.b)("code",{class:"function-signature"},"_getDydxAddress()"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"DevUtils.constructor(address,address)"}),Object(n.b)("code",{class:"function-signature"},"constructor(address _exchange, address _chaiBridge)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"DevUtils.getOrderHash(struct LibOrder.Order,uint256,address)"}),Object(n.b)("code",{class:"function-signature"},"getOrderHash(struct LibOrder.Order order, uint256 chainId, address exchange) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"DevUtils.getTransactionHash(struct LibZeroExTransaction.ZeroExTransaction,uint256,address)"}),Object(n.b)("code",{class:"function-signature"},"getTransactionHash(struct LibZeroExTransaction.ZeroExTransaction transaction, uint256 chainId, address exchange) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("h3",{id:"ethbalancechecker"},Object(n.b)("inlineCode",{parentName:"h3"},"EthBalanceChecker")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#EthBalanceChecker.getEthBalances(address[])"},Object(n.b)("code",{class:"function-signature"},"getEthBalances(address[] addresses)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"EthBalanceChecker.getEthBalances(address[])"}),Object(n.b)("code",{class:"function-signature"},"getEthBalances(address[] addresses) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Batch fetches ETH balances\n@param addresses Array of addresses.\n@return Array of ETH balances."),Object(n.b)("h3",{id:"iassetdata"},Object(n.b)("inlineCode",{parentName:"h3"},"IAssetData")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IAssetData.ERC20Token(address)"},Object(n.b)("code",{class:"function-signature"},"ERC20Token(address tokenAddress)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IAssetData.ERC721Token(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"ERC721Token(address tokenAddress, uint256 tokenId)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IAssetData.ERC1155Assets(address,uint256[],uint256[],bytes)"},Object(n.b)("code",{class:"function-signature"},"ERC1155Assets(address tokenAddress, uint256[] tokenIds, uint256[] values, bytes callbackData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IAssetData.MultiAsset(uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"MultiAsset(uint256[] values, bytes[] nestedAssetData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IAssetData.StaticCall(address,bytes,bytes32)"},Object(n.b)("code",{class:"function-signature"},"StaticCall(address staticCallTargetAddress, bytes staticCallData, bytes32 expectedReturnDataHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IAssetData.ERC20Bridge(address,address,bytes)"},Object(n.b)("code",{class:"function-signature"},"ERC20Bridge(address tokenAddress, address bridgeAddress, bytes bridgeData)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IAssetData.ERC20Token(address)"}),Object(n.b)("code",{class:"function-signature"},"ERC20Token(address tokenAddress)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Function signature for encoding ERC20 assetData.\n@param tokenAddress Address of ERC20Token contract."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IAssetData.ERC721Token(address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"ERC721Token(address tokenAddress, uint256 tokenId)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Function signature for encoding ERC721 assetData.\n@param tokenAddress Address of ERC721 token contract.\n@param tokenId Id of ERC721 token to be transferred."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IAssetData.ERC1155Assets(address,uint256[],uint256[],bytes)"}),Object(n.b)("code",{class:"function-signature"},"ERC1155Assets(address tokenAddress, uint256[] tokenIds, uint256[] values, bytes callbackData)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Function signature for encoding ERC1155 assetData.\n@param tokenAddress Address of ERC1155 token contract.\n@param tokenIds Array of ids of tokens to be transferred.\n@param values Array of values that correspond to each token id to be transferred.\nNote that each value will be multiplied by the amount being filled in the order before transferring.\n@param callbackData Extra data to be passed to receiver","'","s ",Object(n.b)("inlineCode",{parentName:"p"},"onERC1155Received")," callback function."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IAssetData.MultiAsset(uint256[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"MultiAsset(uint256[] values, bytes[] nestedAssetData)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Function signature for encoding MultiAsset assetData.\n@param values Array of amounts that correspond to each asset to be transferred.\nNote that each value will be multiplied by the amount being filled in the order before transferring.\n@param nestedAssetData Array of assetData fields that will be be dispatched to their correspnding AssetProxy contract."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IAssetData.StaticCall(address,bytes,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"StaticCall(address staticCallTargetAddress, bytes staticCallData, bytes32 expectedReturnDataHash)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Function signature for encoding StaticCall assetData.\n@param staticCallTargetAddress Address that will execute the staticcall.\n@param staticCallData Data that will be executed via staticcall on the staticCallTargetAddress.\n@param expectedReturnDataHash Keccak-256 hash of the expected staticcall return data."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IAssetData.ERC20Bridge(address,address,bytes)"}),Object(n.b)("code",{class:"function-signature"},"ERC20Bridge(address tokenAddress, address bridgeAddress, bytes bridgeData)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Function signature for encoding ERC20Bridge assetData.\n@param tokenAddress Address of token to transfer.\n@param bridgeAddress Address of the bridge contract.\n@param bridgeData Arbitrary data to be passed to the bridge contract."),Object(n.b)("h3",{id:"iassetproxy"},Object(n.b)("inlineCode",{parentName:"h3"},"IAssetProxy")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IAssetProxy.transferFrom(bytes,address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"transferFrom(bytes assetData, address from, address to, uint256 amount)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IAssetProxy.getProxyId()"},Object(n.b)("code",{class:"function-signature"},"getProxyId()"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IAssetProxy.transferFrom(bytes,address,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"transferFrom(bytes assetData, address from, address to, uint256 amount)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Transfers assets. Either succeeds or throws.\n@param assetData Byte array encoded for the respective asset proxy.\n@param from Address to transfer asset from.\n@param to Address to transfer asset to.\n@param amount Amount of asset to transfer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IAssetProxy.getProxyId()"}),Object(n.b)("code",{class:"function-signature"},"getProxyId() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Gets the proxy id associated with the proxy address.\n@return Proxy id."),Object(n.b)("h3",{id:"iassetproxydispatcher"},Object(n.b)("inlineCode",{parentName:"h3"},"IAssetProxyDispatcher")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IAssetProxyDispatcher.registerAssetProxy(address)"},Object(n.b)("code",{class:"function-signature"},"registerAssetProxy(address assetProxy)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IAssetProxyDispatcher.getAssetProxy(bytes4)"},Object(n.b)("code",{class:"function-signature"},"getAssetProxy(bytes4 assetProxyId)")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IAssetProxyDispatcher.AssetProxyRegistered(bytes4,address)"},Object(n.b)("code",{class:"function-signature"},"AssetProxyRegistered(bytes4 id, address assetProxy)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IAssetProxyDispatcher.registerAssetProxy(address)"}),Object(n.b)("code",{class:"function-signature"},"registerAssetProxy(address assetProxy)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Registers an asset proxy to its asset proxy id.\nOnce an asset proxy is registered, it cannot be unregistered.\n@param assetProxy Address of new asset proxy to register."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IAssetProxyDispatcher.getAssetProxy(bytes4)"}),Object(n.b)("code",{class:"function-signature"},"getAssetProxy(bytes4 assetProxyId) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Gets an asset proxy.\n@param assetProxyId Id of the asset proxy.\n@return The asset proxy registered to assetProxyId. Returns 0x0 if no proxy is registered."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IAssetProxyDispatcher.AssetProxyRegistered(bytes4,address)"}),Object(n.b)("code",{class:"function-signature"},"AssetProxyRegistered(bytes4 id, address assetProxy)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h3",{id:"ichai"},Object(n.b)("inlineCode",{parentName:"h3"},"IChai")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IChai.draw(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"draw(address src, uint256 wad)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IChai.dai(address)"},Object(n.b)("code",{class:"function-signature"},"dai(address usr)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IChai.pot()"},Object(n.b)("code",{class:"function-signature"},"pot()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IChai.join(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"join(address dst, uint256 wad)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IERC20Token.transfer(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"transfer(address _to, uint256 _value)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IERC20Token.transferFrom(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"transferFrom(address _from, address _to, uint256 _value)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IERC20Token.approve(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"approve(address _spender, uint256 _value)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IERC20Token.totalSupply()"},Object(n.b)("code",{class:"function-signature"},"totalSupply()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IERC20Token.balanceOf(address)"},Object(n.b)("code",{class:"function-signature"},"balanceOf(address _owner)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IERC20Token.allowance(address,address)"},Object(n.b)("code",{class:"function-signature"},"allowance(address _owner, address _spender)")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IERC20Token.Transfer(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"Transfer(address _from, address _to, uint256 _value)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IERC20Token.Approval(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"Approval(address _owner, address _spender, uint256 _value)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IChai.draw(address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"draw(address src, uint256 wad)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Withdraws Dai owned by ",Object(n.b)("inlineCode",{parentName:"p"},"src"),"\n@param src Address that owns Dai.\n@param wad Amount of Dai to withdraw."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IChai.dai(address)"}),Object(n.b)("code",{class:"function-signature"},"dai(address usr) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Queries Dai balance of Chai holder.\n@param usr Address of Chai holder.\n@return Dai balance."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IChai.pot()"}),Object(n.b)("code",{class:"function-signature"},"pot() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"contract PotLike")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Queries the Pot contract used by the Chai contract."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IChai.join(address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"join(address dst, uint256 wad)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Deposits Dai in exchange for Chai\n@param dst Address to receive Chai.\n@param wad Amount of Dai to deposit."),Object(n.b)("h3",{id:"ierc1155"},Object(n.b)("inlineCode",{parentName:"h3"},"IERC1155")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC1155.safeTransferFrom(address,address,uint256,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes data)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC1155.safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"},Object(n.b)("code",{class:"function-signature"},"safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] values, bytes data)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC1155.setApprovalForAll(address,bool)"},Object(n.b)("code",{class:"function-signature"},"setApprovalForAll(address operator, bool approved)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC1155.isApprovedForAll(address,address)"},Object(n.b)("code",{class:"function-signature"},"isApprovedForAll(address owner, address operator)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC1155.balanceOf(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"balanceOf(address owner, uint256 id)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC1155.balanceOfBatch(address[],uint256[])"},Object(n.b)("code",{class:"function-signature"},"balanceOfBatch(address[] owners, uint256[] ids)")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC1155.TransferSingle(address,address,address,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"TransferSingle(address operator, address from, address to, uint256 id, uint256 value)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC1155.TransferBatch(address,address,address,uint256[],uint256[])"},Object(n.b)("code",{class:"function-signature"},"TransferBatch(address operator, address from, address to, uint256[] ids, uint256[] values)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC1155.ApprovalForAll(address,address,bool)"},Object(n.b)("code",{class:"function-signature"},"ApprovalForAll(address owner, address operator, bool approved)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC1155.URI(string,uint256)"},Object(n.b)("code",{class:"function-signature"},"URI(string value, uint256 id)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC1155.safeTransferFrom(address,address,uint256,uint256,bytes)"}),Object(n.b)("code",{class:"function-signature"},"safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes data)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC1155.safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"}),Object(n.b)("code",{class:"function-signature"},"safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] values, bytes data)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC1155.setApprovalForAll(address,bool)"}),Object(n.b)("code",{class:"function-signature"},"setApprovalForAll(address operator, bool approved)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC1155.isApprovedForAll(address,address)"}),Object(n.b)("code",{class:"function-signature"},"isApprovedForAll(address owner, address operator) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC1155.balanceOf(address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"balanceOf(address owner, uint256 id) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC1155.balanceOfBatch(address[],uint256[])"}),Object(n.b)("code",{class:"function-signature"},"balanceOfBatch(address[] owners, uint256[] ids) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256[]")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC1155.TransferSingle(address,address,address,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"TransferSingle(address operator, address from, address to, uint256 id, uint256 value)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("p",null,"Either TransferSingle or TransferBatch MUST emit when tokens are transferred,\nincluding zero value transfers as well as minting or burning.\nOperator will always be msg.sender.\nEither event from address ",Object(n.b)("inlineCode",{parentName:"p"},"0x0")," signifies a minting operation.\nAn event to address ",Object(n.b)("inlineCode",{parentName:"p"},"0x0")," signifies a burning or melting operation.\nThe total value transferred from address 0x0 minus the total value transferred to 0x0 may\nbe used by clients and exchanges to be added to the ",'"',"circulating supply",'"'," for a given token ID.\nTo define a token ID with no initial balance, the contract SHOULD emit the TransferSingle event\nfrom ",Object(n.b)("inlineCode",{parentName:"p"},"0x0")," to ",Object(n.b)("inlineCode",{parentName:"p"},"0x0"),", with the token creator as ",Object(n.b)("inlineCode",{parentName:"p"},"_operator"),"."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC1155.TransferBatch(address,address,address,uint256[],uint256[])"}),Object(n.b)("code",{class:"function-signature"},"TransferBatch(address operator, address from, address to, uint256[] ids, uint256[] values)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("p",null,"Either TransferSingle or TransferBatch MUST emit when tokens are transferred,\nincluding zero value transfers as well as minting or burning.\nOperator will always be msg.sender.\nEither event from address ",Object(n.b)("inlineCode",{parentName:"p"},"0x0")," signifies a minting operation.\nAn event to address ",Object(n.b)("inlineCode",{parentName:"p"},"0x0")," signifies a burning or melting operation.\nThe total value transferred from address 0x0 minus the total value transferred to 0x0 may\nbe used by clients and exchanges to be added to the ",'"',"circulating supply",'"'," for a given token ID.\nTo define multiple token IDs with no initial balance, this SHOULD emit the TransferBatch event\nfrom ",Object(n.b)("inlineCode",{parentName:"p"},"0x0")," to ",Object(n.b)("inlineCode",{parentName:"p"},"0x0"),", with the token creator as ",Object(n.b)("inlineCode",{parentName:"p"},"_operator"),"."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC1155.ApprovalForAll(address,address,bool)"}),Object(n.b)("code",{class:"function-signature"},"ApprovalForAll(address owner, address operator, bool approved)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("p",null,"MUST emit when an approval is updated."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC1155.URI(string,uint256)"}),Object(n.b)("code",{class:"function-signature"},"URI(string value, uint256 id)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("p",null,"MUST emit when the URI is updated for a token ID.\nURIs are defined in RFC 3986.\nThe URI MUST point a JSON file that conforms to the ",'"',"ERC-1155 Metadata JSON Schema",'"',"."),Object(n.b)("h3",{id:"ierc20token"},Object(n.b)("inlineCode",{parentName:"h3"},"IERC20Token")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC20Token.transfer(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"transfer(address _to, uint256 _value)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC20Token.transferFrom(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"transferFrom(address _from, address _to, uint256 _value)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC20Token.approve(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"approve(address _spender, uint256 _value)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC20Token.totalSupply()"},Object(n.b)("code",{class:"function-signature"},"totalSupply()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC20Token.balanceOf(address)"},Object(n.b)("code",{class:"function-signature"},"balanceOf(address _owner)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC20Token.allowance(address,address)"},Object(n.b)("code",{class:"function-signature"},"allowance(address _owner, address _spender)")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC20Token.Transfer(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"Transfer(address _from, address _to, uint256 _value)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC20Token.Approval(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"Approval(address _owner, address _spender, uint256 _value)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC20Token.transfer(address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"transfer(address _to, uint256 _value) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"send ",Object(n.b)("inlineCode",{parentName:"p"},"value")," token to ",Object(n.b)("inlineCode",{parentName:"p"},"to")," from ",Object(n.b)("inlineCode",{parentName:"p"},"msg.sender"),"\n@param _to The address of the recipient\n@param _value The amount of token to be transferred\n@return True if transfer was successful"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC20Token.transferFrom(address,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"transferFrom(address _from, address _to, uint256 _value) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"send ",Object(n.b)("inlineCode",{parentName:"p"},"value")," token to ",Object(n.b)("inlineCode",{parentName:"p"},"to")," from ",Object(n.b)("inlineCode",{parentName:"p"},"from")," on the condition it is approved by ",Object(n.b)("inlineCode",{parentName:"p"},"from"),"\n@param _from The address of the sender\n@param _to The address of the recipient\n@param _value The amount of token to be transferred\n@return True if transfer was successful"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC20Token.approve(address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"approve(address _spender, uint256 _value) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"msg.sender")," approves ",Object(n.b)("inlineCode",{parentName:"p"},"_spender")," to spend ",Object(n.b)("inlineCode",{parentName:"p"},"_value")," tokens\n@param _spender The address of the account able to transfer the tokens\n@param _value The amount of wei to be approved for transfer\n@return Always true if the call has enough gas to complete execution"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC20Token.totalSupply()"}),Object(n.b)("code",{class:"function-signature"},"totalSupply() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Query total supply of token\n@return Total supply of token"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC20Token.balanceOf(address)"}),Object(n.b)("code",{class:"function-signature"},"balanceOf(address _owner) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC20Token.allowance(address,address)"}),Object(n.b)("code",{class:"function-signature"},"allowance(address _owner, address _spender) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC20Token.Transfer(address,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"Transfer(address _from, address _to, uint256 _value)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC20Token.Approval(address,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"Approval(address _owner, address _spender, uint256 _value)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h3",{id:"ierc721token"},Object(n.b)("inlineCode",{parentName:"h3"},"IERC721Token")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC721Token.safeTransferFrom(address,address,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes _data)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC721Token.safeTransferFrom(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"safeTransferFrom(address _from, address _to, uint256 _tokenId)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC721Token.approve(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"approve(address _approved, uint256 _tokenId)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC721Token.setApprovalForAll(address,bool)"},Object(n.b)("code",{class:"function-signature"},"setApprovalForAll(address _operator, bool _approved)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC721Token.balanceOf(address)"},Object(n.b)("code",{class:"function-signature"},"balanceOf(address _owner)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC721Token.transferFrom(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"transferFrom(address _from, address _to, uint256 _tokenId)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC721Token.ownerOf(uint256)"},Object(n.b)("code",{class:"function-signature"},"ownerOf(uint256 _tokenId)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC721Token.getApproved(uint256)"},Object(n.b)("code",{class:"function-signature"},"getApproved(uint256 _tokenId)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC721Token.isApprovedForAll(address,address)"},Object(n.b)("code",{class:"function-signature"},"isApprovedForAll(address _owner, address _operator)")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC721Token.Transfer(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"Transfer(address _from, address _to, uint256 _tokenId)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC721Token.Approval(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"Approval(address _owner, address _approved, uint256 _tokenId)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC721Token.ApprovalForAll(address,address,bool)"},Object(n.b)("code",{class:"function-signature"},"ApprovalForAll(address _owner, address _operator, bool _approved)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC721Token.safeTransferFrom(address,address,uint256,bytes)"}),Object(n.b)("code",{class:"function-signature"},"safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes _data)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC721Token.safeTransferFrom(address,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"safeTransferFrom(address _from, address _to, uint256 _tokenId)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC721Token.approve(address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"approve(address _approved, uint256 _tokenId)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC721Token.setApprovalForAll(address,bool)"}),Object(n.b)("code",{class:"function-signature"},"setApprovalForAll(address _operator, bool _approved)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC721Token.balanceOf(address)"}),Object(n.b)("code",{class:"function-signature"},"balanceOf(address _owner) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC721Token.transferFrom(address,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"transferFrom(address _from, address _to, uint256 _tokenId)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC721Token.ownerOf(uint256)"}),Object(n.b)("code",{class:"function-signature"},"ownerOf(uint256 _tokenId) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC721Token.getApproved(uint256)"}),Object(n.b)("code",{class:"function-signature"},"getApproved(uint256 _tokenId) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC721Token.isApprovedForAll(address,address)"}),Object(n.b)("code",{class:"function-signature"},"isApprovedForAll(address _owner, address _operator) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC721Token.Transfer(address,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"Transfer(address _from, address _to, uint256 _tokenId)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("p",null,"This emits when ownership of any NFT changes by any mechanism.\nThis event emits when NFTs are created (",Object(n.b)("inlineCode",{parentName:"p"},"from")," == 0) and destroyed\n(",Object(n.b)("inlineCode",{parentName:"p"},"to")," == 0). Exception: during contract creation, any number of NFTs\nmay be created and assigned without emitting Transfer. At the time of\nany transfer, the approved address for that NFT (if any) is reset to none."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC721Token.Approval(address,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"Approval(address _owner, address _approved, uint256 _tokenId)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("p",null,"This emits when the approved address for an NFT is changed or\nreaffirmed. The zero address indicates there is no approved address.\nWhen a Transfer event emits, this also indicates that the approved\naddress for that NFT (if any) is reset to none."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC721Token.ApprovalForAll(address,address,bool)"}),Object(n.b)("code",{class:"function-signature"},"ApprovalForAll(address _owner, address _operator, bool _approved)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("p",null,"This emits when an operator is enabled or disabled for an owner.\nThe operator can manage all NFTs of the owner."),Object(n.b)("h3",{id:"iexchange"},Object(n.b)("inlineCode",{parentName:"h3"},"IExchange")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IWrapperFunctions.fillOrKillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"fillOrKillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IWrapperFunctions.batchFillOrders(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IWrapperFunctions.batchFillOrKillOrders(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrKillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IWrapperFunctions.batchFillOrdersNoThrow(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrdersNoThrow(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IWrapperFunctions.marketSellOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketSellOrdersNoThrow(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IWrapperFunctions.marketBuyOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersNoThrow(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IWrapperFunctions.marketSellOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketSellOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IWrapperFunctions.marketBuyOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IWrapperFunctions.batchCancelOrders(struct LibOrder.Order[])"},Object(n.b)("code",{class:"function-signature"},"batchCancelOrders(struct LibOrder.Order[] orders)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ITransferSimulator.simulateDispatchTransferFromCalls(bytes[],address[],address[],uint256[])"},Object(n.b)("code",{class:"function-signature"},"simulateDispatchTransferFromCalls(bytes[] assetData, address[] fromAddresses, address[] toAddresses, uint256[] amounts)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IAssetProxyDispatcher.registerAssetProxy(address)"},Object(n.b)("code",{class:"function-signature"},"registerAssetProxy(address assetProxy)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IAssetProxyDispatcher.getAssetProxy(bytes4)"},Object(n.b)("code",{class:"function-signature"},"getAssetProxy(bytes4 assetProxyId)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ITransactions.executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ITransactions.batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[] transactions, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ITransactions._getCurrentContextAddress()"},Object(n.b)("code",{class:"function-signature"},"_getCurrentContextAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.preSign(bytes32)"},Object(n.b)("code",{class:"function-signature"},"preSign(bytes32 hash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.setSignatureValidatorApproval(address,bool)"},Object(n.b)("code",{class:"function-signature"},"setSignatureValidatorApproval(address validatorAddress, bool approval)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.isValidHashSignature(bytes32,address,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidHashSignature(bytes32 hash, address signerAddress, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.isValidOrderSignature(struct LibOrder.Order,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidOrderSignature(struct LibOrder.Order order, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator._isValidOrderWithHashSignature(struct LibOrder.Order,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidOrderWithHashSignature(struct LibOrder.Order order, bytes32 orderHash, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator._isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 transactionHash, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IMatchOrders.batchMatchOrders(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchMatchOrders(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IMatchOrders.batchMatchOrdersWithMaximalFill(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchMatchOrdersWithMaximalFill(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IMatchOrders.matchOrders(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"matchOrders(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IMatchOrders.matchOrdersWithMaximalFill(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"matchOrdersWithMaximalFill(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.cancelOrdersUpTo(uint256)"},Object(n.b)("code",{class:"function-signature"},"cancelOrdersUpTo(uint256 targetOrderEpoch)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.fillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"fillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.cancelOrder(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"cancelOrder(struct LibOrder.Order order)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.getOrderInfo(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"getOrderInfo(struct LibOrder.Order order)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.setProtocolFeeMultiplier(uint256)"},Object(n.b)("code",{class:"function-signature"},"setProtocolFeeMultiplier(uint256 updatedProtocolFeeMultiplier)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.setProtocolFeeCollectorAddress(address)"},Object(n.b)("code",{class:"function-signature"},"setProtocolFeeCollectorAddress(address updatedProtocolFeeCollector)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.protocolFeeMultiplier()"},Object(n.b)("code",{class:"function-signature"},"protocolFeeMultiplier()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.protocolFeeCollector()"},Object(n.b)("code",{class:"function-signature"},"protocolFeeCollector()")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IAssetProxyDispatcher.AssetProxyRegistered(bytes4,address)"},Object(n.b)("code",{class:"function-signature"},"AssetProxyRegistered(bytes4 id, address assetProxy)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ITransactions.TransactionExecution(bytes32)"},Object(n.b)("code",{class:"function-signature"},"TransactionExecution(bytes32 transactionHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.SignatureValidatorApproval(address,address,bool)"},Object(n.b)("code",{class:"function-signature"},"SignatureValidatorApproval(address signerAddress, address validatorAddress, bool isApproved)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.Fill(address,address,bytes,bytes,bytes,bytes,bytes32,address,address,uint256,uint256,uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"Fill(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, bytes makerFeeAssetData, bytes takerFeeAssetData, bytes32 orderHash, address takerAddress, address senderAddress, uint256 makerAssetFilledAmount, uint256 takerAssetFilledAmount, uint256 makerFeePaid, uint256 takerFeePaid, uint256 protocolFeePaid)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.Cancel(address,address,bytes,bytes,address,bytes32)"},Object(n.b)("code",{class:"function-signature"},"Cancel(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, address senderAddress, bytes32 orderHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.CancelUpTo(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"CancelUpTo(address makerAddress, address orderSenderAddress, uint256 orderEpoch)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.ProtocolFeeMultiplier(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"ProtocolFeeMultiplier(uint256 oldProtocolFeeMultiplier, uint256 updatedProtocolFeeMultiplier)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.ProtocolFeeCollectorAddress(address,address)"},Object(n.b)("code",{class:"function-signature"},"ProtocolFeeCollectorAddress(address oldProtocolFeeCollector, address updatedProtocolFeeCollector)"))))),Object(n.b)("h3",{id:"iexchangecore"},Object(n.b)("inlineCode",{parentName:"h3"},"IExchangeCore")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.cancelOrdersUpTo(uint256)"},Object(n.b)("code",{class:"function-signature"},"cancelOrdersUpTo(uint256 targetOrderEpoch)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.fillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"fillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.cancelOrder(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"cancelOrder(struct LibOrder.Order order)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.getOrderInfo(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"getOrderInfo(struct LibOrder.Order order)")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.Fill(address,address,bytes,bytes,bytes,bytes,bytes32,address,address,uint256,uint256,uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"Fill(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, bytes makerFeeAssetData, bytes takerFeeAssetData, bytes32 orderHash, address takerAddress, address senderAddress, uint256 makerAssetFilledAmount, uint256 takerAssetFilledAmount, uint256 makerFeePaid, uint256 takerFeePaid, uint256 protocolFeePaid)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.Cancel(address,address,bytes,bytes,address,bytes32)"},Object(n.b)("code",{class:"function-signature"},"Cancel(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, address senderAddress, bytes32 orderHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.CancelUpTo(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"CancelUpTo(address makerAddress, address orderSenderAddress, uint256 orderEpoch)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.cancelOrdersUpTo(uint256)"}),Object(n.b)("code",{class:"function-signature"},"cancelOrdersUpTo(uint256 targetOrderEpoch)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Cancels all orders created by makerAddress with a salt less than or equal to the targetOrderEpoch\nand senderAddress equal to msg.sender (or null address if msg.sender == makerAddress).\n@param targetOrderEpoch Orders created with a salt less or equal to this value will be cancelled."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.fillOrder(struct LibOrder.Order,uint256,bytes)"}),Object(n.b)("code",{class:"function-signature"},"fillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Fills the input order.\n@param order Order struct containing order specifications.\n@param takerAssetFillAmount Desired amount of takerAsset to sell.\n@param signature Proof that order has been created by maker.\n@return Amounts filled and fees paid by maker and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.cancelOrder(struct LibOrder.Order)"}),Object(n.b)("code",{class:"function-signature"},"cancelOrder(struct LibOrder.Order order)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"After calling, the order can not be filled anymore.\n@param order Order struct containing order specifications."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.getOrderInfo(struct LibOrder.Order)"}),Object(n.b)("code",{class:"function-signature"},"getOrderInfo(struct LibOrder.Order order) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibOrder.OrderInfo")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Gets information about an order: status, hash, and amount filled.\n@param order Order to gather information on.\n@return OrderInfo Information about the order and its state.\nSee LibOrder.OrderInfo for a complete description."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.Fill(address,address,bytes,bytes,bytes,bytes,bytes32,address,address,uint256,uint256,uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"Fill(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, bytes makerFeeAssetData, bytes takerFeeAssetData, bytes32 orderHash, address takerAddress, address senderAddress, uint256 makerAssetFilledAmount, uint256 takerAssetFilledAmount, uint256 makerFeePaid, uint256 takerFeePaid, uint256 protocolFeePaid)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.Cancel(address,address,bytes,bytes,address,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"Cancel(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, address senderAddress, bytes32 orderHash)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.CancelUpTo(address,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"CancelUpTo(address makerAddress, address orderSenderAddress, uint256 orderEpoch)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h3",{id:"imatchorders"},Object(n.b)("inlineCode",{parentName:"h3"},"IMatchOrders")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IMatchOrders.batchMatchOrders(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchMatchOrders(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IMatchOrders.batchMatchOrdersWithMaximalFill(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchMatchOrdersWithMaximalFill(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IMatchOrders.matchOrders(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"matchOrders(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IMatchOrders.matchOrdersWithMaximalFill(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"matchOrdersWithMaximalFill(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IMatchOrders.batchMatchOrders(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchMatchOrders(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.BatchMatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Match complementary orders that have a profitable spread.\nEach order is filled at their respective price point, and\nthe matcher receives a profit denominated in the left maker asset.\n@param leftOrders Set of orders with the same maker / taker asset.\n@param rightOrders Set of orders to match against ",Object(n.b)("inlineCode",{parentName:"p"},"leftOrders"),"\n@param leftSignatures Proof that left orders were created by the left makers.\n@param rightSignatures Proof that right orders were created by the right makers.\n@return batchMatchedFillResults Amounts filled and profit generated."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IMatchOrders.batchMatchOrdersWithMaximalFill(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchMatchOrdersWithMaximalFill(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.BatchMatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Match complementary orders that have a profitable spread.\nEach order is maximally filled at their respective price point, and\nthe matcher receives a profit denominated in either the left maker asset,\nright maker asset, or a combination of both.\n@param leftOrders Set of orders with the same maker / taker asset.\n@param rightOrders Set of orders to match against ",Object(n.b)("inlineCode",{parentName:"p"},"leftOrders"),"\n@param leftSignatures Proof that left orders were created by the left makers.\n@param rightSignatures Proof that right orders were created by the right makers.\n@return batchMatchedFillResults Amounts filled and profit generated."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IMatchOrders.matchOrders(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"}),Object(n.b)("code",{class:"function-signature"},"matchOrders(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.MatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Match two complementary orders that have a profitable spread.\nEach order is filled at their respective price point. However, the calculations are\ncarried out as though the orders are both being filled at the right order","'","s price point.\nThe profit made by the left order goes to the taker (who matched the two orders).\n@param leftOrder First order to match.\n@param rightOrder Second order to match.\n@param leftSignature Proof that order was created by the left maker.\n@param rightSignature Proof that order was created by the right maker.\n@return matchedFillResults Amounts filled and fees paid by maker and taker of matched orders."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IMatchOrders.matchOrdersWithMaximalFill(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"}),Object(n.b)("code",{class:"function-signature"},"matchOrdersWithMaximalFill(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.MatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Match two complementary orders that have a profitable spread.\nEach order is maximally filled at their respective price point, and\nthe matcher receives a profit denominated in either the left maker asset,\nright maker asset, or a combination of both.\n@param leftOrder First order to match.\n@param rightOrder Second order to match.\n@param leftSignature Proof that order was created by the left maker.\n@param rightSignature Proof that order was created by the right maker.\n@return matchedFillResults Amounts filled by maker and taker of matched orders."),Object(n.b)("h3",{id:"iprotocolfees"},Object(n.b)("inlineCode",{parentName:"h3"},"IProtocolFees")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IProtocolFees.setProtocolFeeMultiplier(uint256)"},Object(n.b)("code",{class:"function-signature"},"setProtocolFeeMultiplier(uint256 updatedProtocolFeeMultiplier)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IProtocolFees.setProtocolFeeCollectorAddress(address)"},Object(n.b)("code",{class:"function-signature"},"setProtocolFeeCollectorAddress(address updatedProtocolFeeCollector)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IProtocolFees.protocolFeeMultiplier()"},Object(n.b)("code",{class:"function-signature"},"protocolFeeMultiplier()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IProtocolFees.protocolFeeCollector()"},Object(n.b)("code",{class:"function-signature"},"protocolFeeCollector()")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IProtocolFees.ProtocolFeeMultiplier(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"ProtocolFeeMultiplier(uint256 oldProtocolFeeMultiplier, uint256 updatedProtocolFeeMultiplier)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IProtocolFees.ProtocolFeeCollectorAddress(address,address)"},Object(n.b)("code",{class:"function-signature"},"ProtocolFeeCollectorAddress(address oldProtocolFeeCollector, address updatedProtocolFeeCollector)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IProtocolFees.setProtocolFeeMultiplier(uint256)"}),Object(n.b)("code",{class:"function-signature"},"setProtocolFeeMultiplier(uint256 updatedProtocolFeeMultiplier)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Allows the owner to update the protocol fee multiplier.\n@param updatedProtocolFeeMultiplier The updated protocol fee multiplier."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IProtocolFees.setProtocolFeeCollectorAddress(address)"}),Object(n.b)("code",{class:"function-signature"},"setProtocolFeeCollectorAddress(address updatedProtocolFeeCollector)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Allows the owner to update the protocolFeeCollector address.\n@param updatedProtocolFeeCollector The updated protocolFeeCollector contract address."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IProtocolFees.protocolFeeMultiplier()"}),Object(n.b)("code",{class:"function-signature"},"protocolFeeMultiplier() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Returns the protocolFeeMultiplier"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IProtocolFees.protocolFeeCollector()"}),Object(n.b)("code",{class:"function-signature"},"protocolFeeCollector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Returns the protocolFeeCollector address"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IProtocolFees.ProtocolFeeMultiplier(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"ProtocolFeeMultiplier(uint256 oldProtocolFeeMultiplier, uint256 updatedProtocolFeeMultiplier)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IProtocolFees.ProtocolFeeCollectorAddress(address,address)"}),Object(n.b)("code",{class:"function-signature"},"ProtocolFeeCollectorAddress(address oldProtocolFeeCollector, address updatedProtocolFeeCollector)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h3",{id:"isignaturevalidator"},Object(n.b)("inlineCode",{parentName:"h3"},"ISignatureValidator")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator.preSign(bytes32)"},Object(n.b)("code",{class:"function-signature"},"preSign(bytes32 hash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator.setSignatureValidatorApproval(address,bool)"},Object(n.b)("code",{class:"function-signature"},"setSignatureValidatorApproval(address validatorAddress, bool approval)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator.isValidHashSignature(bytes32,address,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidHashSignature(bytes32 hash, address signerAddress, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator.isValidOrderSignature(struct LibOrder.Order,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidOrderSignature(struct LibOrder.Order order, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator.isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator._isValidOrderWithHashSignature(struct LibOrder.Order,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidOrderWithHashSignature(struct LibOrder.Order order, bytes32 orderHash, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator._isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 transactionHash, bytes signature)")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator.SignatureValidatorApproval(address,address,bool)"},Object(n.b)("code",{class:"function-signature"},"SignatureValidatorApproval(address signerAddress, address validatorAddress, bool isApproved)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator.preSign(bytes32)"}),Object(n.b)("code",{class:"function-signature"},"preSign(bytes32 hash)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Approves a hash on-chain.\nAfter presigning a hash, the preSign signature type will become valid for that hash and signer.\n@param hash Any 32-byte hash."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator.setSignatureValidatorApproval(address,bool)"}),Object(n.b)("code",{class:"function-signature"},"setSignatureValidatorApproval(address validatorAddress, bool approval)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Approves/unnapproves a Validator contract to verify signatures on signer","'","s behalf.\n@param validatorAddress Address of Validator contract.\n@param approval Approval or disapproval of  Validator contract."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator.isValidHashSignature(bytes32,address,bytes)"}),Object(n.b)("code",{class:"function-signature"},"isValidHashSignature(bytes32 hash, address signerAddress, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Verifies that a hash has been signed by the given signer.\n@param hash Any 32-byte hash.\n@param signature Proof that the hash has been signed by signer.\n@return isValid ",Object(n.b)("inlineCode",{parentName:"p"},"true")," if the signature is valid for the given hash and signer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator.isValidOrderSignature(struct LibOrder.Order,bytes)"}),Object(n.b)("code",{class:"function-signature"},"isValidOrderSignature(struct LibOrder.Order order, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Verifies that a signature for an order is valid.\n@param order The order.\n@param signature Proof that the order has been signed by signer.\n@return isValid true if the signature is valid for the given order and signer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator.isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes)"}),Object(n.b)("code",{class:"function-signature"},"isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Verifies that a signature for a transaction is valid.\n@param transaction The transaction.\n@param signature Proof that the order has been signed by signer.\n@return isValid true if the signature is valid for the given transaction and signer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator._isValidOrderWithHashSignature(struct LibOrder.Order,bytes32,bytes)"}),Object(n.b)("code",{class:"function-signature"},"_isValidOrderWithHashSignature(struct LibOrder.Order order, bytes32 orderHash, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Verifies that an order, with provided order hash, has been signed\nby the given signer.\n@param order The order.\n@param orderHash The hash of the order.\n@param signature Proof that the hash has been signed by signer.\n@return isValid True if the signature is valid for the given order and signer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator._isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes32,bytes)"}),Object(n.b)("code",{class:"function-signature"},"_isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 transactionHash, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Verifies that a transaction, with provided order hash, has been signed\nby the given signer.\n@param transaction The transaction.\n@param transactionHash The hash of the transaction.\n@param signature Proof that the hash has been signed by signer.\n@return isValid True if the signature is valid for the given transaction and signer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator.SignatureValidatorApproval(address,address,bool)"}),Object(n.b)("code",{class:"function-signature"},"SignatureValidatorApproval(address signerAddress, address validatorAddress, bool isApproved)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h3",{id:"itransactions"},Object(n.b)("inlineCode",{parentName:"h3"},"ITransactions")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#ITransactions.executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ITransactions.batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[] transactions, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ITransactions._getCurrentContextAddress()"},Object(n.b)("code",{class:"function-signature"},"_getCurrentContextAddress()")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#ITransactions.TransactionExecution(bytes32)"},Object(n.b)("code",{class:"function-signature"},"TransactionExecution(bytes32 transactionHash)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ITransactions.executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"}),Object(n.b)("code",{class:"function-signature"},"executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes an Exchange method call in the context of signer.\n@param transaction 0x transaction containing salt, signerAddress, and data.\n@param signature Proof that transaction has been signed by signer.\n@return ABI encoded return data of the underlying Exchange function call."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ITransactions.batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[] transactions, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes a batch of Exchange method calls in the context of signer(s).\n@param transactions Array of 0x transactions containing salt, signerAddress, and data.\n@param signatures Array of proofs that transactions have been signed by signer(s).\n@return Array containing ABI encoded return data for each of the underlying Exchange function calls."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ITransactions._getCurrentContextAddress()"}),Object(n.b)("code",{class:"function-signature"},"_getCurrentContextAddress() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"The current function will be called in the context of this address (either 0x transaction signer or ",Object(n.b)("inlineCode",{parentName:"p"},"msg.sender"),").\nIf calling a fill function, this address will represent the taker.\nIf calling a cancel function, this address will represent the maker.\n@return Signer of 0x transaction if entry point is ",Object(n.b)("a",Object(s.a)({parentName:"p"},{href:"../../exchange/contracts/src#ITransactions.executeTransaction(struct%20LibZeroExTransaction.ZeroExTransaction,bytes)"}),Object(n.b)("inlineCode",{parentName:"a"},"executeTransaction")),".\n",Object(n.b)("inlineCode",{parentName:"p"},"msg.sender")," if entry point is any other function."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ITransactions.TransactionExecution(bytes32)"}),Object(n.b)("code",{class:"function-signature"},"TransactionExecution(bytes32 transactionHash)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h3",{id:"itransfersimulator"},Object(n.b)("inlineCode",{parentName:"h3"},"ITransferSimulator")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#ITransferSimulator.simulateDispatchTransferFromCalls(bytes[],address[],address[],uint256[])"},Object(n.b)("code",{class:"function-signature"},"simulateDispatchTransferFromCalls(bytes[] assetData, address[] fromAddresses, address[] toAddresses, uint256[] amounts)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ITransferSimulator.simulateDispatchTransferFromCalls(bytes[],address[],address[],uint256[])"}),Object(n.b)("code",{class:"function-signature"},"simulateDispatchTransferFromCalls(bytes[] assetData, address[] fromAddresses, address[] toAddresses, uint256[] amounts)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"This function may be used to simulate any amount of transfers\nAs they would occur through the Exchange contract. Note that this function\nwill always revert, even if all transfers are successful. However, it may\nbe used with eth_call or with a try/catch pattern in order to simulate\nthe results of the transfers.\n@param assetData Array of asset details, each encoded per the AssetProxy contract specification.\n@param fromAddresses Array containing the ",Object(n.b)("inlineCode",{parentName:"p"},"from")," addresses that correspond with each transfer.\n@param toAddresses Array containing the ",Object(n.b)("inlineCode",{parentName:"p"},"to")," addresses that correspond with each transfer.\n@param amounts Array containing the amounts that correspond to each transfer.\n@return This function does not return a value. However, it will always revert with\n",Object(n.b)("inlineCode",{parentName:"p"},"Error(&quot;TRANSFERS_SUCCESSFUL&quot;)")," if all of the transfers were successful."),Object(n.b)("h3",{id:"iwrapperfunctions"},Object(n.b)("inlineCode",{parentName:"h3"},"IWrapperFunctions")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.fillOrKillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"fillOrKillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.batchFillOrders(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.batchFillOrKillOrders(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrKillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.batchFillOrdersNoThrow(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrdersNoThrow(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.marketSellOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketSellOrdersNoThrow(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.marketBuyOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersNoThrow(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.marketSellOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketSellOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.marketBuyOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.batchCancelOrders(struct LibOrder.Order[])"},Object(n.b)("code",{class:"function-signature"},"batchCancelOrders(struct LibOrder.Order[] orders)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.fillOrKillOrder(struct LibOrder.Order,uint256,bytes)"}),Object(n.b)("code",{class:"function-signature"},"fillOrKillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Fills the input order. Reverts if exact takerAssetFillAmount not filled.\n@param order Order struct containing order specifications.\n@param takerAssetFillAmount Desired amount of takerAsset to sell.\n@param signature Proof that order has been created by maker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.batchFillOrders(struct LibOrder.Order[],uint256[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchFillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of fillOrder.\n@param orders Array of order specifications.\n@param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n@param signatures Proofs that orders have been created by makers.\n@return Array of amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.batchFillOrKillOrders(struct LibOrder.Order[],uint256[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchFillOrKillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of fillOrKillOrder.\n@param orders Array of order specifications.\n@param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n@param signatures Proofs that orders have been created by makers.\n@return Array of amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.batchFillOrdersNoThrow(struct LibOrder.Order[],uint256[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchFillOrdersNoThrow(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of fillOrder. If any fill reverts, the error is caught and ignored.\n@param orders Array of order specifications.\n@param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n@param signatures Proofs that orders have been created by makers.\n@return Array of amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.marketSellOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"marketSellOrdersNoThrow(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.\nIf any fill reverts, the error is caught and ignored.\nNOTE: This function does not enforce that the takerAsset is the same for each order.\n@param orders Array of order specifications.\n@param takerAssetFillAmount Desired amount of takerAsset to sell.\n@param signatures Proofs that orders have been signed by makers.\n@return Amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.marketBuyOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersNoThrow(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of fillOrder until total amount of makerAsset is bought by taker.\nIf any fill reverts, the error is caught and ignored.\nNOTE: This function does not enforce that the makerAsset is the same for each order.\n@param orders Array of order specifications.\n@param makerAssetFillAmount Desired amount of makerAsset to buy.\n@param signatures Proofs that orders have been signed by makers.\n@return Amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.marketSellOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"marketSellOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Calls marketSellOrdersNoThrow then reverts if ","<"," takerAssetFillAmount has been sold.\nNOTE: This function does not enforce that the takerAsset is the same for each order.\n@param orders Array of order specifications.\n@param takerAssetFillAmount Minimum amount of takerAsset to sell.\n@param signatures Proofs that orders have been signed by makers.\n@return Amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.marketBuyOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Calls marketBuyOrdersNoThrow then reverts if ","<"," makerAssetFillAmount has been bought.\nNOTE: This function does not enforce that the makerAsset is the same for each order.\n@param orders Array of order specifications.\n@param makerAssetFillAmount Minimum amount of makerAsset to buy.\n@param signatures Proofs that orders have been signed by makers.\n@return Amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.batchCancelOrders(struct LibOrder.Order[])"}),Object(n.b)("code",{class:"function-signature"},"batchCancelOrders(struct LibOrder.Order[] orders)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of cancelOrder.\n@param orders Array of order specifications."),Object(n.b)("h3",{id:"libassetdata"},Object(n.b)("inlineCode",{parentName:"h3"},"LibAssetData")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData.constructor(address,address)"},Object(n.b)("code",{class:"function-signature"},"constructor(address _exchange, address _chaiBridge)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData.getBalance(address,bytes)"},Object(n.b)("code",{class:"function-signature"},"getBalance(address ownerAddress, bytes assetData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData.getBatchBalances(address,bytes[])"},Object(n.b)("code",{class:"function-signature"},"getBatchBalances(address ownerAddress, bytes[] assetData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData.getAssetProxyAllowance(address,bytes)"},Object(n.b)("code",{class:"function-signature"},"getAssetProxyAllowance(address ownerAddress, bytes assetData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData.getBatchAssetProxyAllowances(address,bytes[])"},Object(n.b)("code",{class:"function-signature"},"getBatchAssetProxyAllowances(address ownerAddress, bytes[] assetData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData.getBalanceAndAssetProxyAllowance(address,bytes)"},Object(n.b)("code",{class:"function-signature"},"getBalanceAndAssetProxyAllowance(address ownerAddress, bytes assetData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData.getBatchBalancesAndAssetProxyAllowances(address,bytes[])"},Object(n.b)("code",{class:"function-signature"},"getBatchBalancesAndAssetProxyAllowances(address ownerAddress, bytes[] assetData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData.decodeAssetProxyId(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeAssetProxyId(bytes assetData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData.encodeERC20AssetData(address)"},Object(n.b)("code",{class:"function-signature"},"encodeERC20AssetData(address tokenAddress)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData.decodeERC20AssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeERC20AssetData(bytes assetData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData.encodeERC721AssetData(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"encodeERC721AssetData(address tokenAddress, uint256 tokenId)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData.decodeERC721AssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeERC721AssetData(bytes assetData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData.encodeERC1155AssetData(address,uint256[],uint256[],bytes)"},Object(n.b)("code",{class:"function-signature"},"encodeERC1155AssetData(address tokenAddress, uint256[] tokenIds, uint256[] tokenValues, bytes callbackData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData.decodeERC1155AssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeERC1155AssetData(bytes assetData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData.encodeMultiAssetData(uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"encodeMultiAssetData(uint256[] amounts, bytes[] nestedAssetData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData.decodeMultiAssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeMultiAssetData(bytes assetData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData.encodeStaticCallAssetData(address,bytes,bytes32)"},Object(n.b)("code",{class:"function-signature"},"encodeStaticCallAssetData(address staticCallTargetAddress, bytes staticCallData, bytes32 expectedReturnDataHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData.decodeStaticCallAssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeStaticCallAssetData(bytes assetData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData.decodeERC20BridgeAssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeERC20BridgeAssetData(bytes assetData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData.revertIfInvalidAssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"revertIfInvalidAssetData(bytes assetData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData._erc20BalanceOf(address,address)"},Object(n.b)("code",{class:"function-signature"},"_erc20BalanceOf(address tokenAddress, address ownerAddress)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibAssetData._convertChaiToDaiAmount(uint256)"},Object(n.b)("code",{class:"function-signature"},"_convertChaiToDaiAmount(uint256 chaiAmount)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getKyberNetworkProxyAddress()"},Object(n.b)("code",{class:"function-signature"},"_getKyberNetworkProxyAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getWethAddress()"},Object(n.b)("code",{class:"function-signature"},"_getWethAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getUniswapExchangeFactoryAddress()"},Object(n.b)("code",{class:"function-signature"},"_getUniswapExchangeFactoryAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getEth2DaiAddress()"},Object(n.b)("code",{class:"function-signature"},"_getEth2DaiAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getERC20BridgeProxyAddress()"},Object(n.b)("code",{class:"function-signature"},"_getERC20BridgeProxyAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getDaiAddress()"},Object(n.b)("code",{class:"function-signature"},"_getDaiAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getChaiAddress()"},Object(n.b)("code",{class:"function-signature"},"_getChaiAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getDevUtilsAddress()"},Object(n.b)("code",{class:"function-signature"},"_getDevUtilsAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getDydxAddress()"},Object(n.b)("code",{class:"function-signature"},"_getDydxAddress()"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData.constructor(address,address)"}),Object(n.b)("code",{class:"function-signature"},"constructor(address _exchange, address _chaiBridge)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData.getBalance(address,bytes)"}),Object(n.b)("code",{class:"function-signature"},"getBalance(address ownerAddress, bytes assetData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Returns the owner","'","s balance of the assets(s) specified in\nassetData.  When the asset data contains multiple assets (eg in\nERC1155 or Multi-Asset), the return value indicates how many\ncomplete ",'"',"baskets",'"'," of those assets are owned by owner.\n@param ownerAddress Owner of the assets specified by assetData.\n@param assetData Details of asset, encoded per the AssetProxy contract specification.\n@return Number of assets (or asset baskets) held by owner."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData.getBatchBalances(address,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"getBatchBalances(address ownerAddress, bytes[] assetData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Calls getBalance() for each element of assetData.\n@param ownerAddress Owner of the assets specified by assetData.\n@param assetData Array of asset details, each encoded per the AssetProxy contract specification.\n@return Array of asset balances from getBalance(), with each element\ncorresponding to the same-indexed element in the assetData input."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData.getAssetProxyAllowance(address,bytes)"}),Object(n.b)("code",{class:"function-signature"},"getAssetProxyAllowance(address ownerAddress, bytes assetData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Returns the number of asset(s) (described by assetData) that\nthe corresponding AssetProxy contract is authorized to spend.  When the asset data contains\nmultiple assets (eg for Multi-Asset), the return value indicates\nhow many complete ",'"',"baskets",'"'," of those assets may be spent by all of the corresponding\nAssetProxy contracts.\n@param ownerAddress Owner of the assets specified by assetData.\n@param assetData Details of asset, encoded per the AssetProxy contract specification.\n@return Number of assets (or asset baskets) that the corresponding AssetProxy is authorized to spend."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData.getBatchAssetProxyAllowances(address,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"getBatchAssetProxyAllowances(address ownerAddress, bytes[] assetData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Calls getAssetProxyAllowance() for each element of assetData.\n@param ownerAddress Owner of the assets specified by assetData.\n@param assetData Array of asset details, each encoded per the AssetProxy contract specification.\n@return An array of asset allowances from getAllowance(), with each\nelement corresponding to the same-indexed element in the assetData input."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData.getBalanceAndAssetProxyAllowance(address,bytes)"}),Object(n.b)("code",{class:"function-signature"},"getBalanceAndAssetProxyAllowance(address ownerAddress, bytes assetData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256,uint256")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Calls getBalance() and getAllowance() for assetData.\n@param ownerAddress Owner of the assets specified by assetData.\n@param assetData Details of asset, encoded per the AssetProxy contract specification.\n@return Number of assets (or asset baskets) held by owner, and number\nof assets (or asset baskets) that the corresponding AssetProxy is authorized to spend."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData.getBatchBalancesAndAssetProxyAllowances(address,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"getBatchBalancesAndAssetProxyAllowances(address ownerAddress, bytes[] assetData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256[],uint256[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Calls getBatchBalances() and getBatchAllowances() for each element of assetData.\n@param ownerAddress Owner of the assets specified by assetData.\n@param assetData Array of asset details, each encoded per the AssetProxy contract specification.\n@return An array of asset balances from getBalance(), and an array of\nasset allowances from getAllowance(), with each element\ncorresponding to the same-indexed element in the assetData input."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData.decodeAssetProxyId(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeAssetProxyId(bytes assetData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decode AssetProxy identifier\n@param assetData AssetProxy-compliant asset data describing an ERC-20, ERC-721, ERC1155, or MultiAsset asset.\n@return The AssetProxy identifier"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData.encodeERC20AssetData(address)"}),Object(n.b)("code",{class:"function-signature"},"encodeERC20AssetData(address tokenAddress) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Encode ERC-20 asset data into the format described in the AssetProxy contract specification.\n@param tokenAddress The address of the ERC-20 contract hosting the asset to be traded.\n@return AssetProxy-compliant data describing the asset."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData.decodeERC20AssetData(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeERC20AssetData(bytes assetData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4,address")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decode ERC-20 asset data from the format described in the AssetProxy contract specification.\n@param assetData AssetProxy-compliant asset data describing an ERC-20 asset.\n@return The AssetProxy identifier, and the address of the ERC-20\ncontract hosting this asset."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData.encodeERC721AssetData(address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"encodeERC721AssetData(address tokenAddress, uint256 tokenId) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Encode ERC-721 asset data into the format described in the AssetProxy specification.\n@param tokenAddress The address of the ERC-721 contract hosting the asset to be traded.\n@param tokenId The identifier of the specific asset to be traded.\n@return AssetProxy-compliant asset data describing the asset."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData.decodeERC721AssetData(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeERC721AssetData(bytes assetData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4,address,uint256")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decode ERC-721 asset data from the format described in the AssetProxy contract specification.\n@param assetData AssetProxy-compliant asset data describing an ERC-721 asset.\n@return The ERC-721 AssetProxy identifier, the address of the ERC-721\ncontract hosting this asset, and the identifier of the specific\nasset to be traded."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData.encodeERC1155AssetData(address,uint256[],uint256[],bytes)"}),Object(n.b)("code",{class:"function-signature"},"encodeERC1155AssetData(address tokenAddress, uint256[] tokenIds, uint256[] tokenValues, bytes callbackData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Encode ERC-1155 asset data into the format described in the AssetProxy contract specification.\n@param tokenAddress The address of the ERC-1155 contract hosting the asset(s) to be traded.\n@param tokenIds The identifiers of the specific assets to be traded.\n@param tokenValues The amounts of each asset to be traded.\n@param callbackData Data to be passed to receiving contracts when a transfer is performed.\n@return AssetProxy-compliant asset data describing the set of assets."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData.decodeERC1155AssetData(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeERC1155AssetData(bytes assetData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4,address,uint256[],uint256[],bytes")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decode ERC-1155 asset data from the format described in the AssetProxy contract specification.\n@param assetData AssetProxy-compliant asset data describing an ERC-1155 set of assets.\n@return The ERC-1155 AssetProxy identifier, the address of the ERC-1155\ncontract hosting the assets, an array of the identifiers of the\nassets to be traded, an array of asset amounts to be traded, and\ncallback data.  Each element of the arrays corresponds to the\nsame-indexed element of the other array.  Return values specified as\n",Object(n.b)("inlineCode",{parentName:"p"},"memory")," are returned as pointers to locations within the memory of\nthe input parameter ",Object(n.b)("inlineCode",{parentName:"p"},"assetData"),"."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData.encodeMultiAssetData(uint256[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"encodeMultiAssetData(uint256[] amounts, bytes[] nestedAssetData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Encode data for multiple assets, per the AssetProxy contract specification.\n@param amounts The amounts of each asset to be traded.\n@param nestedAssetData AssetProxy-compliant data describing each asset to be traded.\n@return AssetProxy-compliant data describing the set of assets."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData.decodeMultiAssetData(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeMultiAssetData(bytes assetData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4,uint256[],bytes[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decode multi-asset data from the format described in the AssetProxy contract specification.\n@param assetData AssetProxy-compliant data describing a multi-asset basket.\n@return The Multi-Asset AssetProxy identifier, an array of the amounts\nof the assets to be traded, and an array of the\nAssetProxy-compliant data describing each asset to be traded.  Each\nelement of the arrays corresponds to the same-indexed element of the other array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData.encodeStaticCallAssetData(address,bytes,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"encodeStaticCallAssetData(address staticCallTargetAddress, bytes staticCallData, bytes32 expectedReturnDataHash) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Encode StaticCall asset data into the format described in the AssetProxy contract specification.\n@param staticCallTargetAddress Target address of StaticCall.\n@param staticCallData Data that will be passed to staticCallTargetAddress in the StaticCall.\n@param expectedReturnDataHash Expected Keccak-256 hash of the StaticCall return data.\n@return AssetProxy-compliant asset data describing the set of assets."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData.decodeStaticCallAssetData(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeStaticCallAssetData(bytes assetData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4,address,bytes,bytes32")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decode StaticCall asset data from the format described in the AssetProxy contract specification.\n@param assetData AssetProxy-compliant asset data describing a StaticCall asset\n@return The StaticCall AssetProxy identifier, the target address of the StaticCAll, the data to be\npassed to the target address, and the expected Keccak-256 hash of the static call return data."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData.decodeERC20BridgeAssetData(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeERC20BridgeAssetData(bytes assetData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4,address,address,bytes")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decode ERC20Bridge asset data from the format described in the AssetProxy contract specification.\n@param assetData AssetProxy-compliant asset data describing an ERC20Bridge asset\n@return The ERC20BridgeProxy identifier, the address of the ERC20 token to transfer, the address\nof the bridge contract, and extra data to be passed to the bridge contract."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData.revertIfInvalidAssetData(bytes)"}),Object(n.b)("code",{class:"function-signature"},"revertIfInvalidAssetData(bytes assetData)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Reverts if assetData is not of a valid format for its given proxy id.\n@param assetData AssetProxy compliant asset data."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData._erc20BalanceOf(address,address)"}),Object(n.b)("code",{class:"function-signature"},"_erc20BalanceOf(address tokenAddress, address ownerAddress) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Queries balance of an ERC20 token. Returns 0 if call was unsuccessful.\n@param tokenAddress Address of ERC20 token.\n@param ownerAddress Address of owner of ERC20 token.\n@return balance ERC20 token balance of owner."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibAssetData._convertChaiToDaiAmount(uint256)"}),Object(n.b)("code",{class:"function-signature"},"_convertChaiToDaiAmount(uint256 chaiAmount) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Converts an amount of Chai into its equivalent Dai amount.\nAlso accumulates Dai from DSR if called after the last time it was collected.\n@param chaiAmount Amount of Chai to converts."),Object(n.b)("h3",{id:"libbytes"},Object(n.b)("inlineCode",{parentName:"h3"},"LibBytes")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.rawAddress(bytes)"},Object(n.b)("code",{class:"function-signature"},"rawAddress(bytes input)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.contentAddress(bytes)"},Object(n.b)("code",{class:"function-signature"},"contentAddress(bytes input)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.memCopy(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"memCopy(uint256 dest, uint256 source, uint256 length)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.slice(bytes,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"slice(bytes b, uint256 from, uint256 to)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.sliceDestructive(bytes,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"sliceDestructive(bytes b, uint256 from, uint256 to)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.popLastByte(bytes)"},Object(n.b)("code",{class:"function-signature"},"popLastByte(bytes b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.equals(bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"equals(bytes lhs, bytes rhs)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.readAddress(bytes,uint256)"},Object(n.b)("code",{class:"function-signature"},"readAddress(bytes b, uint256 index)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.writeAddress(bytes,uint256,address)"},Object(n.b)("code",{class:"function-signature"},"writeAddress(bytes b, uint256 index, address input)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.readBytes32(bytes,uint256)"},Object(n.b)("code",{class:"function-signature"},"readBytes32(bytes b, uint256 index)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.writeBytes32(bytes,uint256,bytes32)"},Object(n.b)("code",{class:"function-signature"},"writeBytes32(bytes b, uint256 index, bytes32 input)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.readUint256(bytes,uint256)"},Object(n.b)("code",{class:"function-signature"},"readUint256(bytes b, uint256 index)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.writeUint256(bytes,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"writeUint256(bytes b, uint256 index, uint256 input)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.readBytes4(bytes,uint256)"},Object(n.b)("code",{class:"function-signature"},"readBytes4(bytes b, uint256 index)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.writeLength(bytes,uint256)"},Object(n.b)("code",{class:"function-signature"},"writeLength(bytes b, uint256 length)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.rawAddress(bytes)"}),Object(n.b)("code",{class:"function-signature"},"rawAddress(bytes input) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Gets the memory address for a byte array.\n@param input Byte array to lookup.\n@return memoryAddress Memory address of byte array. This\npoints to the header of the byte array which contains\nthe length."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.contentAddress(bytes)"}),Object(n.b)("code",{class:"function-signature"},"contentAddress(bytes input) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Gets the memory address for the contents of a byte array.\n@param input Byte array to lookup.\n@return memoryAddress Memory address of the contents of the byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.memCopy(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"memCopy(uint256 dest, uint256 source, uint256 length)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Copies ",Object(n.b)("inlineCode",{parentName:"p"},"length")," bytes from memory location ",Object(n.b)("inlineCode",{parentName:"p"},"source")," to ",Object(n.b)("inlineCode",{parentName:"p"},"dest"),".\n@param dest memory address to copy bytes to.\n@param source memory address to copy bytes from.\n@param length number of bytes to copy."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.slice(bytes,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"slice(bytes b, uint256 from, uint256 to) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Returns a slices from a byte array.\n@param b The byte array to take a slice from.\n@param from The starting index for the slice (inclusive).\n@param to The final index for the slice (exclusive).\n@return result The slice containing bytes at indices [from, to)"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.sliceDestructive(bytes,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"sliceDestructive(bytes b, uint256 from, uint256 to) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Returns a slice from a byte array without preserving the input.\n@param b The byte array to take a slice from. Will be destroyed in the process.\n@param from The starting index for the slice (inclusive).\n@param to The final index for the slice (exclusive).\n@return result The slice containing bytes at indices [from, to)\n@dev When ",Object(n.b)("inlineCode",{parentName:"p"},"from == 0"),", the original array will match the slice. In other cases its state will be corrupted."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.popLastByte(bytes)"}),Object(n.b)("code",{class:"function-signature"},"popLastByte(bytes b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes1")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Pops the last byte off of a byte array by modifying its length.\n@param b Byte array that will be modified.\n@return The byte that was popped off."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.equals(bytes,bytes)"}),Object(n.b)("code",{class:"function-signature"},"equals(bytes lhs, bytes rhs) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Tests equality of two byte arrays.\n@param lhs First byte array to compare.\n@param rhs Second byte array to compare.\n@return True if arrays are the same. False otherwise."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.readAddress(bytes,uint256)"}),Object(n.b)("code",{class:"function-signature"},"readAddress(bytes b, uint256 index) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Reads an address from a position in a byte array.\n@param b Byte array containing an address.\n@param index Index in byte array of address.\n@return address from byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.writeAddress(bytes,uint256,address)"}),Object(n.b)("code",{class:"function-signature"},"writeAddress(bytes b, uint256 index, address input)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Writes an address into a specific position in a byte array.\n@param b Byte array to insert address into.\n@param index Index in byte array of address.\n@param input Address to put into byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.readBytes32(bytes,uint256)"}),Object(n.b)("code",{class:"function-signature"},"readBytes32(bytes b, uint256 index) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Reads a bytes32 value from a position in a byte array.\n@param b Byte array containing a bytes32 value.\n@param index Index in byte array of bytes32 value.\n@return bytes32 value from byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.writeBytes32(bytes,uint256,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"writeBytes32(bytes b, uint256 index, bytes32 input)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Writes a bytes32 into a specific position in a byte array.\n@param b Byte array to insert ","<","input",">"," into.\n@param index Index in byte array of ","<","input",">",".\n@param input bytes32 to put into byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.readUint256(bytes,uint256)"}),Object(n.b)("code",{class:"function-signature"},"readUint256(bytes b, uint256 index) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Reads a uint256 value from a position in a byte array.\n@param b Byte array containing a uint256 value.\n@param index Index in byte array of uint256 value.\n@return uint256 value from byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.writeUint256(bytes,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"writeUint256(bytes b, uint256 index, uint256 input)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Writes a uint256 into a specific position in a byte array.\n@param b Byte array to insert ","<","input",">"," into.\n@param index Index in byte array of ","<","input",">",".\n@param input uint256 to put into byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.readBytes4(bytes,uint256)"}),Object(n.b)("code",{class:"function-signature"},"readBytes4(bytes b, uint256 index) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Reads an unpadded bytes4 value from a position in a byte array.\n@param b Byte array containing a bytes4 value.\n@param index Index in byte array of bytes4 value.\n@return bytes4 value from byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.writeLength(bytes,uint256)"}),Object(n.b)("code",{class:"function-signature"},"writeLength(bytes b, uint256 length)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Writes a new length to a byte array.\nDecreasing length will lead to removing the corresponding lower order bytes from the byte array.\nIncreasing length may lead to appending adjacent in-memory bytes to the end of the byte array.\n@param b Bytes array to write new length to.\n@param length New length of byte array."),Object(n.b)("h3",{id:"libeip712"},Object(n.b)("inlineCode",{parentName:"h3"},"LibEIP712")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibEIP712.hashEIP712Domain(string,string,uint256,address)"},Object(n.b)("code",{class:"function-signature"},"hashEIP712Domain(string name, string version, uint256 chainId, address verifyingContract)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibEIP712.hashEIP712Message(bytes32,bytes32)"},Object(n.b)("code",{class:"function-signature"},"hashEIP712Message(bytes32 eip712DomainHash, bytes32 hashStruct)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibEIP712.hashEIP712Domain(string,string,uint256,address)"}),Object(n.b)("code",{class:"function-signature"},"hashEIP712Domain(string name, string version, uint256 chainId, address verifyingContract) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates a EIP712 domain separator.\n@param name The EIP712 domain name.\n@param version The EIP712 domain version.\n@param verifyingContract The EIP712 verifying contract.\n@return EIP712 domain separator."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibEIP712.hashEIP712Message(bytes32,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"hashEIP712Message(bytes32 eip712DomainHash, bytes32 hashStruct) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates EIP712 encoding for a hash struct with a given domain hash.\n@param eip712DomainHash Hash of the domain domain separator data, computed\nwith getDomainHash().\n@param hashStruct The EIP712 hash struct.\n@return EIP712 hash applied to the given EIP712 Domain."),Object(n.b)("h3",{id:"libeip712exchangedomain"},Object(n.b)("inlineCode",{parentName:"h3"},"LibEIP712ExchangeDomain")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibEIP712ExchangeDomain.constructor(uint256,address)"},Object(n.b)("code",{class:"function-signature"},"constructor(uint256 chainId, address verifyingContractAddressIfExists)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibEIP712ExchangeDomain.constructor(uint256,address)"}),Object(n.b)("code",{class:"function-signature"},"constructor(uint256 chainId, address verifyingContractAddressIfExists)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("h3",{id:"libexchangericherrordecoder"},Object(n.b)("inlineCode",{parentName:"h3"},"LibExchangeRichErrorDecoder")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrorDecoder.decodeSignatureError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeSignatureError(bytes encoded)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrorDecoder.decodeEIP1271SignatureError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeEIP1271SignatureError(bytes encoded)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrorDecoder.decodeSignatureValidatorNotApprovedError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeSignatureValidatorNotApprovedError(bytes encoded)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrorDecoder.decodeSignatureWalletError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeSignatureWalletError(bytes encoded)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrorDecoder.decodeOrderStatusError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeOrderStatusError(bytes encoded)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrorDecoder.decodeExchangeInvalidContextError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeExchangeInvalidContextError(bytes encoded)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrorDecoder.decodeFillError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeFillError(bytes encoded)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrorDecoder.decodeOrderEpochError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeOrderEpochError(bytes encoded)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrorDecoder.decodeAssetProxyExistsError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeAssetProxyExistsError(bytes encoded)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrorDecoder.decodeAssetProxyDispatchError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeAssetProxyDispatchError(bytes encoded)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrorDecoder.decodeAssetProxyTransferError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeAssetProxyTransferError(bytes encoded)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrorDecoder.decodeNegativeSpreadError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeNegativeSpreadError(bytes encoded)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrorDecoder.decodeTransactionError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeTransactionError(bytes encoded)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrorDecoder.decodeTransactionExecutionError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeTransactionExecutionError(bytes encoded)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrorDecoder.decodeIncompleteFillError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeIncompleteFillError(bytes encoded)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrorDecoder.decodeSignatureError(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeSignatureError(bytes encoded) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"enum LibExchangeRichErrors.SignatureErrorCodes,bytes32,address,bytes")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decompose an ABI-encoded SignatureError.\n@param encoded ABI-encoded revert error.\n@return errorCode The error code.\n@return signerAddress The expected signer of the hash.\n@return signature The full signature."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrorDecoder.decodeEIP1271SignatureError(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeEIP1271SignatureError(bytes encoded) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address,bytes,bytes,bytes")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decompose an ABI-encoded SignatureValidatorError.\n@param encoded ABI-encoded revert error.\n@return signerAddress The expected signer of the hash.\n@return signature The full signature bytes.\n@return errorData The revert data thrown by the validator contract."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrorDecoder.decodeSignatureValidatorNotApprovedError(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeSignatureValidatorNotApprovedError(bytes encoded) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address,address")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decompose an ABI-encoded SignatureValidatorNotApprovedError.\n@param encoded ABI-encoded revert error.\n@return signerAddress The expected signer of the hash.\n@return validatorAddress The expected validator."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrorDecoder.decodeSignatureWalletError(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeSignatureWalletError(bytes encoded) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32,address,bytes,bytes")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decompose an ABI-encoded SignatureWalletError.\n@param encoded ABI-encoded revert error.\n@return errorCode The error code.\n@return signerAddress The expected signer of the hash.\n@return signature The full signature bytes.\n@return errorData The revert data thrown by the validator contract."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrorDecoder.decodeOrderStatusError(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeOrderStatusError(bytes encoded) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32,enum LibOrder.OrderStatus")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decompose an ABI-encoded OrderStatusError.\n@param encoded ABI-encoded revert error.\n@return orderHash The order hash.\n@return orderStatus The order status."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrorDecoder.decodeExchangeInvalidContextError(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeExchangeInvalidContextError(bytes encoded) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"enum LibExchangeRichErrors.ExchangeContextErrorCodes,bytes32,address")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decompose an ABI-encoded OrderStatusError.\n@param encoded ABI-encoded revert error.\n@return errorCode Error code that corresponds to invalid maker, taker, or sender.\n@return orderHash The order hash.\n@return contextAddress The maker, taker, or sender address"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrorDecoder.decodeFillError(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeFillError(bytes encoded) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"enum LibExchangeRichErrors.FillErrorCodes,bytes32")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decompose an ABI-encoded FillError.\n@param encoded ABI-encoded revert error.\n@return errorCode The error code.\n@return orderHash The order hash."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrorDecoder.decodeOrderEpochError(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeOrderEpochError(bytes encoded) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address,address,uint256")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decompose an ABI-encoded OrderEpochError.\n@param encoded ABI-encoded revert error.\n@return makerAddress The order maker.\n@return orderSenderAddress The order sender.\n@return currentEpoch The current epoch for the maker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrorDecoder.decodeAssetProxyExistsError(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeAssetProxyExistsError(bytes encoded) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4,address")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decompose an ABI-encoded AssetProxyExistsError.\n@param encoded ABI-encoded revert error.\n@return assetProxyId Id of asset proxy.\n@return assetProxyAddress The address of the asset proxy."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrorDecoder.decodeAssetProxyDispatchError(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeAssetProxyDispatchError(bytes encoded) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"enum LibExchangeRichErrors.AssetProxyDispatchErrorCodes,bytes32,bytes")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decompose an ABI-encoded AssetProxyDispatchError.\n@param encoded ABI-encoded revert error.\n@return errorCode The error code.\n@return orderHash Hash of the order being dispatched.\n@return assetData Asset data of the order being dispatched."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrorDecoder.decodeAssetProxyTransferError(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeAssetProxyTransferError(bytes encoded) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32,bytes,bytes")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decompose an ABI-encoded AssetProxyTransferError.\n@param encoded ABI-encoded revert error.\n@return orderHash Hash of the order being dispatched.\n@return assetData Asset data of the order being dispatched.\n@return errorData ABI-encoded revert data from the asset proxy."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrorDecoder.decodeNegativeSpreadError(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeNegativeSpreadError(bytes encoded) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32,bytes32")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decompose an ABI-encoded NegativeSpreadError.\n@param encoded ABI-encoded revert error.\n@return leftOrderHash Hash of the left order being matched.\n@return rightOrderHash Hash of the right order being matched."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrorDecoder.decodeTransactionError(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeTransactionError(bytes encoded) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"enum LibExchangeRichErrors.TransactionErrorCodes,bytes32")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decompose an ABI-encoded TransactionError.\n@param encoded ABI-encoded revert error.\n@return errorCode The error code.\n@return transactionHash Hash of the transaction."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrorDecoder.decodeTransactionExecutionError(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeTransactionExecutionError(bytes encoded) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32,bytes")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decompose an ABI-encoded TransactionExecutionError.\n@param encoded ABI-encoded revert error.\n@return transactionHash Hash of the transaction.\n@return errorData Error thrown by exeucteTransaction()."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrorDecoder.decodeIncompleteFillError(bytes)"}),Object(n.b)("code",{class:"function-signature"},"decodeIncompleteFillError(bytes encoded) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"enum LibExchangeRichErrors.IncompleteFillErrorCode,uint256,uint256")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Decompose an ABI-encoded IncompleteFillError.\n@param encoded ABI-encoded revert error.\n@return orderHash Hash of the order being filled."),Object(n.b)("h3",{id:"libexchangericherrors"},Object(n.b)("inlineCode",{parentName:"h3"},"LibExchangeRichErrors")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.SignatureErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"SignatureErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.SignatureValidatorNotApprovedErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"SignatureValidatorNotApprovedErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.EIP1271SignatureErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"EIP1271SignatureErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.SignatureWalletErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"SignatureWalletErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.OrderStatusErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"OrderStatusErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.ExchangeInvalidContextErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"ExchangeInvalidContextErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.FillErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"FillErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.OrderEpochErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"OrderEpochErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.AssetProxyExistsErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"AssetProxyExistsErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.AssetProxyDispatchErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"AssetProxyDispatchErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.AssetProxyTransferErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"AssetProxyTransferErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.NegativeSpreadErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"NegativeSpreadErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.TransactionErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"TransactionErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.TransactionExecutionErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"TransactionExecutionErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.IncompleteFillErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"IncompleteFillErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.BatchMatchOrdersErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"BatchMatchOrdersErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.TransactionGasPriceErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"TransactionGasPriceErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.TransactionInvalidContextErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"TransactionInvalidContextErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.PayProtocolFeeErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"PayProtocolFeeErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.BatchMatchOrdersError(enum LibExchangeRichErrors.BatchMatchOrdersErrorCodes)"},Object(n.b)("code",{class:"function-signature"},"BatchMatchOrdersError(enum LibExchangeRichErrors.BatchMatchOrdersErrorCodes errorCode)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.SignatureError(enum LibExchangeRichErrors.SignatureErrorCodes,bytes32,address,bytes)"},Object(n.b)("code",{class:"function-signature"},"SignatureError(enum LibExchangeRichErrors.SignatureErrorCodes errorCode, bytes32 hash, address signerAddress, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.SignatureValidatorNotApprovedError(address,address)"},Object(n.b)("code",{class:"function-signature"},"SignatureValidatorNotApprovedError(address signerAddress, address validatorAddress)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.EIP1271SignatureError(address,bytes,bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"EIP1271SignatureError(address verifyingContractAddress, bytes data, bytes signature, bytes errorData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.SignatureWalletError(bytes32,address,bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"SignatureWalletError(bytes32 hash, address walletAddress, bytes signature, bytes errorData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.OrderStatusError(bytes32,enum LibOrder.OrderStatus)"},Object(n.b)("code",{class:"function-signature"},"OrderStatusError(bytes32 orderHash, enum LibOrder.OrderStatus orderStatus)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.ExchangeInvalidContextError(enum LibExchangeRichErrors.ExchangeContextErrorCodes,bytes32,address)"},Object(n.b)("code",{class:"function-signature"},"ExchangeInvalidContextError(enum LibExchangeRichErrors.ExchangeContextErrorCodes errorCode, bytes32 orderHash, address contextAddress)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.FillError(enum LibExchangeRichErrors.FillErrorCodes,bytes32)"},Object(n.b)("code",{class:"function-signature"},"FillError(enum LibExchangeRichErrors.FillErrorCodes errorCode, bytes32 orderHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.OrderEpochError(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"OrderEpochError(address makerAddress, address orderSenderAddress, uint256 currentEpoch)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.AssetProxyExistsError(bytes4,address)"},Object(n.b)("code",{class:"function-signature"},"AssetProxyExistsError(bytes4 assetProxyId, address assetProxyAddress)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.AssetProxyDispatchError(enum LibExchangeRichErrors.AssetProxyDispatchErrorCodes,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"AssetProxyDispatchError(enum LibExchangeRichErrors.AssetProxyDispatchErrorCodes errorCode, bytes32 orderHash, bytes assetData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.AssetProxyTransferError(bytes32,bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"AssetProxyTransferError(bytes32 orderHash, bytes assetData, bytes errorData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.NegativeSpreadError(bytes32,bytes32)"},Object(n.b)("code",{class:"function-signature"},"NegativeSpreadError(bytes32 leftOrderHash, bytes32 rightOrderHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.TransactionError(enum LibExchangeRichErrors.TransactionErrorCodes,bytes32)"},Object(n.b)("code",{class:"function-signature"},"TransactionError(enum LibExchangeRichErrors.TransactionErrorCodes errorCode, bytes32 transactionHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.TransactionExecutionError(bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"TransactionExecutionError(bytes32 transactionHash, bytes errorData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.TransactionGasPriceError(bytes32,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"TransactionGasPriceError(bytes32 transactionHash, uint256 actualGasPrice, uint256 requiredGasPrice)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.TransactionInvalidContextError(bytes32,address)"},Object(n.b)("code",{class:"function-signature"},"TransactionInvalidContextError(bytes32 transactionHash, address currentContextAddress)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.IncompleteFillError(enum LibExchangeRichErrors.IncompleteFillErrorCode,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"IncompleteFillError(enum LibExchangeRichErrors.IncompleteFillErrorCode errorCode, uint256 expectedAssetFillAmount, uint256 actualAssetFillAmount)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.PayProtocolFeeError(bytes32,uint256,address,address,bytes)"},Object(n.b)("code",{class:"function-signature"},"PayProtocolFeeError(bytes32 orderHash, uint256 protocolFee, address makerAddress, address takerAddress, bytes errorData)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.SignatureErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"SignatureErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.SignatureValidatorNotApprovedErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"SignatureValidatorNotApprovedErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.EIP1271SignatureErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"EIP1271SignatureErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.SignatureWalletErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"SignatureWalletErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.OrderStatusErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"OrderStatusErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.ExchangeInvalidContextErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"ExchangeInvalidContextErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.FillErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"FillErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.OrderEpochErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"OrderEpochErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.AssetProxyExistsErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"AssetProxyExistsErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.AssetProxyDispatchErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"AssetProxyDispatchErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.AssetProxyTransferErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"AssetProxyTransferErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.NegativeSpreadErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"NegativeSpreadErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.TransactionErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"TransactionErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.TransactionExecutionErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"TransactionExecutionErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.IncompleteFillErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"IncompleteFillErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.BatchMatchOrdersErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"BatchMatchOrdersErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.TransactionGasPriceErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"TransactionGasPriceErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.TransactionInvalidContextErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"TransactionInvalidContextErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.PayProtocolFeeErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"PayProtocolFeeErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.BatchMatchOrdersError(enum LibExchangeRichErrors.BatchMatchOrdersErrorCodes)"}),Object(n.b)("code",{class:"function-signature"},"BatchMatchOrdersError(enum LibExchangeRichErrors.BatchMatchOrdersErrorCodes errorCode) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.SignatureError(enum LibExchangeRichErrors.SignatureErrorCodes,bytes32,address,bytes)"}),Object(n.b)("code",{class:"function-signature"},"SignatureError(enum LibExchangeRichErrors.SignatureErrorCodes errorCode, bytes32 hash, address signerAddress, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.SignatureValidatorNotApprovedError(address,address)"}),Object(n.b)("code",{class:"function-signature"},"SignatureValidatorNotApprovedError(address signerAddress, address validatorAddress) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.EIP1271SignatureError(address,bytes,bytes,bytes)"}),Object(n.b)("code",{class:"function-signature"},"EIP1271SignatureError(address verifyingContractAddress, bytes data, bytes signature, bytes errorData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.SignatureWalletError(bytes32,address,bytes,bytes)"}),Object(n.b)("code",{class:"function-signature"},"SignatureWalletError(bytes32 hash, address walletAddress, bytes signature, bytes errorData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.OrderStatusError(bytes32,enum LibOrder.OrderStatus)"}),Object(n.b)("code",{class:"function-signature"},"OrderStatusError(bytes32 orderHash, enum LibOrder.OrderStatus orderStatus) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.ExchangeInvalidContextError(enum LibExchangeRichErrors.ExchangeContextErrorCodes,bytes32,address)"}),Object(n.b)("code",{class:"function-signature"},"ExchangeInvalidContextError(enum LibExchangeRichErrors.ExchangeContextErrorCodes errorCode, bytes32 orderHash, address contextAddress) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.FillError(enum LibExchangeRichErrors.FillErrorCodes,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"FillError(enum LibExchangeRichErrors.FillErrorCodes errorCode, bytes32 orderHash) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.OrderEpochError(address,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"OrderEpochError(address makerAddress, address orderSenderAddress, uint256 currentEpoch) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.AssetProxyExistsError(bytes4,address)"}),Object(n.b)("code",{class:"function-signature"},"AssetProxyExistsError(bytes4 assetProxyId, address assetProxyAddress) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.AssetProxyDispatchError(enum LibExchangeRichErrors.AssetProxyDispatchErrorCodes,bytes32,bytes)"}),Object(n.b)("code",{class:"function-signature"},"AssetProxyDispatchError(enum LibExchangeRichErrors.AssetProxyDispatchErrorCodes errorCode, bytes32 orderHash, bytes assetData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.AssetProxyTransferError(bytes32,bytes,bytes)"}),Object(n.b)("code",{class:"function-signature"},"AssetProxyTransferError(bytes32 orderHash, bytes assetData, bytes errorData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.NegativeSpreadError(bytes32,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"NegativeSpreadError(bytes32 leftOrderHash, bytes32 rightOrderHash) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.TransactionError(enum LibExchangeRichErrors.TransactionErrorCodes,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"TransactionError(enum LibExchangeRichErrors.TransactionErrorCodes errorCode, bytes32 transactionHash) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.TransactionExecutionError(bytes32,bytes)"}),Object(n.b)("code",{class:"function-signature"},"TransactionExecutionError(bytes32 transactionHash, bytes errorData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.TransactionGasPriceError(bytes32,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"TransactionGasPriceError(bytes32 transactionHash, uint256 actualGasPrice, uint256 requiredGasPrice) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.TransactionInvalidContextError(bytes32,address)"}),Object(n.b)("code",{class:"function-signature"},"TransactionInvalidContextError(bytes32 transactionHash, address currentContextAddress) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.IncompleteFillError(enum LibExchangeRichErrors.IncompleteFillErrorCode,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"IncompleteFillError(enum LibExchangeRichErrors.IncompleteFillErrorCode errorCode, uint256 expectedAssetFillAmount, uint256 actualAssetFillAmount) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.PayProtocolFeeError(bytes32,uint256,address,address,bytes)"}),Object(n.b)("code",{class:"function-signature"},"PayProtocolFeeError(bytes32 orderHash, uint256 protocolFee, address makerAddress, address takerAddress, bytes errorData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"libfillresults"},Object(n.b)("inlineCode",{parentName:"h3"},"LibFillResults")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibFillResults.calculateFillResults(struct LibOrder.Order,uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"calculateFillResults(struct LibOrder.Order order, uint256 takerAssetFilledAmount, uint256 protocolFeeMultiplier, uint256 gasPrice)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibFillResults.calculateMatchedFillResults(struct LibOrder.Order,struct LibOrder.Order,uint256,uint256,uint256,uint256,bool)"},Object(n.b)("code",{class:"function-signature"},"calculateMatchedFillResults(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, uint256 leftOrderTakerAssetFilledAmount, uint256 rightOrderTakerAssetFilledAmount, uint256 protocolFeeMultiplier, uint256 gasPrice, bool shouldMaximallyFillOrders)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibFillResults.addFillResults(struct LibFillResults.FillResults,struct LibFillResults.FillResults)"},Object(n.b)("code",{class:"function-signature"},"addFillResults(struct LibFillResults.FillResults fillResults1, struct LibFillResults.FillResults fillResults2)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibFillResults.calculateFillResults(struct LibOrder.Order,uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"calculateFillResults(struct LibOrder.Order order, uint256 takerAssetFilledAmount, uint256 protocolFeeMultiplier, uint256 gasPrice) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates amounts filled and fees paid by maker and taker.\n@param order to be filled.\n@param takerAssetFilledAmount Amount of takerAsset that will be filled.\n@param protocolFeeMultiplier The current protocol fee of the exchange contract.\n@param gasPrice The gasprice of the transaction. This is provided so that the function call can continue\nto be pure rather than view.\n@return fillResults Amounts filled and fees paid by maker and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibFillResults.calculateMatchedFillResults(struct LibOrder.Order,struct LibOrder.Order,uint256,uint256,uint256,uint256,bool)"}),Object(n.b)("code",{class:"function-signature"},"calculateMatchedFillResults(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, uint256 leftOrderTakerAssetFilledAmount, uint256 rightOrderTakerAssetFilledAmount, uint256 protocolFeeMultiplier, uint256 gasPrice, bool shouldMaximallyFillOrders) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.MatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates fill amounts for the matched orders.\nEach order is filled at their respective price point. However, the calculations are\ncarried out as though the orders are both being filled at the right order","'","s price point.\nThe profit made by the leftOrder order goes to the taker (who matched the two orders).\n@param leftOrder First order to match.\n@param rightOrder Second order to match.\n@param leftOrderTakerAssetFilledAmount Amount of left order already filled.\n@param rightOrderTakerAssetFilledAmount Amount of right order already filled.\n@param protocolFeeMultiplier The current protocol fee of the exchange contract.\n@param gasPrice The gasprice of the transaction. This is provided so that the function call can continue\nto be pure rather than view.\n@param shouldMaximallyFillOrders A value that indicates whether or not this calculation should use\nthe maximal fill order matching strategy.\n@param matchedFillResults Amounts to fill and fees to pay by maker and taker of matched orders."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibFillResults.addFillResults(struct LibFillResults.FillResults,struct LibFillResults.FillResults)"}),Object(n.b)("code",{class:"function-signature"},"addFillResults(struct LibFillResults.FillResults fillResults1, struct LibFillResults.FillResults fillResults2) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Adds properties of both FillResults instances.\n@param fillResults1 The first FillResults.\n@param fillResults2 The second FillResults.\n@return The sum of both fill results."),Object(n.b)("h3",{id:"libmath"},Object(n.b)("inlineCode",{parentName:"h3"},"LibMath")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMath.safeGetPartialAmountFloor(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"safeGetPartialAmountFloor(uint256 numerator, uint256 denominator, uint256 target)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMath.safeGetPartialAmountCeil(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"safeGetPartialAmountCeil(uint256 numerator, uint256 denominator, uint256 target)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMath.getPartialAmountFloor(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"getPartialAmountFloor(uint256 numerator, uint256 denominator, uint256 target)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMath.getPartialAmountCeil(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"getPartialAmountCeil(uint256 numerator, uint256 denominator, uint256 target)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMath.isRoundingErrorFloor(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"isRoundingErrorFloor(uint256 numerator, uint256 denominator, uint256 target)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMath.isRoundingErrorCeil(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"isRoundingErrorCeil(uint256 numerator, uint256 denominator, uint256 target)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMath.safeGetPartialAmountFloor(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"safeGetPartialAmountFloor(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates partial value given a numerator and denominator rounded down.\nReverts if rounding error is ",">","= 0.1%\n@param numerator Numerator.\n@param denominator Denominator.\n@param target Value to calculate partial of.\n@return Partial value of target rounded down."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMath.safeGetPartialAmountCeil(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"safeGetPartialAmountCeil(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates partial value given a numerator and denominator rounded down.\nReverts if rounding error is ",">","= 0.1%\n@param numerator Numerator.\n@param denominator Denominator.\n@param target Value to calculate partial of.\n@return Partial value of target rounded up."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMath.getPartialAmountFloor(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"getPartialAmountFloor(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates partial value given a numerator and denominator rounded down.\n@param numerator Numerator.\n@param denominator Denominator.\n@param target Value to calculate partial of.\n@return Partial value of target rounded down."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMath.getPartialAmountCeil(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"getPartialAmountCeil(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates partial value given a numerator and denominator rounded down.\n@param numerator Numerator.\n@param denominator Denominator.\n@param target Value to calculate partial of.\n@return Partial value of target rounded up."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMath.isRoundingErrorFloor(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"isRoundingErrorFloor(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Checks if rounding error ",">","= 0.1% when rounding down.\n@param numerator Numerator.\n@param denominator Denominator.\n@param target Value to multiply with numerator/denominator.\n@return Rounding error is present."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMath.isRoundingErrorCeil(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"isRoundingErrorCeil(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Checks if rounding error ",">","= 0.1% when rounding up.\n@param numerator Numerator.\n@param denominator Denominator.\n@param target Value to multiply with numerator/denominator.\n@return Rounding error is present."),Object(n.b)("h3",{id:"libmathricherrors"},Object(n.b)("inlineCode",{parentName:"h3"},"LibMathRichErrors")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMathRichErrors.DivisionByZeroError()"},Object(n.b)("code",{class:"function-signature"},"DivisionByZeroError()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMathRichErrors.RoundingError(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"RoundingError(uint256 numerator, uint256 denominator, uint256 target)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMathRichErrors.DivisionByZeroError()"}),Object(n.b)("code",{class:"function-signature"},"DivisionByZeroError() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMathRichErrors.RoundingError(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"RoundingError(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"liborder"},Object(n.b)("inlineCode",{parentName:"h3"},"LibOrder")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibOrder.getTypedDataHash(struct LibOrder.Order,bytes32)"},Object(n.b)("code",{class:"function-signature"},"getTypedDataHash(struct LibOrder.Order order, bytes32 eip712ExchangeDomainHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibOrder.getStructHash(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"getStructHash(struct LibOrder.Order order)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibOrder.getTypedDataHash(struct LibOrder.Order,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"getTypedDataHash(struct LibOrder.Order order, bytes32 eip712ExchangeDomainHash) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates the EIP712 typed data hash of an order with a given domain separator.\n@param order The order structure.\n@return EIP712 typed data hash of the order."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibOrder.getStructHash(struct LibOrder.Order)"}),Object(n.b)("code",{class:"function-signature"},"getStructHash(struct LibOrder.Order order) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates EIP712 hash of the order struct.\n@param order The order structure.\n@return EIP712 hash of the order struct."),Object(n.b)("h3",{id:"libsafemath"},Object(n.b)("inlineCode",{parentName:"h3"},"LibSafeMath")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMath.safeMul(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"safeMul(uint256 a, uint256 b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMath.safeDiv(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"safeDiv(uint256 a, uint256 b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMath.safeSub(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"safeSub(uint256 a, uint256 b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMath.safeAdd(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"safeAdd(uint256 a, uint256 b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMath.max256(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"max256(uint256 a, uint256 b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMath.min256(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"min256(uint256 a, uint256 b)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMath.safeMul(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"safeMul(uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMath.safeDiv(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"safeDiv(uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMath.safeSub(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"safeSub(uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMath.safeAdd(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"safeAdd(uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMath.max256(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"max256(uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMath.min256(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"min256(uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"libsafemathricherrors"},Object(n.b)("inlineCode",{parentName:"h3"},"LibSafeMathRichErrors")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMathRichErrors.Uint256BinOpError(enum LibSafeMathRichErrors.BinOpErrorCodes,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"Uint256BinOpError(enum LibSafeMathRichErrors.BinOpErrorCodes errorCode, uint256 a, uint256 b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMathRichErrors.Uint256DowncastError(enum LibSafeMathRichErrors.DowncastErrorCodes,uint256)"},Object(n.b)("code",{class:"function-signature"},"Uint256DowncastError(enum LibSafeMathRichErrors.DowncastErrorCodes errorCode, uint256 a)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMathRichErrors.Uint256BinOpError(enum LibSafeMathRichErrors.BinOpErrorCodes,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"Uint256BinOpError(enum LibSafeMathRichErrors.BinOpErrorCodes errorCode, uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMathRichErrors.Uint256DowncastError(enum LibSafeMathRichErrors.DowncastErrorCodes,uint256)"}),Object(n.b)("code",{class:"function-signature"},"Uint256DowncastError(enum LibSafeMathRichErrors.DowncastErrorCodes errorCode, uint256 a) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"libzeroextransaction"},Object(n.b)("inlineCode",{parentName:"h3"},"LibZeroExTransaction")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibZeroExTransaction.getTypedDataHash(struct LibZeroExTransaction.ZeroExTransaction,bytes32)"},Object(n.b)("code",{class:"function-signature"},"getTypedDataHash(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 eip712ExchangeDomainHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibZeroExTransaction.getStructHash(struct LibZeroExTransaction.ZeroExTransaction)"},Object(n.b)("code",{class:"function-signature"},"getStructHash(struct LibZeroExTransaction.ZeroExTransaction transaction)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibZeroExTransaction.getTypedDataHash(struct LibZeroExTransaction.ZeroExTransaction,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"getTypedDataHash(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 eip712ExchangeDomainHash) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates the EIP712 typed data hash of a transaction with a given domain separator.\n@param transaction 0x transaction structure.\n@return EIP712 typed data hash of the transaction."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibZeroExTransaction.getStructHash(struct LibZeroExTransaction.ZeroExTransaction)"}),Object(n.b)("code",{class:"function-signature"},"getStructHash(struct LibZeroExTransaction.ZeroExTransaction transaction) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates EIP712 hash of the 0x transaction struct.\n@param transaction 0x transaction structure.\n@return EIP712 hash of the transaction struct."),Object(n.b)("h3",{id:"ordertransfersimulationutils"},Object(n.b)("inlineCode",{parentName:"h3"},"OrderTransferSimulationUtils")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#OrderTransferSimulationUtils.constructor(address)"},Object(n.b)("code",{class:"function-signature"},"constructor(address _exchange)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#OrderTransferSimulationUtils.getSimulatedOrderMakerTransferResults(struct LibOrder.Order,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"getSimulatedOrderMakerTransferResults(struct LibOrder.Order order, address takerAddress, uint256 takerAssetFillAmount)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#OrderTransferSimulationUtils.getSimulatedOrderTransferResults(struct LibOrder.Order,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"getSimulatedOrderTransferResults(struct LibOrder.Order order, address takerAddress, uint256 takerAssetFillAmount)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#OrderTransferSimulationUtils.getSimulatedOrdersTransferResults(struct LibOrder.Order[],address[],uint256[])"},Object(n.b)("code",{class:"function-signature"},"getSimulatedOrdersTransferResults(struct LibOrder.Order[] orders, address[] takerAddresses, uint256[] takerAssetFillAmounts)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#OrderTransferSimulationUtils._simulateTransferFromCalls(bytes[],address[],address[],uint256[])"},Object(n.b)("code",{class:"function-signature"},"_simulateTransferFromCalls(bytes[] assetData, address[] fromAddresses, address[] toAddresses, uint256[] amounts)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeSignatureError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeSignatureError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeEIP1271SignatureError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeEIP1271SignatureError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeSignatureValidatorNotApprovedError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeSignatureValidatorNotApprovedError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeSignatureWalletError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeSignatureWalletError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeOrderStatusError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeOrderStatusError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeExchangeInvalidContextError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeExchangeInvalidContextError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeFillError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeFillError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeOrderEpochError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeOrderEpochError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeAssetProxyExistsError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeAssetProxyExistsError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeAssetProxyDispatchError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeAssetProxyDispatchError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeAssetProxyTransferError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeAssetProxyTransferError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeNegativeSpreadError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeNegativeSpreadError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeTransactionError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeTransactionError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeTransactionExecutionError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeTransactionExecutionError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeIncompleteFillError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeIncompleteFillError(bytes encoded)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"OrderTransferSimulationUtils.constructor(address)"}),Object(n.b)("code",{class:"function-signature"},"constructor(address _exchange)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"OrderTransferSimulationUtils.getSimulatedOrderMakerTransferResults(struct LibOrder.Order,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"getSimulatedOrderMakerTransferResults(struct LibOrder.Order order, address takerAddress, uint256 takerAssetFillAmount) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"enum OrderTransferSimulationUtils.OrderTransferResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Simulates the maker transfers within an order and returns the index of the first failed transfer.\n@param order The order to simulate transfers for.\n@param takerAddress The address of the taker that will fill the order.\n@param takerAssetFillAmount The amount of takerAsset that the taker wished to fill.\n@return The index of the first failed transfer (or 4 if all transfers are successful)."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"OrderTransferSimulationUtils.getSimulatedOrderTransferResults(struct LibOrder.Order,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"getSimulatedOrderTransferResults(struct LibOrder.Order order, address takerAddress, uint256 takerAssetFillAmount) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"enum OrderTransferSimulationUtils.OrderTransferResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Simulates all of the transfers within an order and returns the index of the first failed transfer.\n@param order The order to simulate transfers for.\n@param takerAddress The address of the taker that will fill the order.\n@param takerAssetFillAmount The amount of takerAsset that the taker wished to fill.\n@return The index of the first failed transfer (or 4 if all transfers are successful)."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"OrderTransferSimulationUtils.getSimulatedOrdersTransferResults(struct LibOrder.Order[],address[],uint256[])"}),Object(n.b)("code",{class:"function-signature"},"getSimulatedOrdersTransferResults(struct LibOrder.Order[] orders, address[] takerAddresses, uint256[] takerAssetFillAmounts) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"enum OrderTransferSimulationUtils.OrderTransferResults[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Simulates all of the transfers for each given order and returns the indices of each first failed transfer.\n@param orders Array of orders to individually simulate transfers for.\n@param takerAddresses Array of addresses of takers that will fill each order.\n@param takerAssetFillAmounts Array of amounts of takerAsset that will be filled for each order.\n@return The indices of the first failed transfer (or 4 if all transfers are successful) for each order."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"OrderTransferSimulationUtils._simulateTransferFromCalls(bytes[],address[],address[],uint256[])"}),Object(n.b)("code",{class:"function-signature"},"_simulateTransferFromCalls(bytes[] assetData, address[] fromAddresses, address[] toAddresses, uint256[] amounts) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"enum OrderTransferSimulationUtils.OrderTransferResults")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Makes the simulation call with information about the transfers and processes\nthe returndata.\n@param assetData The assetdata to use to make transfers.\n@param fromAddresses The addresses to transfer funds.\n@param toAddresses The addresses that will receive funds\n@param amounts The amounts involved in the transfer."),Object(n.b)("h3",{id:"ordervalidationutils"},Object(n.b)("inlineCode",{parentName:"h3"},"OrderValidationUtils")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#OrderValidationUtils.constructor(address,address)"},Object(n.b)("code",{class:"function-signature"},"constructor(address _exchange, address _chaiBridge)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#OrderValidationUtils.getOrderRelevantState(struct LibOrder.Order,bytes)"},Object(n.b)("code",{class:"function-signature"},"getOrderRelevantState(struct LibOrder.Order order, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#OrderValidationUtils.getOrderRelevantStates(struct LibOrder.Order[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"getOrderRelevantStates(struct LibOrder.Order[] orders, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#OrderValidationUtils.getTransferableAssetAmount(address,bytes)"},Object(n.b)("code",{class:"function-signature"},"getTransferableAssetAmount(address ownerAddress, bytes assetData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#OrderValidationUtils._isAssetDataValid(bytes)"},Object(n.b)("code",{class:"function-signature"},"_isAssetDataValid(bytes assetData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#OrderValidationUtils._isAssetDataDuplicated(bytes[],uint256)"},Object(n.b)("code",{class:"function-signature"},"_isAssetDataDuplicated(bytes[] nestedAssetData, uint256 startIdx)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#OrderTransferSimulationUtils.constructor(address)"},Object(n.b)("code",{class:"function-signature"},"constructor(address _exchange)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#OrderTransferSimulationUtils.getSimulatedOrderMakerTransferResults(struct LibOrder.Order,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"getSimulatedOrderMakerTransferResults(struct LibOrder.Order order, address takerAddress, uint256 takerAssetFillAmount)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#OrderTransferSimulationUtils.getSimulatedOrderTransferResults(struct LibOrder.Order,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"getSimulatedOrderTransferResults(struct LibOrder.Order order, address takerAddress, uint256 takerAssetFillAmount)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#OrderTransferSimulationUtils.getSimulatedOrdersTransferResults(struct LibOrder.Order[],address[],uint256[])"},Object(n.b)("code",{class:"function-signature"},"getSimulatedOrdersTransferResults(struct LibOrder.Order[] orders, address[] takerAddresses, uint256[] takerAssetFillAmounts)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#OrderTransferSimulationUtils._simulateTransferFromCalls(bytes[],address[],address[],uint256[])"},Object(n.b)("code",{class:"function-signature"},"_simulateTransferFromCalls(bytes[] assetData, address[] fromAddresses, address[] toAddresses, uint256[] amounts)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeSignatureError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeSignatureError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeEIP1271SignatureError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeEIP1271SignatureError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeSignatureValidatorNotApprovedError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeSignatureValidatorNotApprovedError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeSignatureWalletError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeSignatureWalletError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeOrderStatusError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeOrderStatusError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeExchangeInvalidContextError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeExchangeInvalidContextError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeFillError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeFillError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeOrderEpochError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeOrderEpochError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeAssetProxyExistsError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeAssetProxyExistsError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeAssetProxyDispatchError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeAssetProxyDispatchError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeAssetProxyTransferError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeAssetProxyTransferError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeNegativeSpreadError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeNegativeSpreadError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeTransactionError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeTransactionError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeTransactionExecutionError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeTransactionExecutionError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibExchangeRichErrorDecoder.decodeIncompleteFillError(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeIncompleteFillError(bytes encoded)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.getBalance(address,bytes)"},Object(n.b)("code",{class:"function-signature"},"getBalance(address ownerAddress, bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.getBatchBalances(address,bytes[])"},Object(n.b)("code",{class:"function-signature"},"getBatchBalances(address ownerAddress, bytes[] assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.getAssetProxyAllowance(address,bytes)"},Object(n.b)("code",{class:"function-signature"},"getAssetProxyAllowance(address ownerAddress, bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.getBatchAssetProxyAllowances(address,bytes[])"},Object(n.b)("code",{class:"function-signature"},"getBatchAssetProxyAllowances(address ownerAddress, bytes[] assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.getBalanceAndAssetProxyAllowance(address,bytes)"},Object(n.b)("code",{class:"function-signature"},"getBalanceAndAssetProxyAllowance(address ownerAddress, bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.getBatchBalancesAndAssetProxyAllowances(address,bytes[])"},Object(n.b)("code",{class:"function-signature"},"getBatchBalancesAndAssetProxyAllowances(address ownerAddress, bytes[] assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.decodeAssetProxyId(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeAssetProxyId(bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.encodeERC20AssetData(address)"},Object(n.b)("code",{class:"function-signature"},"encodeERC20AssetData(address tokenAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.decodeERC20AssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeERC20AssetData(bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.encodeERC721AssetData(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"encodeERC721AssetData(address tokenAddress, uint256 tokenId)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.decodeERC721AssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeERC721AssetData(bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.encodeERC1155AssetData(address,uint256[],uint256[],bytes)"},Object(n.b)("code",{class:"function-signature"},"encodeERC1155AssetData(address tokenAddress, uint256[] tokenIds, uint256[] tokenValues, bytes callbackData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.decodeERC1155AssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeERC1155AssetData(bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.encodeMultiAssetData(uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"encodeMultiAssetData(uint256[] amounts, bytes[] nestedAssetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.decodeMultiAssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeMultiAssetData(bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.encodeStaticCallAssetData(address,bytes,bytes32)"},Object(n.b)("code",{class:"function-signature"},"encodeStaticCallAssetData(address staticCallTargetAddress, bytes staticCallData, bytes32 expectedReturnDataHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.decodeStaticCallAssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeStaticCallAssetData(bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.decodeERC20BridgeAssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"decodeERC20BridgeAssetData(bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData.revertIfInvalidAssetData(bytes)"},Object(n.b)("code",{class:"function-signature"},"revertIfInvalidAssetData(bytes assetData)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData._erc20BalanceOf(address,address)"},Object(n.b)("code",{class:"function-signature"},"_erc20BalanceOf(address tokenAddress, address ownerAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibAssetData._convertChaiToDaiAmount(uint256)"},Object(n.b)("code",{class:"function-signature"},"_convertChaiToDaiAmount(uint256 chaiAmount)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getKyberNetworkProxyAddress()"},Object(n.b)("code",{class:"function-signature"},"_getKyberNetworkProxyAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getWethAddress()"},Object(n.b)("code",{class:"function-signature"},"_getWethAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getUniswapExchangeFactoryAddress()"},Object(n.b)("code",{class:"function-signature"},"_getUniswapExchangeFactoryAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getEth2DaiAddress()"},Object(n.b)("code",{class:"function-signature"},"_getEth2DaiAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getERC20BridgeProxyAddress()"},Object(n.b)("code",{class:"function-signature"},"_getERC20BridgeProxyAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getDaiAddress()"},Object(n.b)("code",{class:"function-signature"},"_getDaiAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getChaiAddress()"},Object(n.b)("code",{class:"function-signature"},"_getChaiAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getDevUtilsAddress()"},Object(n.b)("code",{class:"function-signature"},"_getDevUtilsAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#DeploymentConstants._getDydxAddress()"},Object(n.b)("code",{class:"function-signature"},"_getDydxAddress()"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"OrderValidationUtils.constructor(address,address)"}),Object(n.b)("code",{class:"function-signature"},"constructor(address _exchange, address _chaiBridge)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"OrderValidationUtils.getOrderRelevantState(struct LibOrder.Order,bytes)"}),Object(n.b)("code",{class:"function-signature"},"getOrderRelevantState(struct LibOrder.Order order, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibOrder.OrderInfo,uint256,bool")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Fetches all order-relevant information needed to validate if the supplied order is fillable.\n@param order The order structure.\n@param signature Signature provided by maker that proves the order","'","s authenticity.\n",Object(n.b)("inlineCode",{parentName:"p"},"0x01")," can always be provided if the signature does not need to be validated.\n@return The orderInfo (hash, status, and ",Object(n.b)("inlineCode",{parentName:"p"},"takerAssetAmount")," already filled for the given order),\nfillableTakerAssetAmount (amount of the order","'","s ",Object(n.b)("inlineCode",{parentName:"p"},"takerAssetAmount")," that is fillable given all on-chain state),\nand isValidSignature (validity of the provided signature).\nNOTE: If the ",Object(n.b)("inlineCode",{parentName:"p"},"takerAssetData")," encodes data for multiple assets, ",Object(n.b)("inlineCode",{parentName:"p"},"fillableTakerAssetAmount")," will represent a ",'"',"scaled",'"',"\namount, meaning it must be multiplied by all the individual asset amounts within the ",Object(n.b)("inlineCode",{parentName:"p"},"takerAssetData")," to get the final\namount of each asset that can be filled."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"OrderValidationUtils.getOrderRelevantStates(struct LibOrder.Order[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"getOrderRelevantStates(struct LibOrder.Order[] orders, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibOrder.OrderInfo[],uint256[],bool[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Fetches all order-relevant information needed to validate if the supplied orders are fillable.\n@param orders Array of order structures.\n@param signatures Array of signatures provided by makers that prove the authenticity of the orders.\n",Object(n.b)("inlineCode",{parentName:"p"},"0x01")," can always be provided if a signature does not need to be validated.\n@return The ordersInfo (array of the hash, status, and ",Object(n.b)("inlineCode",{parentName:"p"},"takerAssetAmount")," already filled for each order),\nfillableTakerAssetAmounts (array of amounts for each order","'","s ",Object(n.b)("inlineCode",{parentName:"p"},"takerAssetAmount")," that is fillable given all on-chain state),\nand isValidSignature (array containing the validity of each provided signature).\nNOTE: If the ",Object(n.b)("inlineCode",{parentName:"p"},"takerAssetData")," encodes data for multiple assets, each element of ",Object(n.b)("inlineCode",{parentName:"p"},"fillableTakerAssetAmounts"),"\nwill represent a ",'"',"scaled",'"'," amount, meaning it must be multiplied by all the individual asset amounts within\nthe ",Object(n.b)("inlineCode",{parentName:"p"},"takerAssetData")," to get the final amount of each asset that can be filled."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"OrderValidationUtils.getTransferableAssetAmount(address,bytes)"}),Object(n.b)("code",{class:"function-signature"},"getTransferableAssetAmount(address ownerAddress, bytes assetData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Gets the amount of an asset transferable by the owner.\n@param ownerAddress Address of the owner of the asset.\n@param assetData Description of tokens, per the AssetProxy contract specification.\n@return The amount of the asset tranferable by the owner.\nNOTE: If the ",Object(n.b)("inlineCode",{parentName:"p"},"assetData")," encodes data for multiple assets, the ",Object(n.b)("inlineCode",{parentName:"p"},"transferableAssetAmount"),"\nwill represent the amount of times the entire ",Object(n.b)("inlineCode",{parentName:"p"},"assetData")," can be transferred. To calculate\nthe total individual transferable amounts, this scaled ",Object(n.b)("inlineCode",{parentName:"p"},"transferableAmount")," must be multiplied by\nthe individual asset amounts located within the ",Object(n.b)("inlineCode",{parentName:"p"},"assetData"),"."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"OrderValidationUtils._isAssetDataValid(bytes)"}),Object(n.b)("code",{class:"function-signature"},"_isAssetDataValid(bytes assetData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"This function handles the edge cases around taker validation. This function\ncurrently attempts to find duplicate ERC721 token","'","s in the taker\nmultiAssetData.\n@param assetData The asset data that should be validated.\n@return Whether or not the order should be considered valid."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"OrderValidationUtils._isAssetDataDuplicated(bytes[],uint256)"}),Object(n.b)("code",{class:"function-signature"},"_isAssetDataDuplicated(bytes[] nestedAssetData, uint256 startIdx) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"potlike"},Object(n.b)("inlineCode",{parentName:"h3"},"PotLike")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#PotLike.chi()"},Object(n.b)("code",{class:"function-signature"},"chi()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#PotLike.rho()"},Object(n.b)("code",{class:"function-signature"},"rho()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#PotLike.drip()"},Object(n.b)("code",{class:"function-signature"},"drip()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#PotLike.join(uint256)"},Object(n.b)("code",{class:"function-signature"},"join(uint256)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#PotLike.exit(uint256)"},Object(n.b)("code",{class:"function-signature"},"exit(uint256)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"PotLike.chi()"}),Object(n.b)("code",{class:"function-signature"},"chi() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"PotLike.rho()"}),Object(n.b)("code",{class:"function-signature"},"rho() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"PotLike.drip()"}),Object(n.b)("code",{class:"function-signature"},"drip() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"PotLike.join(uint256)"}),Object(n.b)("code",{class:"function-signature"},"join(uint256)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"PotLike.exit(uint256)"}),Object(n.b)("code",{class:"function-signature"},"exit(uint256)"),Object(n.b)("span",{class:"function-visibility"},"external"))))}d.isMDXComponent=!0},530:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return h}));var s=r(0),a=r.n(s);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,s)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function b(e,t){if(null==e)return{};var r,s,a=function(e,t){if(null==e)return{};var r,s,a={},n=Object.keys(e);for(s=0;s<n.length;s++)r=n[s],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(s=0;s<n.length;s++)r=n[s],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=a.a.createContext({}),d=function(e){var t=a.a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=d(e.components);return a.a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},O=a.a.forwardRef((function(e,t){var r=e.components,s=e.mdxType,n=e.originalType,c=e.parentName,o=b(e,["components","mdxType","originalType","parentName"]),l=d(r),O=s,h=l["".concat(c,".").concat(O)]||l[O]||u[O]||n;return r?a.a.createElement(h,i(i({ref:t},o),{},{components:r})):a.a.createElement(h,i({ref:t},o))}));function h(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var n=r.length,c=new Array(n);c[0]=O;var i={};for(var b in t)hasOwnProperty.call(t,b)&&(i[b]=t[b]);i.originalType=e,i.mdxType="string"==typeof e?e:s,c[1]=i;for(var o=2;o<n;o++)c[o]=r[o];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}O.displayName="MDXCreateElement"}}]);