parameters:
  - name: name
    displayName: 'Job name'
  - name: environment
    displayName: 'The configuration used for this deploy (e.g. "dev")'
  - name: deployBucketName
    displayName: 'Environment domain used for this deploy (e.g. staging.augur.net)'
  - name: triggerBranch
    displayName: 'The branch name that will trigger this build and deploy (e.g. "dev")'
  - name: cloudfrontDistributionId
    displayName: 'The cloudfront distribution id in order to clear the cache on deploy (e.g. E2K6239JF3WYG6)'
  - name: reportingOnly
    displayName: 'Set to true if this is a reporting only build'
    type: string
    default: 'false'
  - name: paraDeployTokenName
    displayName: 'The name of the cash contract to use for para deploy. Leave blank for none.'
    type: string
    default: ''

jobs:
  - job: ${{ parameters.name }}
    displayName: Deploy ${{ parameters.environment }} build to ${{ parameters.deployBucketName }}
    condition: |
      and
      (
          succeeded(),
          eq(variables['Build.SourceBranch'], '${{ parameters.triggerBranch }}')
      )

    pool:
      vmImage: $(VM_IMAGE)
    steps:
      - template: node-setup.yml
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.6'
      - bash: |
          set -euo pipefail
          yarn build
        displayName: yarn build
      - bash: |
          set -euo pipefail
          echo "Building for ${AUGUR_ENV} w/ REPORTING_ONLY=${REPORTING_ONLY}"
          ( cd packages/orbit-web && ./node_modules/.bin/webpack)
          ( cd packages/augur-ui && ./node_modules/.bin/webpack)
        displayName: ui build
        env:
          NODE_OPTIONS: "--max_old_space_size=6144"
          AUGUR_ENV: ${{ parameters.environment }}
          ETHEREUM_NETWORK: ${{ parameters.environment }}
          REPORTING_ONLY: ${{ parameters.reportingOnly }}
          PARA_DEPLOY_TOKEN_NAME: ${{ parameters.paraDeployTokenName }}
      - template: deploy-to-s3.yml
        parameters:
          deployBucketName: ${{ parameters.deployBucketName }}
          cloudfrontDistributionId: ${{ parameters.cloudfrontDistributionId }}
