(window.webpackJsonp=window.webpackJsonp||[]).push([[289],{345:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return b})),r.d(t,"default",(function(){return l}));var s=r(2),a=r(6),n=(r(0),r(517)),i={title:"Src"},c={unversionedId:"api/contracts/0x/exchange/contracts/src",id:"api/contracts/0x/exchange/contracts/src",isDocsHomePage:!1,title:"Src",description:"Contracts",source:"@site/../docs/api/contracts/0x/exchange/contracts/src.md",permalink:"/docs/api/contracts/0x/exchange/contracts/src",editUrl:"https://github.com/AugurProject/augur/edit/documentation/augur.sh/../docs/api/contracts/0x/exchange/contracts/src.md"},b=[{value:"Contracts",id:"contracts",children:[{value:"<code>Exchange</code>",id:"exchange",children:[]},{value:"<code>IAssetProxy</code>",id:"iassetproxy",children:[]},{value:"<code>IAssetProxyDispatcher</code>",id:"iassetproxydispatcher",children:[]},{value:"<code>IEIP1271Data</code>",id:"ieip1271data",children:[]},{value:"<code>IEIP1271Wallet</code>",id:"ieip1271wallet",children:[]},{value:"<code>IERC20Token</code>",id:"ierc20token",children:[]},{value:"<code>IEtherToken</code>",id:"iethertoken",children:[]},{value:"<code>IExchangeCore</code>",id:"iexchangecore",children:[]},{value:"<code>IMatchOrders</code>",id:"imatchorders",children:[]},{value:"<code>IOwnable</code>",id:"iownable",children:[]},{value:"<code>IProtocolFees</code>",id:"iprotocolfees",children:[]},{value:"<code>ISignatureValidator</code>",id:"isignaturevalidator",children:[]},{value:"<code>IStaking</code>",id:"istaking",children:[]},{value:"<code>IStructs</code>",id:"istructs",children:[]},{value:"<code>ITransactions</code>",id:"itransactions",children:[]},{value:"<code>IWallet</code>",id:"iwallet",children:[]},{value:"<code>IWrapperFunctions</code>",id:"iwrapperfunctions",children:[]},{value:"<code>IZrxVault</code>",id:"izrxvault",children:[]},{value:"<code>LibBytes</code>",id:"libbytes",children:[]},{value:"<code>LibEIP1271</code>",id:"libeip1271",children:[]},{value:"<code>LibEIP712</code>",id:"libeip712",children:[]},{value:"<code>LibEIP712ExchangeDomain</code>",id:"libeip712exchangedomain",children:[]},{value:"<code>LibExchangeRichErrors</code>",id:"libexchangericherrors",children:[]},{value:"<code>LibFillResults</code>",id:"libfillresults",children:[]},{value:"<code>LibMath</code>",id:"libmath",children:[]},{value:"<code>LibMathRichErrors</code>",id:"libmathricherrors",children:[]},{value:"<code>LibOrder</code>",id:"liborder",children:[]},{value:"<code>LibOwnableRichErrors</code>",id:"libownablericherrors",children:[]},{value:"<code>LibReentrancyGuardRichErrors</code>",id:"libreentrancyguardricherrors",children:[]},{value:"<code>LibRichErrors</code>",id:"libricherrors",children:[]},{value:"<code>LibSafeMath</code>",id:"libsafemath",children:[]},{value:"<code>LibSafeMathRichErrors</code>",id:"libsafemathricherrors",children:[]},{value:"<code>LibZeroExTransaction</code>",id:"libzeroextransaction",children:[]},{value:"<code>MixinAssetProxyDispatcher</code>",id:"mixinassetproxydispatcher",children:[]},{value:"<code>MixinExchangeCore</code>",id:"mixinexchangecore",children:[]},{value:"<code>MixinMatchOrders</code>",id:"mixinmatchorders",children:[]},{value:"<code>MixinProtocolFees</code>",id:"mixinprotocolfees",children:[]},{value:"<code>MixinSignatureValidator</code>",id:"mixinsignaturevalidator",children:[]},{value:"<code>MixinTransactions</code>",id:"mixintransactions",children:[]},{value:"<code>MixinTransferSimulator</code>",id:"mixintransfersimulator",children:[]},{value:"<code>MixinWrapperFunctions</code>",id:"mixinwrapperfunctions",children:[]},{value:"<code>Ownable</code>",id:"ownable",children:[]},{value:"<code>ReentrancyGuard</code>",id:"reentrancyguard",children:[]},{value:"<code>Refundable</code>",id:"refundable",children:[]}]}],o={rightToc:b};function l(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(n.b)("wrapper",Object(s.a)({},o,r,{components:t,mdxType:"MDXLayout"}),Object(n.b)("div",{class:"contracts"},Object(n.b)("h2",{id:"contracts"},"Contracts"),Object(n.b)("h3",{id:"exchange"},Object(n.b)("inlineCode",{parentName:"h3"},"Exchange")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#Exchange.constructor(uint256)"},Object(n.b)("code",{class:"function-signature"},"constructor(uint256 chainId)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#Exchange.isValidSignature(struct LibOrder.Order,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidSignature(struct LibOrder.Order order, bytes32 orderHash, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransferSimulator.simulateDispatchTransferFromCalls(bytes[],address[],address[],uint256[])"},Object(n.b)("code",{class:"function-signature"},"simulateDispatchTransferFromCalls(bytes[] assetData, address[] fromAddresses, address[] toAddresses, uint256[] amounts)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinWrapperFunctions.fillOrKillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"fillOrKillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinWrapperFunctions.batchFillOrders(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinWrapperFunctions.batchFillOrKillOrders(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrKillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinWrapperFunctions.batchFillOrdersNoThrow(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrdersNoThrow(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinWrapperFunctions.marketSellOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketSellOrdersNoThrow(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinWrapperFunctions.marketBuyOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersNoThrow(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinWrapperFunctions.marketSellOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketSellOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinWrapperFunctions.marketBuyOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinWrapperFunctions.batchCancelOrders(struct LibOrder.Order[])"},Object(n.b)("code",{class:"function-signature"},"batchCancelOrders(struct LibOrder.Order[] orders)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinWrapperFunctions._fillOrKillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"_fillOrKillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinWrapperFunctions._fillOrderNoThrow(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"_fillOrderNoThrow(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinMatchOrders.batchMatchOrders(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchMatchOrders(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinMatchOrders.batchMatchOrdersWithMaximalFill(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchMatchOrdersWithMaximalFill(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinMatchOrders.matchOrders(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"matchOrders(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinMatchOrders.matchOrdersWithMaximalFill(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"matchOrdersWithMaximalFill(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinMatchOrders._assertValidMatch(struct LibOrder.Order,struct LibOrder.Order,bytes32,bytes32)"},Object(n.b)("code",{class:"function-signature"},"_assertValidMatch(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes32 leftOrderHash, bytes32 rightOrderHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinMatchOrders._batchMatchOrders(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[],bool)"},Object(n.b)("code",{class:"function-signature"},"_batchMatchOrders(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures, bool shouldMaximallyFillOrders)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinMatchOrders._matchOrders(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes,bool)"},Object(n.b)("code",{class:"function-signature"},"_matchOrders(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature, bool shouldMaximallyFillOrders)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinMatchOrders._settleMatchedOrders(bytes32,bytes32,struct LibOrder.Order,struct LibOrder.Order,address,struct LibFillResults.MatchedFillResults)"},Object(n.b)("code",{class:"function-signature"},"_settleMatchedOrders(bytes32 leftOrderHash, bytes32 rightOrderHash, struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, address takerAddress, struct LibFillResults.MatchedFillResults matchedFillResults)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore.cancelOrdersUpTo(uint256)"},Object(n.b)("code",{class:"function-signature"},"cancelOrdersUpTo(uint256 targetOrderEpoch)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore.fillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"fillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore.cancelOrder(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"cancelOrder(struct LibOrder.Order order)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore.getOrderInfo(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"getOrderInfo(struct LibOrder.Order order)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._fillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"_fillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._cancelOrder(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"_cancelOrder(struct LibOrder.Order order)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._updateFilledState(struct LibOrder.Order,address,bytes32,uint256,struct LibFillResults.FillResults)"},Object(n.b)("code",{class:"function-signature"},"_updateFilledState(struct LibOrder.Order order, address takerAddress, bytes32 orderHash, uint256 orderTakerAssetFilledAmount, struct LibFillResults.FillResults fillResults)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._updateCancelledState(struct LibOrder.Order,bytes32)"},Object(n.b)("code",{class:"function-signature"},"_updateCancelledState(struct LibOrder.Order order, bytes32 orderHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._assertFillableOrder(struct LibOrder.Order,struct LibOrder.OrderInfo,address,bytes)"},Object(n.b)("code",{class:"function-signature"},"_assertFillableOrder(struct LibOrder.Order order, struct LibOrder.OrderInfo orderInfo, address takerAddress, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._assertValidCancel(struct LibOrder.Order,struct LibOrder.OrderInfo)"},Object(n.b)("code",{class:"function-signature"},"_assertValidCancel(struct LibOrder.Order order, struct LibOrder.OrderInfo orderInfo)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._settleOrder(bytes32,struct LibOrder.Order,address,struct LibFillResults.FillResults)"},Object(n.b)("code",{class:"function-signature"},"_settleOrder(bytes32 orderHash, struct LibOrder.Order order, address takerAddress, struct LibFillResults.FillResults fillResults)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._getOrderHashAndFilledAmount(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"_getOrderHashAndFilledAmount(struct LibOrder.Order order)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.preSign(bytes32)"},Object(n.b)("code",{class:"function-signature"},"preSign(bytes32 hash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.setSignatureValidatorApproval(address,bool)"},Object(n.b)("code",{class:"function-signature"},"setSignatureValidatorApproval(address validatorAddress, bool approval)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.isValidHashSignature(bytes32,address,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidHashSignature(bytes32 hash, address signerAddress, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.isValidOrderSignature(struct LibOrder.Order,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidOrderSignature(struct LibOrder.Order order, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator._isValidOrderWithHashSignature(struct LibOrder.Order,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidOrderWithHashSignature(struct LibOrder.Order order, bytes32 orderHash, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator._isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 transactionHash, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions.executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions.batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[] transactions, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions._executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"_executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions._assertExecutableTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes,bytes32)"},Object(n.b)("code",{class:"function-signature"},"_assertExecutableTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature, bytes32 transactionHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions._setCurrentContextAddressIfRequired(address,address)"},Object(n.b)("code",{class:"function-signature"},"_setCurrentContextAddressIfRequired(address signerAddress, address contextAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions._getCurrentContextAddress()"},Object(n.b)("code",{class:"function-signature"},"_getCurrentContextAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees.setProtocolFeeMultiplier(uint256)"},Object(n.b)("code",{class:"function-signature"},"setProtocolFeeMultiplier(uint256 updatedProtocolFeeMultiplier)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees.setProtocolFeeCollectorAddress(address)"},Object(n.b)("code",{class:"function-signature"},"setProtocolFeeCollectorAddress(address updatedProtocolFeeCollector)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees.detachProtocolFeeCollector()"},Object(n.b)("code",{class:"function-signature"},"detachProtocolFeeCollector()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees._setProtocolFeeCollectorAddress(address)"},Object(n.b)("code",{class:"function-signature"},"_setProtocolFeeCollectorAddress(address updatedProtocolFeeCollector)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees._paySingleProtocolFee(bytes32,uint256,address,address)"},Object(n.b)("code",{class:"function-signature"},"_paySingleProtocolFee(bytes32 orderHash, uint256 protocolFee, address makerAddress, address takerAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees._payTwoProtocolFees(bytes32,bytes32,uint256,address,address,address)"},Object(n.b)("code",{class:"function-signature"},"_payTwoProtocolFees(bytes32 orderHash1, bytes32 orderHash2, uint256 protocolFee, address makerAddress1, address makerAddress2, address takerAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees._payProtocolFeeToFeeCollector(bytes32,address,uint256,uint256,address,address)"},Object(n.b)("code",{class:"function-signature"},"_payProtocolFeeToFeeCollector(bytes32 orderHash, address feeCollector, uint256 exchangeBalance, uint256 protocolFee, address makerAddress, address takerAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinAssetProxyDispatcher.registerAssetProxy(address)"},Object(n.b)("code",{class:"function-signature"},"registerAssetProxy(address assetProxy)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinAssetProxyDispatcher.getAssetProxy(bytes4)"},Object(n.b)("code",{class:"function-signature"},"getAssetProxy(bytes4 assetProxyId)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinAssetProxyDispatcher._dispatchTransferFrom(bytes32,bytes,address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"_dispatchTransferFrom(bytes32 orderHash, bytes assetData, address from, address to, uint256 amount)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibEIP712ExchangeDomain.constructor(uint256,address)"},Object(n.b)("code",{class:"function-signature"},"constructor(uint256 chainId, address verifyingContractAddressIfExists)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._refundNonZeroBalanceIfEnabled()"},Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalanceIfEnabled()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._refundNonZeroBalance()"},Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalance()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._disableRefund()"},Object(n.b)("code",{class:"function-signature"},"_disableRefund()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._enableAndRefundNonZeroBalance()"},Object(n.b)("code",{class:"function-signature"},"_enableAndRefundNonZeroBalance()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._areRefundsDisabled()"},Object(n.b)("code",{class:"function-signature"},"_areRefundsDisabled()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ReentrancyGuard._lockMutexOrThrowIfAlreadyLocked()"},Object(n.b)("code",{class:"function-signature"},"_lockMutexOrThrowIfAlreadyLocked()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ReentrancyGuard._unlockMutex()"},Object(n.b)("code",{class:"function-signature"},"_unlockMutex()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable.constructor()"},Object(n.b)("code",{class:"function-signature"},"constructor()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable.transferOwnership(address)"},Object(n.b)("code",{class:"function-signature"},"transferOwnership(address newOwner)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable._assertSenderIsOwner()"},Object(n.b)("code",{class:"function-signature"},"_assertSenderIsOwner()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.protocolFeeMultiplier()"},Object(n.b)("code",{class:"function-signature"},"protocolFeeMultiplier()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.protocolFeeCollector()"},Object(n.b)("code",{class:"function-signature"},"protocolFeeCollector()")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ITransactions.TransactionExecution(bytes32)"},Object(n.b)("code",{class:"function-signature"},"TransactionExecution(bytes32 transactionHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.SignatureValidatorApproval(address,address,bool)"},Object(n.b)("code",{class:"function-signature"},"SignatureValidatorApproval(address signerAddress, address validatorAddress, bool isApproved)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IAssetProxyDispatcher.AssetProxyRegistered(bytes4,address)"},Object(n.b)("code",{class:"function-signature"},"AssetProxyRegistered(bytes4 id, address assetProxy)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IOwnable.OwnershipTransferred(address,address)"},Object(n.b)("code",{class:"function-signature"},"OwnershipTransferred(address previousOwner, address newOwner)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.ProtocolFeeMultiplier(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"ProtocolFeeMultiplier(uint256 oldProtocolFeeMultiplier, uint256 updatedProtocolFeeMultiplier)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.ProtocolFeeCollectorAddress(address,address)"},Object(n.b)("code",{class:"function-signature"},"ProtocolFeeCollectorAddress(address oldProtocolFeeCollector, address updatedProtocolFeeCollector)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.Fill(address,address,bytes,bytes,bytes,bytes,bytes32,address,address,uint256,uint256,uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"Fill(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, bytes makerFeeAssetData, bytes takerFeeAssetData, bytes32 orderHash, address takerAddress, address senderAddress, uint256 makerAssetFilledAmount, uint256 takerAssetFilledAmount, uint256 makerFeePaid, uint256 takerFeePaid, uint256 protocolFeePaid)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.Cancel(address,address,bytes,bytes,address,bytes32)"},Object(n.b)("code",{class:"function-signature"},"Cancel(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, address senderAddress, bytes32 orderHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.CancelUpTo(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"CancelUpTo(address makerAddress, address orderSenderAddress, uint256 orderEpoch)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"Exchange.constructor(uint256)"}),Object(n.b)("code",{class:"function-signature"},"constructor(uint256 chainId)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Mixins are instantiated in the order they are inherited\n@param chainId Chain ID of the network this contract is deployed on."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"Exchange.isValidSignature(struct LibOrder.Order,bytes32,bytes)"}),Object(n.b)("code",{class:"function-signature"},"isValidSignature(struct LibOrder.Order order, bytes32 orderHash, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("h3",{id:"iassetproxy"},Object(n.b)("inlineCode",{parentName:"h3"},"IAssetProxy")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IAssetProxy.transferFrom(bytes,address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"transferFrom(bytes assetData, address from, address to, uint256 amount)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IAssetProxy.getProxyId()"},Object(n.b)("code",{class:"function-signature"},"getProxyId()"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IAssetProxy.transferFrom(bytes,address,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"transferFrom(bytes assetData, address from, address to, uint256 amount)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Transfers assets. Either succeeds or throws.\n@param assetData Byte array encoded for the respective asset proxy.\n@param from Address to transfer asset from.\n@param to Address to transfer asset to.\n@param amount Amount of asset to transfer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IAssetProxy.getProxyId()"}),Object(n.b)("code",{class:"function-signature"},"getProxyId() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Gets the proxy id associated with the proxy address.\n@return Proxy id."),Object(n.b)("h3",{id:"iassetproxydispatcher"},Object(n.b)("inlineCode",{parentName:"h3"},"IAssetProxyDispatcher")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IAssetProxyDispatcher.registerAssetProxy(address)"},Object(n.b)("code",{class:"function-signature"},"registerAssetProxy(address assetProxy)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IAssetProxyDispatcher.getAssetProxy(bytes4)"},Object(n.b)("code",{class:"function-signature"},"getAssetProxy(bytes4 assetProxyId)")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IAssetProxyDispatcher.AssetProxyRegistered(bytes4,address)"},Object(n.b)("code",{class:"function-signature"},"AssetProxyRegistered(bytes4 id, address assetProxy)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IAssetProxyDispatcher.registerAssetProxy(address)"}),Object(n.b)("code",{class:"function-signature"},"registerAssetProxy(address assetProxy)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Registers an asset proxy to its asset proxy id.\nOnce an asset proxy is registered, it cannot be unregistered.\n@param assetProxy Address of new asset proxy to register."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IAssetProxyDispatcher.getAssetProxy(bytes4)"}),Object(n.b)("code",{class:"function-signature"},"getAssetProxy(bytes4 assetProxyId) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Gets an asset proxy.\n@param assetProxyId Id of the asset proxy.\n@return The asset proxy registered to assetProxyId. Returns 0x0 if no proxy is registered."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IAssetProxyDispatcher.AssetProxyRegistered(bytes4,address)"}),Object(n.b)("code",{class:"function-signature"},"AssetProxyRegistered(bytes4 id, address assetProxy)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h3",{id:"ieip1271data"},Object(n.b)("inlineCode",{parentName:"h3"},"IEIP1271Data")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IEIP1271Data.OrderWithHash(struct LibOrder.Order,bytes32)"},Object(n.b)("code",{class:"function-signature"},"OrderWithHash(struct LibOrder.Order order, bytes32 orderHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IEIP1271Data.ZeroExTransactionWithHash(struct LibZeroExTransaction.ZeroExTransaction,bytes32)"},Object(n.b)("code",{class:"function-signature"},"ZeroExTransactionWithHash(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 transactionHash)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IEIP1271Data.OrderWithHash(struct LibOrder.Order,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"OrderWithHash(struct LibOrder.Order order, bytes32 orderHash)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"This function","'","s selector is used when ABI encoding the order\nand hash into a byte array before calling ",Object(n.b)("inlineCode",{parentName:"p"},"isValidSignature"),".\nThis function serves no other purpose."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IEIP1271Data.ZeroExTransactionWithHash(struct LibZeroExTransaction.ZeroExTransaction,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"ZeroExTransactionWithHash(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 transactionHash)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"This function","'","s selector is used when ABI encoding the transaction\nand hash into a byte array before calling ",Object(n.b)("inlineCode",{parentName:"p"},"isValidSignature"),".\nThis function serves no other purpose."),Object(n.b)("h3",{id:"ieip1271wallet"},Object(n.b)("inlineCode",{parentName:"h3"},"IEIP1271Wallet")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IEIP1271Wallet.isValidSignature(bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidSignature(bytes data, bytes signature)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IEIP1271Wallet.isValidSignature(bytes,bytes)"}),Object(n.b)("code",{class:"function-signature"},"isValidSignature(bytes data, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Verifies that a signature is valid.\n@param data Arbitrary signed data.\n@param signature Proof that data has been signed.\n@return magicValue bytes4(0x20c13b0b) if the signature check succeeds."),Object(n.b)("h3",{id:"ierc20token"},Object(n.b)("inlineCode",{parentName:"h3"},"IERC20Token")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC20Token.transfer(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"transfer(address _to, uint256 _value)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC20Token.transferFrom(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"transferFrom(address _from, address _to, uint256 _value)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC20Token.approve(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"approve(address _spender, uint256 _value)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC20Token.totalSupply()"},Object(n.b)("code",{class:"function-signature"},"totalSupply()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC20Token.balanceOf(address)"},Object(n.b)("code",{class:"function-signature"},"balanceOf(address _owner)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC20Token.allowance(address,address)"},Object(n.b)("code",{class:"function-signature"},"allowance(address _owner, address _spender)")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC20Token.Transfer(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"Transfer(address _from, address _to, uint256 _value)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IERC20Token.Approval(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"Approval(address _owner, address _spender, uint256 _value)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC20Token.transfer(address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"transfer(address _to, uint256 _value) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"send ",Object(n.b)("inlineCode",{parentName:"p"},"value")," token to ",Object(n.b)("inlineCode",{parentName:"p"},"to")," from ",Object(n.b)("inlineCode",{parentName:"p"},"msg.sender"),"\n@param _to The address of the recipient\n@param _value The amount of token to be transferred\n@return True if transfer was successful"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC20Token.transferFrom(address,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"transferFrom(address _from, address _to, uint256 _value) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"send ",Object(n.b)("inlineCode",{parentName:"p"},"value")," token to ",Object(n.b)("inlineCode",{parentName:"p"},"to")," from ",Object(n.b)("inlineCode",{parentName:"p"},"from")," on the condition it is approved by ",Object(n.b)("inlineCode",{parentName:"p"},"from"),"\n@param _from The address of the sender\n@param _to The address of the recipient\n@param _value The amount of token to be transferred\n@return True if transfer was successful"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC20Token.approve(address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"approve(address _spender, uint256 _value) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"msg.sender")," approves ",Object(n.b)("inlineCode",{parentName:"p"},"_spender")," to spend ",Object(n.b)("inlineCode",{parentName:"p"},"_value")," tokens\n@param _spender The address of the account able to transfer the tokens\n@param _value The amount of wei to be approved for transfer\n@return Always true if the call has enough gas to complete execution"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC20Token.totalSupply()"}),Object(n.b)("code",{class:"function-signature"},"totalSupply() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Query total supply of token\n@return Total supply of token"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC20Token.balanceOf(address)"}),Object(n.b)("code",{class:"function-signature"},"balanceOf(address _owner) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC20Token.allowance(address,address)"}),Object(n.b)("code",{class:"function-signature"},"allowance(address _owner, address _spender) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC20Token.Transfer(address,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"Transfer(address _from, address _to, uint256 _value)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IERC20Token.Approval(address,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"Approval(address _owner, address _spender, uint256 _value)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h3",{id:"iethertoken"},Object(n.b)("inlineCode",{parentName:"h3"},"IEtherToken")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IEtherToken.deposit()"},Object(n.b)("code",{class:"function-signature"},"deposit()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IEtherToken.withdraw(uint256)"},Object(n.b)("code",{class:"function-signature"},"withdraw(uint256 amount)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IERC20Token.transfer(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"transfer(address _to, uint256 _value)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IERC20Token.transferFrom(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"transferFrom(address _from, address _to, uint256 _value)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IERC20Token.approve(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"approve(address _spender, uint256 _value)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IERC20Token.totalSupply()"},Object(n.b)("code",{class:"function-signature"},"totalSupply()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IERC20Token.balanceOf(address)"},Object(n.b)("code",{class:"function-signature"},"balanceOf(address _owner)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IERC20Token.allowance(address,address)"},Object(n.b)("code",{class:"function-signature"},"allowance(address _owner, address _spender)")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IERC20Token.Transfer(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"Transfer(address _from, address _to, uint256 _value)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IERC20Token.Approval(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"Approval(address _owner, address _spender, uint256 _value)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IEtherToken.deposit()"}),Object(n.b)("code",{class:"function-signature"},"deposit()"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IEtherToken.withdraw(uint256)"}),Object(n.b)("code",{class:"function-signature"},"withdraw(uint256 amount)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("h3",{id:"iexchangecore"},Object(n.b)("inlineCode",{parentName:"h3"},"IExchangeCore")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.cancelOrdersUpTo(uint256)"},Object(n.b)("code",{class:"function-signature"},"cancelOrdersUpTo(uint256 targetOrderEpoch)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.fillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"fillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.cancelOrder(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"cancelOrder(struct LibOrder.Order order)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.getOrderInfo(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"getOrderInfo(struct LibOrder.Order order)")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.Fill(address,address,bytes,bytes,bytes,bytes,bytes32,address,address,uint256,uint256,uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"Fill(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, bytes makerFeeAssetData, bytes takerFeeAssetData, bytes32 orderHash, address takerAddress, address senderAddress, uint256 makerAssetFilledAmount, uint256 takerAssetFilledAmount, uint256 makerFeePaid, uint256 takerFeePaid, uint256 protocolFeePaid)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.Cancel(address,address,bytes,bytes,address,bytes32)"},Object(n.b)("code",{class:"function-signature"},"Cancel(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, address senderAddress, bytes32 orderHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IExchangeCore.CancelUpTo(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"CancelUpTo(address makerAddress, address orderSenderAddress, uint256 orderEpoch)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.cancelOrdersUpTo(uint256)"}),Object(n.b)("code",{class:"function-signature"},"cancelOrdersUpTo(uint256 targetOrderEpoch)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Cancels all orders created by makerAddress with a salt less than or equal to the targetOrderEpoch\nand senderAddress equal to msg.sender (or null address if msg.sender == makerAddress).\n@param targetOrderEpoch Orders created with a salt less or equal to this value will be cancelled."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.fillOrder(struct LibOrder.Order,uint256,bytes)"}),Object(n.b)("code",{class:"function-signature"},"fillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Fills the input order.\n@param order Order struct containing order specifications.\n@param takerAssetFillAmount Desired amount of takerAsset to sell.\n@param signature Proof that order has been created by maker.\n@return Amounts filled and fees paid by maker and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.cancelOrder(struct LibOrder.Order)"}),Object(n.b)("code",{class:"function-signature"},"cancelOrder(struct LibOrder.Order order)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"After calling, the order can not be filled anymore.\n@param order Order struct containing order specifications."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.getOrderInfo(struct LibOrder.Order)"}),Object(n.b)("code",{class:"function-signature"},"getOrderInfo(struct LibOrder.Order order) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibOrder.OrderInfo")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Gets information about an order: status, hash, and amount filled.\n@param order Order to gather information on.\n@return OrderInfo Information about the order and its state.\nSee LibOrder.OrderInfo for a complete description."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.Fill(address,address,bytes,bytes,bytes,bytes,bytes32,address,address,uint256,uint256,uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"Fill(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, bytes makerFeeAssetData, bytes takerFeeAssetData, bytes32 orderHash, address takerAddress, address senderAddress, uint256 makerAssetFilledAmount, uint256 takerAssetFilledAmount, uint256 makerFeePaid, uint256 takerFeePaid, uint256 protocolFeePaid)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.Cancel(address,address,bytes,bytes,address,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"Cancel(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, address senderAddress, bytes32 orderHash)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IExchangeCore.CancelUpTo(address,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"CancelUpTo(address makerAddress, address orderSenderAddress, uint256 orderEpoch)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h3",{id:"imatchorders"},Object(n.b)("inlineCode",{parentName:"h3"},"IMatchOrders")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IMatchOrders.batchMatchOrders(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchMatchOrders(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IMatchOrders.batchMatchOrdersWithMaximalFill(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchMatchOrdersWithMaximalFill(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IMatchOrders.matchOrders(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"matchOrders(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IMatchOrders.matchOrdersWithMaximalFill(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"matchOrdersWithMaximalFill(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IMatchOrders.batchMatchOrders(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchMatchOrders(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.BatchMatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Match complementary orders that have a profitable spread.\nEach order is filled at their respective price point, and\nthe matcher receives a profit denominated in the left maker asset.\n@param leftOrders Set of orders with the same maker / taker asset.\n@param rightOrders Set of orders to match against ",Object(n.b)("inlineCode",{parentName:"p"},"leftOrders"),"\n@param leftSignatures Proof that left orders were created by the left makers.\n@param rightSignatures Proof that right orders were created by the right makers.\n@return batchMatchedFillResults Amounts filled and profit generated."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IMatchOrders.batchMatchOrdersWithMaximalFill(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchMatchOrdersWithMaximalFill(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.BatchMatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Match complementary orders that have a profitable spread.\nEach order is maximally filled at their respective price point, and\nthe matcher receives a profit denominated in either the left maker asset,\nright maker asset, or a combination of both.\n@param leftOrders Set of orders with the same maker / taker asset.\n@param rightOrders Set of orders to match against ",Object(n.b)("inlineCode",{parentName:"p"},"leftOrders"),"\n@param leftSignatures Proof that left orders were created by the left makers.\n@param rightSignatures Proof that right orders were created by the right makers.\n@return batchMatchedFillResults Amounts filled and profit generated."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IMatchOrders.matchOrders(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"}),Object(n.b)("code",{class:"function-signature"},"matchOrders(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.MatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Match two complementary orders that have a profitable spread.\nEach order is filled at their respective price point. However, the calculations are\ncarried out as though the orders are both being filled at the right order","'","s price point.\nThe profit made by the left order goes to the taker (who matched the two orders).\n@param leftOrder First order to match.\n@param rightOrder Second order to match.\n@param leftSignature Proof that order was created by the left maker.\n@param rightSignature Proof that order was created by the right maker.\n@return matchedFillResults Amounts filled and fees paid by maker and taker of matched orders."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IMatchOrders.matchOrdersWithMaximalFill(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"}),Object(n.b)("code",{class:"function-signature"},"matchOrdersWithMaximalFill(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.MatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Match two complementary orders that have a profitable spread.\nEach order is maximally filled at their respective price point, and\nthe matcher receives a profit denominated in either the left maker asset,\nright maker asset, or a combination of both.\n@param leftOrder First order to match.\n@param rightOrder Second order to match.\n@param leftSignature Proof that order was created by the left maker.\n@param rightSignature Proof that order was created by the right maker.\n@return matchedFillResults Amounts filled by maker and taker of matched orders."),Object(n.b)("h3",{id:"iownable"},Object(n.b)("inlineCode",{parentName:"h3"},"IOwnable")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IOwnable.transferOwnership(address)"},Object(n.b)("code",{class:"function-signature"},"transferOwnership(address newOwner)")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IOwnable.OwnershipTransferred(address,address)"},Object(n.b)("code",{class:"function-signature"},"OwnershipTransferred(address previousOwner, address newOwner)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IOwnable.transferOwnership(address)"}),Object(n.b)("code",{class:"function-signature"},"transferOwnership(address newOwner)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Transfers ownership of the contract to a new address.\n@param newOwner The address that will become the owner."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IOwnable.OwnershipTransferred(address,address)"}),Object(n.b)("code",{class:"function-signature"},"OwnershipTransferred(address previousOwner, address newOwner)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("p",null,"Emitted by Ownable when ownership is transferred.\n@param previousOwner The previous owner of the contract.\n@param newOwner The new owner of the contract."),Object(n.b)("h3",{id:"iprotocolfees"},Object(n.b)("inlineCode",{parentName:"h3"},"IProtocolFees")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IProtocolFees.setProtocolFeeMultiplier(uint256)"},Object(n.b)("code",{class:"function-signature"},"setProtocolFeeMultiplier(uint256 updatedProtocolFeeMultiplier)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IProtocolFees.setProtocolFeeCollectorAddress(address)"},Object(n.b)("code",{class:"function-signature"},"setProtocolFeeCollectorAddress(address updatedProtocolFeeCollector)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IProtocolFees.protocolFeeMultiplier()"},Object(n.b)("code",{class:"function-signature"},"protocolFeeMultiplier()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IProtocolFees.protocolFeeCollector()"},Object(n.b)("code",{class:"function-signature"},"protocolFeeCollector()")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IProtocolFees.ProtocolFeeMultiplier(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"ProtocolFeeMultiplier(uint256 oldProtocolFeeMultiplier, uint256 updatedProtocolFeeMultiplier)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IProtocolFees.ProtocolFeeCollectorAddress(address,address)"},Object(n.b)("code",{class:"function-signature"},"ProtocolFeeCollectorAddress(address oldProtocolFeeCollector, address updatedProtocolFeeCollector)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IProtocolFees.setProtocolFeeMultiplier(uint256)"}),Object(n.b)("code",{class:"function-signature"},"setProtocolFeeMultiplier(uint256 updatedProtocolFeeMultiplier)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Allows the owner to update the protocol fee multiplier.\n@param updatedProtocolFeeMultiplier The updated protocol fee multiplier."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IProtocolFees.setProtocolFeeCollectorAddress(address)"}),Object(n.b)("code",{class:"function-signature"},"setProtocolFeeCollectorAddress(address updatedProtocolFeeCollector)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Allows the owner to update the protocolFeeCollector address.\n@param updatedProtocolFeeCollector The updated protocolFeeCollector contract address."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IProtocolFees.protocolFeeMultiplier()"}),Object(n.b)("code",{class:"function-signature"},"protocolFeeMultiplier() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Returns the protocolFeeMultiplier"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IProtocolFees.protocolFeeCollector()"}),Object(n.b)("code",{class:"function-signature"},"protocolFeeCollector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Returns the protocolFeeCollector address"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IProtocolFees.ProtocolFeeMultiplier(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"ProtocolFeeMultiplier(uint256 oldProtocolFeeMultiplier, uint256 updatedProtocolFeeMultiplier)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IProtocolFees.ProtocolFeeCollectorAddress(address,address)"}),Object(n.b)("code",{class:"function-signature"},"ProtocolFeeCollectorAddress(address oldProtocolFeeCollector, address updatedProtocolFeeCollector)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h3",{id:"isignaturevalidator"},Object(n.b)("inlineCode",{parentName:"h3"},"ISignatureValidator")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator.preSign(bytes32)"},Object(n.b)("code",{class:"function-signature"},"preSign(bytes32 hash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator.setSignatureValidatorApproval(address,bool)"},Object(n.b)("code",{class:"function-signature"},"setSignatureValidatorApproval(address validatorAddress, bool approval)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator.isValidHashSignature(bytes32,address,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidHashSignature(bytes32 hash, address signerAddress, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator.isValidOrderSignature(struct LibOrder.Order,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidOrderSignature(struct LibOrder.Order order, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator.isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator._isValidOrderWithHashSignature(struct LibOrder.Order,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidOrderWithHashSignature(struct LibOrder.Order order, bytes32 orderHash, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator._isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 transactionHash, bytes signature)")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#ISignatureValidator.SignatureValidatorApproval(address,address,bool)"},Object(n.b)("code",{class:"function-signature"},"SignatureValidatorApproval(address signerAddress, address validatorAddress, bool isApproved)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator.preSign(bytes32)"}),Object(n.b)("code",{class:"function-signature"},"preSign(bytes32 hash)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Approves a hash on-chain.\nAfter presigning a hash, the preSign signature type will become valid for that hash and signer.\n@param hash Any 32-byte hash."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator.setSignatureValidatorApproval(address,bool)"}),Object(n.b)("code",{class:"function-signature"},"setSignatureValidatorApproval(address validatorAddress, bool approval)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Approves/unnapproves a Validator contract to verify signatures on signer","'","s behalf.\n@param validatorAddress Address of Validator contract.\n@param approval Approval or disapproval of  Validator contract."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator.isValidHashSignature(bytes32,address,bytes)"}),Object(n.b)("code",{class:"function-signature"},"isValidHashSignature(bytes32 hash, address signerAddress, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Verifies that a hash has been signed by the given signer.\n@param hash Any 32-byte hash.\n@param signature Proof that the hash has been signed by signer.\n@return isValid ",Object(n.b)("inlineCode",{parentName:"p"},"true")," if the signature is valid for the given hash and signer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator.isValidOrderSignature(struct LibOrder.Order,bytes)"}),Object(n.b)("code",{class:"function-signature"},"isValidOrderSignature(struct LibOrder.Order order, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Verifies that a signature for an order is valid.\n@param order The order.\n@param signature Proof that the order has been signed by signer.\n@return isValid true if the signature is valid for the given order and signer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator.isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes)"}),Object(n.b)("code",{class:"function-signature"},"isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Verifies that a signature for a transaction is valid.\n@param transaction The transaction.\n@param signature Proof that the order has been signed by signer.\n@return isValid true if the signature is valid for the given transaction and signer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator._isValidOrderWithHashSignature(struct LibOrder.Order,bytes32,bytes)"}),Object(n.b)("code",{class:"function-signature"},"_isValidOrderWithHashSignature(struct LibOrder.Order order, bytes32 orderHash, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Verifies that an order, with provided order hash, has been signed\nby the given signer.\n@param order The order.\n@param orderHash The hash of the order.\n@param signature Proof that the hash has been signed by signer.\n@return isValid True if the signature is valid for the given order and signer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator._isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes32,bytes)"}),Object(n.b)("code",{class:"function-signature"},"_isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 transactionHash, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Verifies that a transaction, with provided order hash, has been signed\nby the given signer.\n@param transaction The transaction.\n@param transactionHash The hash of the transaction.\n@param signature Proof that the hash has been signed by signer.\n@return isValid True if the signature is valid for the given transaction and signer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ISignatureValidator.SignatureValidatorApproval(address,address,bool)"}),Object(n.b)("code",{class:"function-signature"},"SignatureValidatorApproval(address signerAddress, address validatorAddress, bool isApproved)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h3",{id:"istaking"},Object(n.b)("inlineCode",{parentName:"h3"},"IStaking")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.addExchangeAddress(address)"},Object(n.b)("code",{class:"function-signature"},"addExchangeAddress(address addr)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.createStakingPool(uint32,bool)"},Object(n.b)("code",{class:"function-signature"},"createStakingPool(uint32 operatorShare, bool addOperatorAsMaker)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.decreaseStakingPoolOperatorShare(bytes32,uint32)"},Object(n.b)("code",{class:"function-signature"},"decreaseStakingPoolOperatorShare(bytes32 poolId, uint32 newOperatorShare)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.endEpoch()"},Object(n.b)("code",{class:"function-signature"},"endEpoch()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.finalizePool(bytes32)"},Object(n.b)("code",{class:"function-signature"},"finalizePool(bytes32 poolId)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.init()"},Object(n.b)("code",{class:"function-signature"},"init()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.joinStakingPoolAsMaker(bytes32)"},Object(n.b)("code",{class:"function-signature"},"joinStakingPoolAsMaker(bytes32 poolId)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.moveStake(struct IStructs.StakeInfo,struct IStructs.StakeInfo,uint256)"},Object(n.b)("code",{class:"function-signature"},"moveStake(struct IStructs.StakeInfo from, struct IStructs.StakeInfo to, uint256 amount)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.payProtocolFee(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"payProtocolFee(address makerAddress, address payerAddress, uint256 protocolFee)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.removeExchangeAddress(address)"},Object(n.b)("code",{class:"function-signature"},"removeExchangeAddress(address addr)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.setParams(uint256,uint32,uint256,uint32,uint32)"},Object(n.b)("code",{class:"function-signature"},"setParams(uint256 _epochDurationInSeconds, uint32 _rewardDelegatedStakeWeight, uint256 _minimumPoolStake, uint32 _cobbDouglasAlphaNumerator, uint32 _cobbDouglasAlphaDenominator)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.stake(uint256)"},Object(n.b)("code",{class:"function-signature"},"stake(uint256 amount)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.unstake(uint256)"},Object(n.b)("code",{class:"function-signature"},"unstake(uint256 amount)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.withdrawDelegatorRewards(bytes32)"},Object(n.b)("code",{class:"function-signature"},"withdrawDelegatorRewards(bytes32 poolId)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.computeRewardBalanceOfDelegator(bytes32,address)"},Object(n.b)("code",{class:"function-signature"},"computeRewardBalanceOfDelegator(bytes32 poolId, address member)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.computeRewardBalanceOfOperator(bytes32)"},Object(n.b)("code",{class:"function-signature"},"computeRewardBalanceOfOperator(bytes32 poolId)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.getCurrentEpochEarliestEndTimeInSeconds()"},Object(n.b)("code",{class:"function-signature"},"getCurrentEpochEarliestEndTimeInSeconds()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.getGlobalStakeByStatus(enum IStructs.StakeStatus)"},Object(n.b)("code",{class:"function-signature"},"getGlobalStakeByStatus(enum IStructs.StakeStatus stakeStatus)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.getOwnerStakeByStatus(address,enum IStructs.StakeStatus)"},Object(n.b)("code",{class:"function-signature"},"getOwnerStakeByStatus(address staker, enum IStructs.StakeStatus stakeStatus)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.getParams()"},Object(n.b)("code",{class:"function-signature"},"getParams()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.getStakeDelegatedToPoolByOwner(address,bytes32)"},Object(n.b)("code",{class:"function-signature"},"getStakeDelegatedToPoolByOwner(address staker, bytes32 poolId)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.getStakingPool(bytes32)"},Object(n.b)("code",{class:"function-signature"},"getStakingPool(bytes32 poolId)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.getStakingPoolStatsThisEpoch(bytes32)"},Object(n.b)("code",{class:"function-signature"},"getStakingPoolStatsThisEpoch(bytes32 poolId)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.getTotalStakeDelegatedToPool(bytes32)"},Object(n.b)("code",{class:"function-signature"},"getTotalStakeDelegatedToPool(bytes32 poolId)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.getWethContract()"},Object(n.b)("code",{class:"function-signature"},"getWethContract()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IStaking.getZrxVault()"},Object(n.b)("code",{class:"function-signature"},"getZrxVault()"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.addExchangeAddress(address)"}),Object(n.b)("code",{class:"function-signature"},"addExchangeAddress(address addr)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Adds a new exchange address\n@param addr Address of exchange contract to add"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.createStakingPool(uint32,bool)"}),Object(n.b)("code",{class:"function-signature"},"createStakingPool(uint32 operatorShare, bool addOperatorAsMaker) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Create a new staking pool. The sender will be the operator of this pool.\nNote that an operator must be payable.\n@param operatorShare Portion of rewards owned by the operator, in ppm.\n@param addOperatorAsMaker Adds operator to the created pool as a maker for convenience iff true.\n@return poolId The unique pool id generated for this pool."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.decreaseStakingPoolOperatorShare(bytes32,uint32)"}),Object(n.b)("code",{class:"function-signature"},"decreaseStakingPoolOperatorShare(bytes32 poolId, uint32 newOperatorShare)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Decreases the operator share for the given pool (i.e. increases pool rewards for members).\n@param poolId Unique Id of pool.\n@param newOperatorShare The newly decreased percentage of any rewards owned by the operator."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.endEpoch()"}),Object(n.b)("code",{class:"function-signature"},"endEpoch() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Begins a new epoch, preparing the prior one for finalization.\nThrows if not enough time has passed between epochs or if the\nprevious epoch was not fully finalized.\n@return numPoolsToFinalize The number of unfinalized pools."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.finalizePool(bytes32)"}),Object(n.b)("code",{class:"function-signature"},"finalizePool(bytes32 poolId)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Instantly finalizes a single pool that earned rewards in the previous\nepoch, crediting it rewards for members and withdrawing operator","'","s\nrewards as WETH. This can be called by internal functions that need\nto finalize a pool immediately. Does nothing if the pool is already\nfinalized or did not earn rewards in the previous epoch.\n@param poolId The pool ID to finalize."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.init()"}),Object(n.b)("code",{class:"function-signature"},"init()"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Initialize storage owned by this contract.\nThis function should not be called directly.\nThe StakingProxy contract will call it in ",Object(n.b)("inlineCode",{parentName:"p"},"attachStakingContract()"),"."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.joinStakingPoolAsMaker(bytes32)"}),Object(n.b)("code",{class:"function-signature"},"joinStakingPoolAsMaker(bytes32 poolId)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Allows caller to join a staking pool as a maker.\n@param poolId Unique id of pool."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.moveStake(struct IStructs.StakeInfo,struct IStructs.StakeInfo,uint256)"}),Object(n.b)("code",{class:"function-signature"},"moveStake(struct IStructs.StakeInfo from, struct IStructs.StakeInfo to, uint256 amount)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Moves stake between statuses: ","'","undelegated","'"," or ","'","delegated","'",".\nDelegated stake can also be moved between pools.\nThis change comes into effect next epoch.\n@param from status to move stake out of.\n@param to status to move stake into.\n@param amount of stake to move."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.payProtocolFee(address,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"payProtocolFee(address makerAddress, address payerAddress, uint256 protocolFee)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Pays a protocol fee in ETH.\n@param makerAddress The address of the order","'","s maker.\n@param payerAddress The address that is responsible for paying the protocol fee.\n@param protocolFee The amount of protocol fees that should be paid."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.removeExchangeAddress(address)"}),Object(n.b)("code",{class:"function-signature"},"removeExchangeAddress(address addr)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Removes an existing exchange address\n@param addr Address of exchange contract to remove"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.setParams(uint256,uint32,uint256,uint32,uint32)"}),Object(n.b)("code",{class:"function-signature"},"setParams(uint256 _epochDurationInSeconds, uint32 _rewardDelegatedStakeWeight, uint256 _minimumPoolStake, uint32 _cobbDouglasAlphaNumerator, uint32 _cobbDouglasAlphaDenominator)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Set all configurable parameters at once.\n@param _epochDurationInSeconds Minimum seconds between epochs.\n@param _rewardDelegatedStakeWeight How much delegated stake is weighted vs operator stake, in ppm.\n@param _minimumPoolStake Minimum amount of stake required in a pool to collect rewards.\n@param _cobbDouglasAlphaNumerator Numerator for cobb douglas alpha factor.\n@param _cobbDouglasAlphaDenominator Denominator for cobb douglas alpha factor."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.stake(uint256)"}),Object(n.b)("code",{class:"function-signature"},"stake(uint256 amount)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Stake ZRX tokens. Tokens are deposited into the ZRX Vault.\nUnstake to retrieve the ZRX. Stake is in the ","'","Active","'"," status.\n@param amount of ZRX to stake."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.unstake(uint256)"}),Object(n.b)("code",{class:"function-signature"},"unstake(uint256 amount)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Unstake. Tokens are withdrawn from the ZRX Vault and returned to\nthe staker. Stake must be in the ","'","undelegated","'"," status in both the\ncurrent and next epoch in order to be unstaked.\n@param amount of ZRX to unstake."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.withdrawDelegatorRewards(bytes32)"}),Object(n.b)("code",{class:"function-signature"},"withdrawDelegatorRewards(bytes32 poolId)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Withdraws the caller","'","s WETH rewards that have accumulated\nuntil the last epoch.\n@param poolId Unique id of pool."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.computeRewardBalanceOfDelegator(bytes32,address)"}),Object(n.b)("code",{class:"function-signature"},"computeRewardBalanceOfDelegator(bytes32 poolId, address member) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Computes the reward balance in ETH of a specific member of a pool.\n@param poolId Unique id of pool.\n@param member The member of the pool.\n@return totalReward Balance in ETH."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.computeRewardBalanceOfOperator(bytes32)"}),Object(n.b)("code",{class:"function-signature"},"computeRewardBalanceOfOperator(bytes32 poolId) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Computes the reward balance in ETH of the operator of a pool.\n@param poolId Unique id of pool.\n@return totalReward Balance in ETH."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.getCurrentEpochEarliestEndTimeInSeconds()"}),Object(n.b)("code",{class:"function-signature"},"getCurrentEpochEarliestEndTimeInSeconds() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Returns the earliest end time in seconds of this epoch.\nThe next epoch can begin once this time is reached.\nEpoch period = [startTimeInSeconds..endTimeInSeconds)\n@return Time in seconds."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.getGlobalStakeByStatus(enum IStructs.StakeStatus)"}),Object(n.b)("code",{class:"function-signature"},"getGlobalStakeByStatus(enum IStructs.StakeStatus stakeStatus) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct IStructs.StoredBalance")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Gets global stake for a given status.\n@param stakeStatus UNDELEGATED or DELEGATED\n@return Global stake for given status."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.getOwnerStakeByStatus(address,enum IStructs.StakeStatus)"}),Object(n.b)("code",{class:"function-signature"},"getOwnerStakeByStatus(address staker, enum IStructs.StakeStatus stakeStatus) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct IStructs.StoredBalance")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Gets an owner","'","s stake balances by status.\n@param staker Owner of stake.\n@param stakeStatus UNDELEGATED or DELEGATED\n@return Owner","'","s stake balances for given status."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.getParams()"}),Object(n.b)("code",{class:"function-signature"},"getParams() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256,uint32,uint256,uint32,uint32")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Retrieves all configurable parameter values.\n@return _epochDurationInSeconds Minimum seconds between epochs.\n@return _rewardDelegatedStakeWeight How much delegated stake is weighted vs operator stake, in ppm.\n@return _minimumPoolStake Minimum amount of stake required in a pool to collect rewards.\n@return _cobbDouglasAlphaNumerator Numerator for cobb douglas alpha factor.\n@return _cobbDouglasAlphaDenominator Denominator for cobb douglas alpha factor."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.getStakeDelegatedToPoolByOwner(address,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"getStakeDelegatedToPoolByOwner(address staker, bytes32 poolId) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct IStructs.StoredBalance")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.getStakingPool(bytes32)"}),Object(n.b)("code",{class:"function-signature"},"getStakingPool(bytes32 poolId) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct IStructs.Pool")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Returns a staking pool\n@param poolId Unique id of pool."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.getStakingPoolStatsThisEpoch(bytes32)"}),Object(n.b)("code",{class:"function-signature"},"getStakingPoolStatsThisEpoch(bytes32 poolId) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct IStructs.PoolStats")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Get stats on a staking pool in this epoch.\n@param poolId Pool Id to query.\n@return PoolStats struct for pool id."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.getTotalStakeDelegatedToPool(bytes32)"}),Object(n.b)("code",{class:"function-signature"},"getTotalStakeDelegatedToPool(bytes32 poolId) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct IStructs.StoredBalance")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Returns the total stake delegated to a specific staking pool,\nacross all members.\n@param poolId Unique Id of pool.\n@return Total stake delegated to pool."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.getWethContract()"}),Object(n.b)("code",{class:"function-signature"},"getWethContract() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"contract IEtherToken")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"An overridable way to access the deployed WETH contract.\nMust be view to allow overrides to access state.\n@return wethContract The WETH contract instance."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IStaking.getZrxVault()"}),Object(n.b)("code",{class:"function-signature"},"getZrxVault() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"contract IZrxVault")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"An overridable way to access the deployed zrxVault.\nMust be view to allow overrides to access state.\n@return zrxVault The zrxVault contract."),Object(n.b)("h3",{id:"istructs"},Object(n.b)("inlineCode",{parentName:"h3"},"IStructs")),Object(n.b)("div",{class:"contract-index"}),Object(n.b)("h3",{id:"itransactions"},Object(n.b)("inlineCode",{parentName:"h3"},"ITransactions")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#ITransactions.executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ITransactions.batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[] transactions, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ITransactions._getCurrentContextAddress()"},Object(n.b)("code",{class:"function-signature"},"_getCurrentContextAddress()")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#ITransactions.TransactionExecution(bytes32)"},Object(n.b)("code",{class:"function-signature"},"TransactionExecution(bytes32 transactionHash)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ITransactions.executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"}),Object(n.b)("code",{class:"function-signature"},"executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes an Exchange method call in the context of signer.\n@param transaction 0x transaction containing salt, signerAddress, and data.\n@param signature Proof that transaction has been signed by signer.\n@return ABI encoded return data of the underlying Exchange function call."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ITransactions.batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[] transactions, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes a batch of Exchange method calls in the context of signer(s).\n@param transactions Array of 0x transactions containing salt, signerAddress, and data.\n@param signatures Array of proofs that transactions have been signed by signer(s).\n@return Array containing ABI encoded return data for each of the underlying Exchange function calls."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ITransactions._getCurrentContextAddress()"}),Object(n.b)("code",{class:"function-signature"},"_getCurrentContextAddress() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"The current function will be called in the context of this address (either 0x transaction signer or ",Object(n.b)("inlineCode",{parentName:"p"},"msg.sender"),").\nIf calling a fill function, this address will represent the taker.\nIf calling a cancel function, this address will represent the maker.\n@return Signer of 0x transaction if entry point is ",Object(n.b)("a",Object(s.a)({parentName:"p"},{href:"#ITransactions.executeTransaction(struct%20LibZeroExTransaction.ZeroExTransaction,bytes)"}),Object(n.b)("inlineCode",{parentName:"a"},"executeTransaction")),".\n",Object(n.b)("inlineCode",{parentName:"p"},"msg.sender")," if entry point is any other function."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ITransactions.TransactionExecution(bytes32)"}),Object(n.b)("code",{class:"function-signature"},"TransactionExecution(bytes32 transactionHash)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("h3",{id:"iwallet"},Object(n.b)("inlineCode",{parentName:"h3"},"IWallet")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IWallet.isValidSignature(bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidSignature(bytes32 hash, bytes signature)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWallet.isValidSignature(bytes32,bytes)"}),Object(n.b)("code",{class:"function-signature"},"isValidSignature(bytes32 hash, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Validates a hash with the ",Object(n.b)("inlineCode",{parentName:"p"},"Wallet")," signature type.\n@param hash Message hash that is signed.\n@param signature Proof of signing.\n@return magicValue ",Object(n.b)("inlineCode",{parentName:"p"},"bytes4(0xb0671381)")," if the signature check succeeds."),Object(n.b)("h3",{id:"iwrapperfunctions"},Object(n.b)("inlineCode",{parentName:"h3"},"IWrapperFunctions")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.fillOrKillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"fillOrKillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.batchFillOrders(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.batchFillOrKillOrders(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrKillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.batchFillOrdersNoThrow(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrdersNoThrow(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.marketSellOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketSellOrdersNoThrow(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.marketBuyOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersNoThrow(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.marketSellOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketSellOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.marketBuyOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IWrapperFunctions.batchCancelOrders(struct LibOrder.Order[])"},Object(n.b)("code",{class:"function-signature"},"batchCancelOrders(struct LibOrder.Order[] orders)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.fillOrKillOrder(struct LibOrder.Order,uint256,bytes)"}),Object(n.b)("code",{class:"function-signature"},"fillOrKillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Fills the input order. Reverts if exact takerAssetFillAmount not filled.\n@param order Order struct containing order specifications.\n@param takerAssetFillAmount Desired amount of takerAsset to sell.\n@param signature Proof that order has been created by maker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.batchFillOrders(struct LibOrder.Order[],uint256[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchFillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of fillOrder.\n@param orders Array of order specifications.\n@param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n@param signatures Proofs that orders have been created by makers.\n@return Array of amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.batchFillOrKillOrders(struct LibOrder.Order[],uint256[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchFillOrKillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of fillOrKillOrder.\n@param orders Array of order specifications.\n@param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n@param signatures Proofs that orders have been created by makers.\n@return Array of amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.batchFillOrdersNoThrow(struct LibOrder.Order[],uint256[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchFillOrdersNoThrow(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of fillOrder. If any fill reverts, the error is caught and ignored.\n@param orders Array of order specifications.\n@param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n@param signatures Proofs that orders have been created by makers.\n@return Array of amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.marketSellOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"marketSellOrdersNoThrow(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.\nIf any fill reverts, the error is caught and ignored.\nNOTE: This function does not enforce that the takerAsset is the same for each order.\n@param orders Array of order specifications.\n@param takerAssetFillAmount Desired amount of takerAsset to sell.\n@param signatures Proofs that orders have been signed by makers.\n@return Amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.marketBuyOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersNoThrow(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of fillOrder until total amount of makerAsset is bought by taker.\nIf any fill reverts, the error is caught and ignored.\nNOTE: This function does not enforce that the makerAsset is the same for each order.\n@param orders Array of order specifications.\n@param makerAssetFillAmount Desired amount of makerAsset to buy.\n@param signatures Proofs that orders have been signed by makers.\n@return Amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.marketSellOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"marketSellOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Calls marketSellOrdersNoThrow then reverts if ","<"," takerAssetFillAmount has been sold.\nNOTE: This function does not enforce that the takerAsset is the same for each order.\n@param orders Array of order specifications.\n@param takerAssetFillAmount Minimum amount of takerAsset to sell.\n@param signatures Proofs that orders have been signed by makers.\n@return Amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.marketBuyOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Calls marketBuyOrdersNoThrow then reverts if ","<"," makerAssetFillAmount has been bought.\nNOTE: This function does not enforce that the makerAsset is the same for each order.\n@param orders Array of order specifications.\n@param makerAssetFillAmount Minimum amount of makerAsset to buy.\n@param signatures Proofs that orders have been signed by makers.\n@return Amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IWrapperFunctions.batchCancelOrders(struct LibOrder.Order[])"}),Object(n.b)("code",{class:"function-signature"},"batchCancelOrders(struct LibOrder.Order[] orders)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of cancelOrder.\n@param orders Array of order specifications."),Object(n.b)("h3",{id:"izrxvault"},Object(n.b)("inlineCode",{parentName:"h3"},"IZrxVault")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IZrxVault.setStakingProxy(address)"},Object(n.b)("code",{class:"function-signature"},"setStakingProxy(address _stakingProxyAddress)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IZrxVault.enterCatastrophicFailure()"},Object(n.b)("code",{class:"function-signature"},"enterCatastrophicFailure()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IZrxVault.setZrxProxy(address)"},Object(n.b)("code",{class:"function-signature"},"setZrxProxy(address zrxProxyAddress)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IZrxVault.depositFrom(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"depositFrom(address staker, uint256 amount)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IZrxVault.withdrawFrom(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"withdrawFrom(address staker, uint256 amount)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IZrxVault.withdrawAllFrom(address)"},Object(n.b)("code",{class:"function-signature"},"withdrawAllFrom(address staker)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IZrxVault.balanceOf(address)"},Object(n.b)("code",{class:"function-signature"},"balanceOf(address staker)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IZrxVault.balanceOfZrxVault()"},Object(n.b)("code",{class:"function-signature"},"balanceOfZrxVault()")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#IZrxVault.StakingProxySet(address)"},Object(n.b)("code",{class:"function-signature"},"StakingProxySet(address stakingProxyAddress)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IZrxVault.InCatastrophicFailureMode(address)"},Object(n.b)("code",{class:"function-signature"},"InCatastrophicFailureMode(address sender)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IZrxVault.Deposit(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"Deposit(address staker, uint256 amount)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IZrxVault.Withdraw(address,uint256)"},Object(n.b)("code",{class:"function-signature"},"Withdraw(address staker, uint256 amount)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#IZrxVault.ZrxProxySet(address)"},Object(n.b)("code",{class:"function-signature"},"ZrxProxySet(address zrxProxyAddress)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IZrxVault.setStakingProxy(address)"}),Object(n.b)("code",{class:"function-signature"},"setStakingProxy(address _stakingProxyAddress)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Sets the address of the StakingProxy contract.\nNote that only the contract staker can call this function.\n@param _stakingProxyAddress Address of Staking proxy contract."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IZrxVault.enterCatastrophicFailure()"}),Object(n.b)("code",{class:"function-signature"},"enterCatastrophicFailure()"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Vault enters into Catastrophic Failure Mode.\n",Object(n.b)("strong",{parentName:"p"},Object(n.b)("em",{parentName:"strong"}," WARNING - ONCE IN CATOSTROPHIC FAILURE MODE, YOU CAN NEVER GO BACK! ")),"\nNote that only the contract staker can call this function."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IZrxVault.setZrxProxy(address)"}),Object(n.b)("code",{class:"function-signature"},"setZrxProxy(address zrxProxyAddress)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Sets the Zrx proxy.\nNote that only the contract staker can call this.\nNote that this can only be called when ",Object(n.b)("em",{parentName:"p"},"not")," in Catastrophic Failure mode.\n@param zrxProxyAddress Address of the 0x Zrx Proxy."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IZrxVault.depositFrom(address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"depositFrom(address staker, uint256 amount)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Deposit an ",Object(n.b)("inlineCode",{parentName:"p"},"amount")," of Zrx Tokens from ",Object(n.b)("inlineCode",{parentName:"p"},"staker")," into the vault.\nNote that only the Staking contract can call this.\nNote that this can only be called when ",Object(n.b)("em",{parentName:"p"},"not")," in Catastrophic Failure mode.\n@param staker of Zrx Tokens.\n@param amount of Zrx Tokens to deposit."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IZrxVault.withdrawFrom(address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"withdrawFrom(address staker, uint256 amount)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Withdraw an ",Object(n.b)("inlineCode",{parentName:"p"},"amount")," of Zrx Tokens to ",Object(n.b)("inlineCode",{parentName:"p"},"staker")," from the vault.\nNote that only the Staking contract can call this.\nNote that this can only be called when ",Object(n.b)("em",{parentName:"p"},"not")," in Catastrophic Failure mode.\n@param staker of Zrx Tokens.\n@param amount of Zrx Tokens to withdraw."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IZrxVault.withdrawAllFrom(address)"}),Object(n.b)("code",{class:"function-signature"},"withdrawAllFrom(address staker) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Withdraw ALL Zrx Tokens to ",Object(n.b)("inlineCode",{parentName:"p"},"staker")," from the vault.\nNote that this can only be called when ",Object(n.b)("em",{parentName:"p"},"in")," Catastrophic Failure mode.\n@param staker of Zrx Tokens."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IZrxVault.balanceOf(address)"}),Object(n.b)("code",{class:"function-signature"},"balanceOf(address staker) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Returns the balance in Zrx Tokens of the ",Object(n.b)("inlineCode",{parentName:"p"},"staker"),"\n@return Balance in Zrx."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IZrxVault.balanceOfZrxVault()"}),Object(n.b)("code",{class:"function-signature"},"balanceOfZrxVault() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Returns the entire balance of Zrx tokens in the vault."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IZrxVault.StakingProxySet(address)"}),Object(n.b)("code",{class:"function-signature"},"StakingProxySet(address stakingProxyAddress)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("p",null,"Emmitted whenever a StakingProxy is set in a vault."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IZrxVault.InCatastrophicFailureMode(address)"}),Object(n.b)("code",{class:"function-signature"},"InCatastrophicFailureMode(address sender)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("p",null,"Emitted when the Staking contract is put into Catastrophic Failure Mode\n@param sender Address of sender (",Object(n.b)("inlineCode",{parentName:"p"},"msg.sender"),")"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IZrxVault.Deposit(address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"Deposit(address staker, uint256 amount)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("p",null,"Emitted when Zrx Tokens are deposited into the vault.\n@param staker of Zrx Tokens.\n@param amount of Zrx Tokens deposited."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IZrxVault.Withdraw(address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"Withdraw(address staker, uint256 amount)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("p",null,"Emitted when Zrx Tokens are withdrawn from the vault.\n@param staker of Zrx Tokens.\n@param amount of Zrx Tokens withdrawn."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"IZrxVault.ZrxProxySet(address)"}),Object(n.b)("code",{class:"function-signature"},"ZrxProxySet(address zrxProxyAddress)"),Object(n.b)("span",{class:"function-visibility"})),Object(n.b)("p",null,"Emitted whenever the ZRX AssetProxy is set."),Object(n.b)("h3",{id:"libbytes"},Object(n.b)("inlineCode",{parentName:"h3"},"LibBytes")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.rawAddress(bytes)"},Object(n.b)("code",{class:"function-signature"},"rawAddress(bytes input)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.contentAddress(bytes)"},Object(n.b)("code",{class:"function-signature"},"contentAddress(bytes input)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.memCopy(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"memCopy(uint256 dest, uint256 source, uint256 length)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.slice(bytes,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"slice(bytes b, uint256 from, uint256 to)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.sliceDestructive(bytes,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"sliceDestructive(bytes b, uint256 from, uint256 to)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.popLastByte(bytes)"},Object(n.b)("code",{class:"function-signature"},"popLastByte(bytes b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.equals(bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"equals(bytes lhs, bytes rhs)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.readAddress(bytes,uint256)"},Object(n.b)("code",{class:"function-signature"},"readAddress(bytes b, uint256 index)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.writeAddress(bytes,uint256,address)"},Object(n.b)("code",{class:"function-signature"},"writeAddress(bytes b, uint256 index, address input)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.readBytes32(bytes,uint256)"},Object(n.b)("code",{class:"function-signature"},"readBytes32(bytes b, uint256 index)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.writeBytes32(bytes,uint256,bytes32)"},Object(n.b)("code",{class:"function-signature"},"writeBytes32(bytes b, uint256 index, bytes32 input)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.readUint256(bytes,uint256)"},Object(n.b)("code",{class:"function-signature"},"readUint256(bytes b, uint256 index)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.writeUint256(bytes,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"writeUint256(bytes b, uint256 index, uint256 input)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.readBytes4(bytes,uint256)"},Object(n.b)("code",{class:"function-signature"},"readBytes4(bytes b, uint256 index)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibBytes.writeLength(bytes,uint256)"},Object(n.b)("code",{class:"function-signature"},"writeLength(bytes b, uint256 length)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.rawAddress(bytes)"}),Object(n.b)("code",{class:"function-signature"},"rawAddress(bytes input) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Gets the memory address for a byte array.\n@param input Byte array to lookup.\n@return memoryAddress Memory address of byte array. This\npoints to the header of the byte array which contains\nthe length."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.contentAddress(bytes)"}),Object(n.b)("code",{class:"function-signature"},"contentAddress(bytes input) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Gets the memory address for the contents of a byte array.\n@param input Byte array to lookup.\n@return memoryAddress Memory address of the contents of the byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.memCopy(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"memCopy(uint256 dest, uint256 source, uint256 length)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Copies ",Object(n.b)("inlineCode",{parentName:"p"},"length")," bytes from memory location ",Object(n.b)("inlineCode",{parentName:"p"},"source")," to ",Object(n.b)("inlineCode",{parentName:"p"},"dest"),".\n@param dest memory address to copy bytes to.\n@param source memory address to copy bytes from.\n@param length number of bytes to copy."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.slice(bytes,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"slice(bytes b, uint256 from, uint256 to) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Returns a slices from a byte array.\n@param b The byte array to take a slice from.\n@param from The starting index for the slice (inclusive).\n@param to The final index for the slice (exclusive).\n@return result The slice containing bytes at indices [from, to)"),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.sliceDestructive(bytes,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"sliceDestructive(bytes b, uint256 from, uint256 to) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Returns a slice from a byte array without preserving the input.\n@param b The byte array to take a slice from. Will be destroyed in the process.\n@param from The starting index for the slice (inclusive).\n@param to The final index for the slice (exclusive).\n@return result The slice containing bytes at indices [from, to)\n@dev When ",Object(n.b)("inlineCode",{parentName:"p"},"from == 0"),", the original array will match the slice. In other cases its state will be corrupted."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.popLastByte(bytes)"}),Object(n.b)("code",{class:"function-signature"},"popLastByte(bytes b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes1")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Pops the last byte off of a byte array by modifying its length.\n@param b Byte array that will be modified.\n@return The byte that was popped off."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.equals(bytes,bytes)"}),Object(n.b)("code",{class:"function-signature"},"equals(bytes lhs, bytes rhs) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Tests equality of two byte arrays.\n@param lhs First byte array to compare.\n@param rhs Second byte array to compare.\n@return True if arrays are the same. False otherwise."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.readAddress(bytes,uint256)"}),Object(n.b)("code",{class:"function-signature"},"readAddress(bytes b, uint256 index) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Reads an address from a position in a byte array.\n@param b Byte array containing an address.\n@param index Index in byte array of address.\n@return address from byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.writeAddress(bytes,uint256,address)"}),Object(n.b)("code",{class:"function-signature"},"writeAddress(bytes b, uint256 index, address input)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Writes an address into a specific position in a byte array.\n@param b Byte array to insert address into.\n@param index Index in byte array of address.\n@param input Address to put into byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.readBytes32(bytes,uint256)"}),Object(n.b)("code",{class:"function-signature"},"readBytes32(bytes b, uint256 index) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Reads a bytes32 value from a position in a byte array.\n@param b Byte array containing a bytes32 value.\n@param index Index in byte array of bytes32 value.\n@return bytes32 value from byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.writeBytes32(bytes,uint256,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"writeBytes32(bytes b, uint256 index, bytes32 input)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Writes a bytes32 into a specific position in a byte array.\n@param b Byte array to insert ","<","input",">"," into.\n@param index Index in byte array of ","<","input",">",".\n@param input bytes32 to put into byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.readUint256(bytes,uint256)"}),Object(n.b)("code",{class:"function-signature"},"readUint256(bytes b, uint256 index) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Reads a uint256 value from a position in a byte array.\n@param b Byte array containing a uint256 value.\n@param index Index in byte array of uint256 value.\n@return uint256 value from byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.writeUint256(bytes,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"writeUint256(bytes b, uint256 index, uint256 input)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Writes a uint256 into a specific position in a byte array.\n@param b Byte array to insert ","<","input",">"," into.\n@param index Index in byte array of ","<","input",">",".\n@param input uint256 to put into byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.readBytes4(bytes,uint256)"}),Object(n.b)("code",{class:"function-signature"},"readBytes4(bytes b, uint256 index) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Reads an unpadded bytes4 value from a position in a byte array.\n@param b Byte array containing a bytes4 value.\n@param index Index in byte array of bytes4 value.\n@return bytes4 value from byte array."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibBytes.writeLength(bytes,uint256)"}),Object(n.b)("code",{class:"function-signature"},"writeLength(bytes b, uint256 length)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Writes a new length to a byte array.\nDecreasing length will lead to removing the corresponding lower order bytes from the byte array.\nIncreasing length may lead to appending adjacent in-memory bytes to the end of the byte array.\n@param b Bytes array to write new length to.\n@param length New length of byte array."),Object(n.b)("h3",{id:"libeip1271"},Object(n.b)("inlineCode",{parentName:"h3"},"LibEIP1271")),Object(n.b)("div",{class:"contract-index"}),Object(n.b)("h3",{id:"libeip712"},Object(n.b)("inlineCode",{parentName:"h3"},"LibEIP712")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibEIP712.hashEIP712Domain(string,string,uint256,address)"},Object(n.b)("code",{class:"function-signature"},"hashEIP712Domain(string name, string version, uint256 chainId, address verifyingContract)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibEIP712.hashEIP712Message(bytes32,bytes32)"},Object(n.b)("code",{class:"function-signature"},"hashEIP712Message(bytes32 eip712DomainHash, bytes32 hashStruct)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibEIP712.hashEIP712Domain(string,string,uint256,address)"}),Object(n.b)("code",{class:"function-signature"},"hashEIP712Domain(string name, string version, uint256 chainId, address verifyingContract) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates a EIP712 domain separator.\n@param name The EIP712 domain name.\n@param version The EIP712 domain version.\n@param verifyingContract The EIP712 verifying contract.\n@return EIP712 domain separator."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibEIP712.hashEIP712Message(bytes32,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"hashEIP712Message(bytes32 eip712DomainHash, bytes32 hashStruct) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates EIP712 encoding for a hash struct with a given domain hash.\n@param eip712DomainHash Hash of the domain domain separator data, computed\nwith getDomainHash().\n@param hashStruct The EIP712 hash struct.\n@return EIP712 hash applied to the given EIP712 Domain."),Object(n.b)("h3",{id:"libeip712exchangedomain"},Object(n.b)("inlineCode",{parentName:"h3"},"LibEIP712ExchangeDomain")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibEIP712ExchangeDomain.constructor(uint256,address)"},Object(n.b)("code",{class:"function-signature"},"constructor(uint256 chainId, address verifyingContractAddressIfExists)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibEIP712ExchangeDomain.constructor(uint256,address)"}),Object(n.b)("code",{class:"function-signature"},"constructor(uint256 chainId, address verifyingContractAddressIfExists)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("h3",{id:"libexchangericherrors"},Object(n.b)("inlineCode",{parentName:"h3"},"LibExchangeRichErrors")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.SignatureErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"SignatureErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.SignatureValidatorNotApprovedErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"SignatureValidatorNotApprovedErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.EIP1271SignatureErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"EIP1271SignatureErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.SignatureWalletErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"SignatureWalletErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.OrderStatusErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"OrderStatusErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.ExchangeInvalidContextErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"ExchangeInvalidContextErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.FillErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"FillErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.OrderEpochErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"OrderEpochErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.AssetProxyExistsErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"AssetProxyExistsErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.AssetProxyDispatchErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"AssetProxyDispatchErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.AssetProxyTransferErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"AssetProxyTransferErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.NegativeSpreadErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"NegativeSpreadErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.TransactionErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"TransactionErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.TransactionExecutionErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"TransactionExecutionErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.IncompleteFillErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"IncompleteFillErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.BatchMatchOrdersErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"BatchMatchOrdersErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.TransactionGasPriceErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"TransactionGasPriceErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.TransactionInvalidContextErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"TransactionInvalidContextErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.PayProtocolFeeErrorSelector()"},Object(n.b)("code",{class:"function-signature"},"PayProtocolFeeErrorSelector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.BatchMatchOrdersError(enum LibExchangeRichErrors.BatchMatchOrdersErrorCodes)"},Object(n.b)("code",{class:"function-signature"},"BatchMatchOrdersError(enum LibExchangeRichErrors.BatchMatchOrdersErrorCodes errorCode)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.SignatureError(enum LibExchangeRichErrors.SignatureErrorCodes,bytes32,address,bytes)"},Object(n.b)("code",{class:"function-signature"},"SignatureError(enum LibExchangeRichErrors.SignatureErrorCodes errorCode, bytes32 hash, address signerAddress, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.SignatureValidatorNotApprovedError(address,address)"},Object(n.b)("code",{class:"function-signature"},"SignatureValidatorNotApprovedError(address signerAddress, address validatorAddress)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.EIP1271SignatureError(address,bytes,bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"EIP1271SignatureError(address verifyingContractAddress, bytes data, bytes signature, bytes errorData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.SignatureWalletError(bytes32,address,bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"SignatureWalletError(bytes32 hash, address walletAddress, bytes signature, bytes errorData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.OrderStatusError(bytes32,enum LibOrder.OrderStatus)"},Object(n.b)("code",{class:"function-signature"},"OrderStatusError(bytes32 orderHash, enum LibOrder.OrderStatus orderStatus)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.ExchangeInvalidContextError(enum LibExchangeRichErrors.ExchangeContextErrorCodes,bytes32,address)"},Object(n.b)("code",{class:"function-signature"},"ExchangeInvalidContextError(enum LibExchangeRichErrors.ExchangeContextErrorCodes errorCode, bytes32 orderHash, address contextAddress)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.FillError(enum LibExchangeRichErrors.FillErrorCodes,bytes32)"},Object(n.b)("code",{class:"function-signature"},"FillError(enum LibExchangeRichErrors.FillErrorCodes errorCode, bytes32 orderHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.OrderEpochError(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"OrderEpochError(address makerAddress, address orderSenderAddress, uint256 currentEpoch)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.AssetProxyExistsError(bytes4,address)"},Object(n.b)("code",{class:"function-signature"},"AssetProxyExistsError(bytes4 assetProxyId, address assetProxyAddress)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.AssetProxyDispatchError(enum LibExchangeRichErrors.AssetProxyDispatchErrorCodes,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"AssetProxyDispatchError(enum LibExchangeRichErrors.AssetProxyDispatchErrorCodes errorCode, bytes32 orderHash, bytes assetData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.AssetProxyTransferError(bytes32,bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"AssetProxyTransferError(bytes32 orderHash, bytes assetData, bytes errorData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.NegativeSpreadError(bytes32,bytes32)"},Object(n.b)("code",{class:"function-signature"},"NegativeSpreadError(bytes32 leftOrderHash, bytes32 rightOrderHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.TransactionError(enum LibExchangeRichErrors.TransactionErrorCodes,bytes32)"},Object(n.b)("code",{class:"function-signature"},"TransactionError(enum LibExchangeRichErrors.TransactionErrorCodes errorCode, bytes32 transactionHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.TransactionExecutionError(bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"TransactionExecutionError(bytes32 transactionHash, bytes errorData)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.TransactionGasPriceError(bytes32,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"TransactionGasPriceError(bytes32 transactionHash, uint256 actualGasPrice, uint256 requiredGasPrice)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.TransactionInvalidContextError(bytes32,address)"},Object(n.b)("code",{class:"function-signature"},"TransactionInvalidContextError(bytes32 transactionHash, address currentContextAddress)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.IncompleteFillError(enum LibExchangeRichErrors.IncompleteFillErrorCode,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"IncompleteFillError(enum LibExchangeRichErrors.IncompleteFillErrorCode errorCode, uint256 expectedAssetFillAmount, uint256 actualAssetFillAmount)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibExchangeRichErrors.PayProtocolFeeError(bytes32,uint256,address,address,bytes)"},Object(n.b)("code",{class:"function-signature"},"PayProtocolFeeError(bytes32 orderHash, uint256 protocolFee, address makerAddress, address takerAddress, bytes errorData)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.SignatureErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"SignatureErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.SignatureValidatorNotApprovedErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"SignatureValidatorNotApprovedErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.EIP1271SignatureErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"EIP1271SignatureErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.SignatureWalletErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"SignatureWalletErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.OrderStatusErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"OrderStatusErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.ExchangeInvalidContextErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"ExchangeInvalidContextErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.FillErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"FillErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.OrderEpochErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"OrderEpochErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.AssetProxyExistsErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"AssetProxyExistsErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.AssetProxyDispatchErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"AssetProxyDispatchErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.AssetProxyTransferErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"AssetProxyTransferErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.NegativeSpreadErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"NegativeSpreadErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.TransactionErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"TransactionErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.TransactionExecutionErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"TransactionExecutionErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.IncompleteFillErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"IncompleteFillErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.BatchMatchOrdersErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"BatchMatchOrdersErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.TransactionGasPriceErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"TransactionGasPriceErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.TransactionInvalidContextErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"TransactionInvalidContextErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.PayProtocolFeeErrorSelector()"}),Object(n.b)("code",{class:"function-signature"},"PayProtocolFeeErrorSelector() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes4")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.BatchMatchOrdersError(enum LibExchangeRichErrors.BatchMatchOrdersErrorCodes)"}),Object(n.b)("code",{class:"function-signature"},"BatchMatchOrdersError(enum LibExchangeRichErrors.BatchMatchOrdersErrorCodes errorCode) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.SignatureError(enum LibExchangeRichErrors.SignatureErrorCodes,bytes32,address,bytes)"}),Object(n.b)("code",{class:"function-signature"},"SignatureError(enum LibExchangeRichErrors.SignatureErrorCodes errorCode, bytes32 hash, address signerAddress, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.SignatureValidatorNotApprovedError(address,address)"}),Object(n.b)("code",{class:"function-signature"},"SignatureValidatorNotApprovedError(address signerAddress, address validatorAddress) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.EIP1271SignatureError(address,bytes,bytes,bytes)"}),Object(n.b)("code",{class:"function-signature"},"EIP1271SignatureError(address verifyingContractAddress, bytes data, bytes signature, bytes errorData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.SignatureWalletError(bytes32,address,bytes,bytes)"}),Object(n.b)("code",{class:"function-signature"},"SignatureWalletError(bytes32 hash, address walletAddress, bytes signature, bytes errorData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.OrderStatusError(bytes32,enum LibOrder.OrderStatus)"}),Object(n.b)("code",{class:"function-signature"},"OrderStatusError(bytes32 orderHash, enum LibOrder.OrderStatus orderStatus) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.ExchangeInvalidContextError(enum LibExchangeRichErrors.ExchangeContextErrorCodes,bytes32,address)"}),Object(n.b)("code",{class:"function-signature"},"ExchangeInvalidContextError(enum LibExchangeRichErrors.ExchangeContextErrorCodes errorCode, bytes32 orderHash, address contextAddress) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.FillError(enum LibExchangeRichErrors.FillErrorCodes,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"FillError(enum LibExchangeRichErrors.FillErrorCodes errorCode, bytes32 orderHash) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.OrderEpochError(address,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"OrderEpochError(address makerAddress, address orderSenderAddress, uint256 currentEpoch) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.AssetProxyExistsError(bytes4,address)"}),Object(n.b)("code",{class:"function-signature"},"AssetProxyExistsError(bytes4 assetProxyId, address assetProxyAddress) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.AssetProxyDispatchError(enum LibExchangeRichErrors.AssetProxyDispatchErrorCodes,bytes32,bytes)"}),Object(n.b)("code",{class:"function-signature"},"AssetProxyDispatchError(enum LibExchangeRichErrors.AssetProxyDispatchErrorCodes errorCode, bytes32 orderHash, bytes assetData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.AssetProxyTransferError(bytes32,bytes,bytes)"}),Object(n.b)("code",{class:"function-signature"},"AssetProxyTransferError(bytes32 orderHash, bytes assetData, bytes errorData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.NegativeSpreadError(bytes32,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"NegativeSpreadError(bytes32 leftOrderHash, bytes32 rightOrderHash) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.TransactionError(enum LibExchangeRichErrors.TransactionErrorCodes,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"TransactionError(enum LibExchangeRichErrors.TransactionErrorCodes errorCode, bytes32 transactionHash) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.TransactionExecutionError(bytes32,bytes)"}),Object(n.b)("code",{class:"function-signature"},"TransactionExecutionError(bytes32 transactionHash, bytes errorData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.TransactionGasPriceError(bytes32,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"TransactionGasPriceError(bytes32 transactionHash, uint256 actualGasPrice, uint256 requiredGasPrice) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.TransactionInvalidContextError(bytes32,address)"}),Object(n.b)("code",{class:"function-signature"},"TransactionInvalidContextError(bytes32 transactionHash, address currentContextAddress) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.IncompleteFillError(enum LibExchangeRichErrors.IncompleteFillErrorCode,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"IncompleteFillError(enum LibExchangeRichErrors.IncompleteFillErrorCode errorCode, uint256 expectedAssetFillAmount, uint256 actualAssetFillAmount) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibExchangeRichErrors.PayProtocolFeeError(bytes32,uint256,address,address,bytes)"}),Object(n.b)("code",{class:"function-signature"},"PayProtocolFeeError(bytes32 orderHash, uint256 protocolFee, address makerAddress, address takerAddress, bytes errorData) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"libfillresults"},Object(n.b)("inlineCode",{parentName:"h3"},"LibFillResults")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibFillResults.calculateFillResults(struct LibOrder.Order,uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"calculateFillResults(struct LibOrder.Order order, uint256 takerAssetFilledAmount, uint256 protocolFeeMultiplier, uint256 gasPrice)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibFillResults.calculateMatchedFillResults(struct LibOrder.Order,struct LibOrder.Order,uint256,uint256,uint256,uint256,bool)"},Object(n.b)("code",{class:"function-signature"},"calculateMatchedFillResults(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, uint256 leftOrderTakerAssetFilledAmount, uint256 rightOrderTakerAssetFilledAmount, uint256 protocolFeeMultiplier, uint256 gasPrice, bool shouldMaximallyFillOrders)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibFillResults.addFillResults(struct LibFillResults.FillResults,struct LibFillResults.FillResults)"},Object(n.b)("code",{class:"function-signature"},"addFillResults(struct LibFillResults.FillResults fillResults1, struct LibFillResults.FillResults fillResults2)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibFillResults.calculateFillResults(struct LibOrder.Order,uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"calculateFillResults(struct LibOrder.Order order, uint256 takerAssetFilledAmount, uint256 protocolFeeMultiplier, uint256 gasPrice) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates amounts filled and fees paid by maker and taker.\n@param order to be filled.\n@param takerAssetFilledAmount Amount of takerAsset that will be filled.\n@param protocolFeeMultiplier The current protocol fee of the exchange contract.\n@param gasPrice The gasprice of the transaction. This is provided so that the function call can continue\nto be pure rather than view.\n@return fillResults Amounts filled and fees paid by maker and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibFillResults.calculateMatchedFillResults(struct LibOrder.Order,struct LibOrder.Order,uint256,uint256,uint256,uint256,bool)"}),Object(n.b)("code",{class:"function-signature"},"calculateMatchedFillResults(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, uint256 leftOrderTakerAssetFilledAmount, uint256 rightOrderTakerAssetFilledAmount, uint256 protocolFeeMultiplier, uint256 gasPrice, bool shouldMaximallyFillOrders) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.MatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates fill amounts for the matched orders.\nEach order is filled at their respective price point. However, the calculations are\ncarried out as though the orders are both being filled at the right order","'","s price point.\nThe profit made by the leftOrder order goes to the taker (who matched the two orders).\n@param leftOrder First order to match.\n@param rightOrder Second order to match.\n@param leftOrderTakerAssetFilledAmount Amount of left order already filled.\n@param rightOrderTakerAssetFilledAmount Amount of right order already filled.\n@param protocolFeeMultiplier The current protocol fee of the exchange contract.\n@param gasPrice The gasprice of the transaction. This is provided so that the function call can continue\nto be pure rather than view.\n@param shouldMaximallyFillOrders A value that indicates whether or not this calculation should use\nthe maximal fill order matching strategy.\n@param matchedFillResults Amounts to fill and fees to pay by maker and taker of matched orders."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibFillResults.addFillResults(struct LibFillResults.FillResults,struct LibFillResults.FillResults)"}),Object(n.b)("code",{class:"function-signature"},"addFillResults(struct LibFillResults.FillResults fillResults1, struct LibFillResults.FillResults fillResults2) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Adds properties of both FillResults instances.\n@param fillResults1 The first FillResults.\n@param fillResults2 The second FillResults.\n@return The sum of both fill results."),Object(n.b)("h3",{id:"libmath"},Object(n.b)("inlineCode",{parentName:"h3"},"LibMath")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMath.safeGetPartialAmountFloor(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"safeGetPartialAmountFloor(uint256 numerator, uint256 denominator, uint256 target)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMath.safeGetPartialAmountCeil(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"safeGetPartialAmountCeil(uint256 numerator, uint256 denominator, uint256 target)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMath.getPartialAmountFloor(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"getPartialAmountFloor(uint256 numerator, uint256 denominator, uint256 target)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMath.getPartialAmountCeil(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"getPartialAmountCeil(uint256 numerator, uint256 denominator, uint256 target)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMath.isRoundingErrorFloor(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"isRoundingErrorFloor(uint256 numerator, uint256 denominator, uint256 target)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMath.isRoundingErrorCeil(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"isRoundingErrorCeil(uint256 numerator, uint256 denominator, uint256 target)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMath.safeGetPartialAmountFloor(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"safeGetPartialAmountFloor(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates partial value given a numerator and denominator rounded down.\nReverts if rounding error is ",">","= 0.1%\n@param numerator Numerator.\n@param denominator Denominator.\n@param target Value to calculate partial of.\n@return Partial value of target rounded down."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMath.safeGetPartialAmountCeil(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"safeGetPartialAmountCeil(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates partial value given a numerator and denominator rounded down.\nReverts if rounding error is ",">","= 0.1%\n@param numerator Numerator.\n@param denominator Denominator.\n@param target Value to calculate partial of.\n@return Partial value of target rounded up."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMath.getPartialAmountFloor(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"getPartialAmountFloor(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates partial value given a numerator and denominator rounded down.\n@param numerator Numerator.\n@param denominator Denominator.\n@param target Value to calculate partial of.\n@return Partial value of target rounded down."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMath.getPartialAmountCeil(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"getPartialAmountCeil(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates partial value given a numerator and denominator rounded down.\n@param numerator Numerator.\n@param denominator Denominator.\n@param target Value to calculate partial of.\n@return Partial value of target rounded up."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMath.isRoundingErrorFloor(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"isRoundingErrorFloor(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Checks if rounding error ",">","= 0.1% when rounding down.\n@param numerator Numerator.\n@param denominator Denominator.\n@param target Value to multiply with numerator/denominator.\n@return Rounding error is present."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMath.isRoundingErrorCeil(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"isRoundingErrorCeil(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Checks if rounding error ",">","= 0.1% when rounding up.\n@param numerator Numerator.\n@param denominator Denominator.\n@param target Value to multiply with numerator/denominator.\n@return Rounding error is present."),Object(n.b)("h3",{id:"libmathricherrors"},Object(n.b)("inlineCode",{parentName:"h3"},"LibMathRichErrors")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMathRichErrors.DivisionByZeroError()"},Object(n.b)("code",{class:"function-signature"},"DivisionByZeroError()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibMathRichErrors.RoundingError(uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"RoundingError(uint256 numerator, uint256 denominator, uint256 target)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMathRichErrors.DivisionByZeroError()"}),Object(n.b)("code",{class:"function-signature"},"DivisionByZeroError() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibMathRichErrors.RoundingError(uint256,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"RoundingError(uint256 numerator, uint256 denominator, uint256 target) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"liborder"},Object(n.b)("inlineCode",{parentName:"h3"},"LibOrder")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibOrder.getTypedDataHash(struct LibOrder.Order,bytes32)"},Object(n.b)("code",{class:"function-signature"},"getTypedDataHash(struct LibOrder.Order order, bytes32 eip712ExchangeDomainHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibOrder.getStructHash(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"getStructHash(struct LibOrder.Order order)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibOrder.getTypedDataHash(struct LibOrder.Order,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"getTypedDataHash(struct LibOrder.Order order, bytes32 eip712ExchangeDomainHash) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates the EIP712 typed data hash of an order with a given domain separator.\n@param order The order structure.\n@return EIP712 typed data hash of the order."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibOrder.getStructHash(struct LibOrder.Order)"}),Object(n.b)("code",{class:"function-signature"},"getStructHash(struct LibOrder.Order order) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates EIP712 hash of the order struct.\n@param order The order structure.\n@return EIP712 hash of the order struct."),Object(n.b)("h3",{id:"libownablericherrors"},Object(n.b)("inlineCode",{parentName:"h3"},"LibOwnableRichErrors")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibOwnableRichErrors.OnlyOwnerError(address,address)"},Object(n.b)("code",{class:"function-signature"},"OnlyOwnerError(address sender, address owner)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibOwnableRichErrors.TransferOwnerToZeroError()"},Object(n.b)("code",{class:"function-signature"},"TransferOwnerToZeroError()"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibOwnableRichErrors.OnlyOwnerError(address,address)"}),Object(n.b)("code",{class:"function-signature"},"OnlyOwnerError(address sender, address owner) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibOwnableRichErrors.TransferOwnerToZeroError()"}),Object(n.b)("code",{class:"function-signature"},"TransferOwnerToZeroError() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"libreentrancyguardricherrors"},Object(n.b)("inlineCode",{parentName:"h3"},"LibReentrancyGuardRichErrors")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibReentrancyGuardRichErrors.IllegalReentrancyError()"},Object(n.b)("code",{class:"function-signature"},"IllegalReentrancyError()"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibReentrancyGuardRichErrors.IllegalReentrancyError()"}),Object(n.b)("code",{class:"function-signature"},"IllegalReentrancyError() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"libricherrors"},Object(n.b)("inlineCode",{parentName:"h3"},"LibRichErrors")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibRichErrors.StandardError(string)"},Object(n.b)("code",{class:"function-signature"},"StandardError(string message)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibRichErrors.rrevert(bytes)"},Object(n.b)("code",{class:"function-signature"},"rrevert(bytes errorData)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibRichErrors.StandardError(string)"}),Object(n.b)("code",{class:"function-signature"},"StandardError(string message) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"ABI encode a standard, string revert error payload.\nThis is the same payload that would be included by a ",Object(n.b)("inlineCode",{parentName:"p"},"revert(string)"),"\nsolidity statement. It has the function signature ",Object(n.b)("inlineCode",{parentName:"p"},"Error(string)"),".\n@param message The error string.\n@return The ABI encoded error."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibRichErrors.rrevert(bytes)"}),Object(n.b)("code",{class:"function-signature"},"rrevert(bytes errorData)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Reverts an encoded rich revert reason ",Object(n.b)("inlineCode",{parentName:"p"},"errorData"),".\n@param errorData ABI encoded error data."),Object(n.b)("h3",{id:"libsafemath"},Object(n.b)("inlineCode",{parentName:"h3"},"LibSafeMath")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMath.safeMul(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"safeMul(uint256 a, uint256 b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMath.safeDiv(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"safeDiv(uint256 a, uint256 b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMath.safeSub(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"safeSub(uint256 a, uint256 b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMath.safeAdd(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"safeAdd(uint256 a, uint256 b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMath.max256(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"max256(uint256 a, uint256 b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMath.min256(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"min256(uint256 a, uint256 b)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMath.safeMul(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"safeMul(uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMath.safeDiv(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"safeDiv(uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMath.safeSub(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"safeSub(uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMath.safeAdd(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"safeAdd(uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMath.max256(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"max256(uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMath.min256(uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"min256(uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"libsafemathricherrors"},Object(n.b)("inlineCode",{parentName:"h3"},"LibSafeMathRichErrors")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMathRichErrors.Uint256BinOpError(enum LibSafeMathRichErrors.BinOpErrorCodes,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"Uint256BinOpError(enum LibSafeMathRichErrors.BinOpErrorCodes errorCode, uint256 a, uint256 b)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibSafeMathRichErrors.Uint256DowncastError(enum LibSafeMathRichErrors.DowncastErrorCodes,uint256)"},Object(n.b)("code",{class:"function-signature"},"Uint256DowncastError(enum LibSafeMathRichErrors.DowncastErrorCodes errorCode, uint256 a)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMathRichErrors.Uint256BinOpError(enum LibSafeMathRichErrors.BinOpErrorCodes,uint256,uint256)"}),Object(n.b)("code",{class:"function-signature"},"Uint256BinOpError(enum LibSafeMathRichErrors.BinOpErrorCodes errorCode, uint256 a, uint256 b) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibSafeMathRichErrors.Uint256DowncastError(enum LibSafeMathRichErrors.DowncastErrorCodes,uint256)"}),Object(n.b)("code",{class:"function-signature"},"Uint256DowncastError(enum LibSafeMathRichErrors.DowncastErrorCodes errorCode, uint256 a) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"libzeroextransaction"},Object(n.b)("inlineCode",{parentName:"h3"},"LibZeroExTransaction")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#LibZeroExTransaction.getTypedDataHash(struct LibZeroExTransaction.ZeroExTransaction,bytes32)"},Object(n.b)("code",{class:"function-signature"},"getTypedDataHash(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 eip712ExchangeDomainHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#LibZeroExTransaction.getStructHash(struct LibZeroExTransaction.ZeroExTransaction)"},Object(n.b)("code",{class:"function-signature"},"getStructHash(struct LibZeroExTransaction.ZeroExTransaction transaction)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibZeroExTransaction.getTypedDataHash(struct LibZeroExTransaction.ZeroExTransaction,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"getTypedDataHash(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 eip712ExchangeDomainHash) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates the EIP712 typed data hash of a transaction with a given domain separator.\n@param transaction 0x transaction structure.\n@return EIP712 typed data hash of the transaction."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"LibZeroExTransaction.getStructHash(struct LibZeroExTransaction.ZeroExTransaction)"}),Object(n.b)("code",{class:"function-signature"},"getStructHash(struct LibZeroExTransaction.ZeroExTransaction transaction) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Calculates EIP712 hash of the 0x transaction struct.\n@param transaction 0x transaction structure.\n@return EIP712 hash of the transaction struct."),Object(n.b)("h3",{id:"mixinassetproxydispatcher"},Object(n.b)("inlineCode",{parentName:"h3"},"MixinAssetProxyDispatcher")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinAssetProxyDispatcher.registerAssetProxy(address)"},Object(n.b)("code",{class:"function-signature"},"registerAssetProxy(address assetProxy)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinAssetProxyDispatcher.getAssetProxy(bytes4)"},Object(n.b)("code",{class:"function-signature"},"getAssetProxy(bytes4 assetProxyId)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinAssetProxyDispatcher._dispatchTransferFrom(bytes32,bytes,address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"_dispatchTransferFrom(bytes32 orderHash, bytes assetData, address from, address to, uint256 amount)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable.constructor()"},Object(n.b)("code",{class:"function-signature"},"constructor()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable.transferOwnership(address)"},Object(n.b)("code",{class:"function-signature"},"transferOwnership(address newOwner)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable._assertSenderIsOwner()"},Object(n.b)("code",{class:"function-signature"},"_assertSenderIsOwner()")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IAssetProxyDispatcher.AssetProxyRegistered(bytes4,address)"},Object(n.b)("code",{class:"function-signature"},"AssetProxyRegistered(bytes4 id, address assetProxy)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IOwnable.OwnershipTransferred(address,address)"},Object(n.b)("code",{class:"function-signature"},"OwnershipTransferred(address previousOwner, address newOwner)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinAssetProxyDispatcher.registerAssetProxy(address)"}),Object(n.b)("code",{class:"function-signature"},"registerAssetProxy(address assetProxy)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Registers an asset proxy to its asset proxy id.\nOnce an asset proxy is registered, it cannot be unregistered.\n@param assetProxy Address of new asset proxy to register."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinAssetProxyDispatcher.getAssetProxy(bytes4)"}),Object(n.b)("code",{class:"function-signature"},"getAssetProxy(bytes4 assetProxyId) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Gets an asset proxy.\n@param assetProxyId Id of the asset proxy.\n@return assetProxy The asset proxy address registered to assetProxyId. Returns 0x0 if no proxy is registered."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinAssetProxyDispatcher._dispatchTransferFrom(bytes32,bytes,address,address,uint256)"}),Object(n.b)("code",{class:"function-signature"},"_dispatchTransferFrom(bytes32 orderHash, bytes assetData, address from, address to, uint256 amount)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Forwards arguments to assetProxy and calls ",Object(n.b)("inlineCode",{parentName:"p"},"transferFrom"),". Either succeeds or throws.\n@param orderHash Hash of the order associated with this transfer.\n@param assetData Byte array encoded for the asset.\n@param from Address to transfer token from.\n@param to Address to transfer token to.\n@param amount Amount of token to transfer."),Object(n.b)("h3",{id:"mixinexchangecore"},Object(n.b)("inlineCode",{parentName:"h3"},"MixinExchangeCore")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinExchangeCore.cancelOrdersUpTo(uint256)"},Object(n.b)("code",{class:"function-signature"},"cancelOrdersUpTo(uint256 targetOrderEpoch)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinExchangeCore.fillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"fillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinExchangeCore.cancelOrder(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"cancelOrder(struct LibOrder.Order order)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinExchangeCore.getOrderInfo(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"getOrderInfo(struct LibOrder.Order order)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinExchangeCore._fillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"_fillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinExchangeCore._cancelOrder(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"_cancelOrder(struct LibOrder.Order order)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinExchangeCore._updateFilledState(struct LibOrder.Order,address,bytes32,uint256,struct LibFillResults.FillResults)"},Object(n.b)("code",{class:"function-signature"},"_updateFilledState(struct LibOrder.Order order, address takerAddress, bytes32 orderHash, uint256 orderTakerAssetFilledAmount, struct LibFillResults.FillResults fillResults)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinExchangeCore._updateCancelledState(struct LibOrder.Order,bytes32)"},Object(n.b)("code",{class:"function-signature"},"_updateCancelledState(struct LibOrder.Order order, bytes32 orderHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinExchangeCore._assertFillableOrder(struct LibOrder.Order,struct LibOrder.OrderInfo,address,bytes)"},Object(n.b)("code",{class:"function-signature"},"_assertFillableOrder(struct LibOrder.Order order, struct LibOrder.OrderInfo orderInfo, address takerAddress, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinExchangeCore._assertValidCancel(struct LibOrder.Order,struct LibOrder.OrderInfo)"},Object(n.b)("code",{class:"function-signature"},"_assertValidCancel(struct LibOrder.Order order, struct LibOrder.OrderInfo orderInfo)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinExchangeCore._settleOrder(bytes32,struct LibOrder.Order,address,struct LibFillResults.FillResults)"},Object(n.b)("code",{class:"function-signature"},"_settleOrder(bytes32 orderHash, struct LibOrder.Order order, address takerAddress, struct LibFillResults.FillResults fillResults)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinExchangeCore._getOrderHashAndFilledAmount(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"_getOrderHashAndFilledAmount(struct LibOrder.Order order)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.preSign(bytes32)"},Object(n.b)("code",{class:"function-signature"},"preSign(bytes32 hash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.setSignatureValidatorApproval(address,bool)"},Object(n.b)("code",{class:"function-signature"},"setSignatureValidatorApproval(address validatorAddress, bool approval)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.isValidHashSignature(bytes32,address,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidHashSignature(bytes32 hash, address signerAddress, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.isValidOrderSignature(struct LibOrder.Order,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidOrderSignature(struct LibOrder.Order order, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator._isValidOrderWithHashSignature(struct LibOrder.Order,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidOrderWithHashSignature(struct LibOrder.Order order, bytes32 orderHash, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator._isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 transactionHash, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions.executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions.batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[] transactions, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions._executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"_executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions._assertExecutableTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes,bytes32)"},Object(n.b)("code",{class:"function-signature"},"_assertExecutableTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature, bytes32 transactionHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions._setCurrentContextAddressIfRequired(address,address)"},Object(n.b)("code",{class:"function-signature"},"_setCurrentContextAddressIfRequired(address signerAddress, address contextAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions._getCurrentContextAddress()"},Object(n.b)("code",{class:"function-signature"},"_getCurrentContextAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees.setProtocolFeeMultiplier(uint256)"},Object(n.b)("code",{class:"function-signature"},"setProtocolFeeMultiplier(uint256 updatedProtocolFeeMultiplier)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees.setProtocolFeeCollectorAddress(address)"},Object(n.b)("code",{class:"function-signature"},"setProtocolFeeCollectorAddress(address updatedProtocolFeeCollector)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees.detachProtocolFeeCollector()"},Object(n.b)("code",{class:"function-signature"},"detachProtocolFeeCollector()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees._setProtocolFeeCollectorAddress(address)"},Object(n.b)("code",{class:"function-signature"},"_setProtocolFeeCollectorAddress(address updatedProtocolFeeCollector)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees._paySingleProtocolFee(bytes32,uint256,address,address)"},Object(n.b)("code",{class:"function-signature"},"_paySingleProtocolFee(bytes32 orderHash, uint256 protocolFee, address makerAddress, address takerAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees._payTwoProtocolFees(bytes32,bytes32,uint256,address,address,address)"},Object(n.b)("code",{class:"function-signature"},"_payTwoProtocolFees(bytes32 orderHash1, bytes32 orderHash2, uint256 protocolFee, address makerAddress1, address makerAddress2, address takerAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees._payProtocolFeeToFeeCollector(bytes32,address,uint256,uint256,address,address)"},Object(n.b)("code",{class:"function-signature"},"_payProtocolFeeToFeeCollector(bytes32 orderHash, address feeCollector, uint256 exchangeBalance, uint256 protocolFee, address makerAddress, address takerAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinAssetProxyDispatcher.registerAssetProxy(address)"},Object(n.b)("code",{class:"function-signature"},"registerAssetProxy(address assetProxy)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinAssetProxyDispatcher.getAssetProxy(bytes4)"},Object(n.b)("code",{class:"function-signature"},"getAssetProxy(bytes4 assetProxyId)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinAssetProxyDispatcher._dispatchTransferFrom(bytes32,bytes,address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"_dispatchTransferFrom(bytes32 orderHash, bytes assetData, address from, address to, uint256 amount)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibEIP712ExchangeDomain.constructor(uint256,address)"},Object(n.b)("code",{class:"function-signature"},"constructor(uint256 chainId, address verifyingContractAddressIfExists)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._refundNonZeroBalanceIfEnabled()"},Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalanceIfEnabled()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._refundNonZeroBalance()"},Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalance()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._disableRefund()"},Object(n.b)("code",{class:"function-signature"},"_disableRefund()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._enableAndRefundNonZeroBalance()"},Object(n.b)("code",{class:"function-signature"},"_enableAndRefundNonZeroBalance()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._areRefundsDisabled()"},Object(n.b)("code",{class:"function-signature"},"_areRefundsDisabled()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ReentrancyGuard._lockMutexOrThrowIfAlreadyLocked()"},Object(n.b)("code",{class:"function-signature"},"_lockMutexOrThrowIfAlreadyLocked()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ReentrancyGuard._unlockMutex()"},Object(n.b)("code",{class:"function-signature"},"_unlockMutex()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable.constructor()"},Object(n.b)("code",{class:"function-signature"},"constructor()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable.transferOwnership(address)"},Object(n.b)("code",{class:"function-signature"},"transferOwnership(address newOwner)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable._assertSenderIsOwner()"},Object(n.b)("code",{class:"function-signature"},"_assertSenderIsOwner()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.protocolFeeMultiplier()"},Object(n.b)("code",{class:"function-signature"},"protocolFeeMultiplier()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.protocolFeeCollector()"},Object(n.b)("code",{class:"function-signature"},"protocolFeeCollector()")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ITransactions.TransactionExecution(bytes32)"},Object(n.b)("code",{class:"function-signature"},"TransactionExecution(bytes32 transactionHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.SignatureValidatorApproval(address,address,bool)"},Object(n.b)("code",{class:"function-signature"},"SignatureValidatorApproval(address signerAddress, address validatorAddress, bool isApproved)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IAssetProxyDispatcher.AssetProxyRegistered(bytes4,address)"},Object(n.b)("code",{class:"function-signature"},"AssetProxyRegistered(bytes4 id, address assetProxy)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IOwnable.OwnershipTransferred(address,address)"},Object(n.b)("code",{class:"function-signature"},"OwnershipTransferred(address previousOwner, address newOwner)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.ProtocolFeeMultiplier(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"ProtocolFeeMultiplier(uint256 oldProtocolFeeMultiplier, uint256 updatedProtocolFeeMultiplier)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.ProtocolFeeCollectorAddress(address,address)"},Object(n.b)("code",{class:"function-signature"},"ProtocolFeeCollectorAddress(address oldProtocolFeeCollector, address updatedProtocolFeeCollector)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.Fill(address,address,bytes,bytes,bytes,bytes,bytes32,address,address,uint256,uint256,uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"Fill(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, bytes makerFeeAssetData, bytes takerFeeAssetData, bytes32 orderHash, address takerAddress, address senderAddress, uint256 makerAssetFilledAmount, uint256 takerAssetFilledAmount, uint256 makerFeePaid, uint256 takerFeePaid, uint256 protocolFeePaid)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.Cancel(address,address,bytes,bytes,address,bytes32)"},Object(n.b)("code",{class:"function-signature"},"Cancel(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, address senderAddress, bytes32 orderHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.CancelUpTo(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"CancelUpTo(address makerAddress, address orderSenderAddress, uint256 orderEpoch)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinExchangeCore.cancelOrdersUpTo(uint256)"}),Object(n.b)("code",{class:"function-signature"},"cancelOrdersUpTo(uint256 targetOrderEpoch)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Cancels all orders created by makerAddress with a salt less than or equal to the targetOrderEpoch\nand senderAddress equal to msg.sender (or null address if msg.sender == makerAddress).\n@param targetOrderEpoch Orders created with a salt less or equal to this value will be cancelled."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinExchangeCore.fillOrder(struct LibOrder.Order,uint256,bytes)"}),Object(n.b)("code",{class:"function-signature"},"fillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Fills the input order.\n@param order Order struct containing order specifications.\n@param takerAssetFillAmount Desired amount of takerAsset to sell.\n@param signature Proof that order has been created by maker.\n@return fillResults Amounts filled and fees paid by maker and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinExchangeCore.cancelOrder(struct LibOrder.Order)"}),Object(n.b)("code",{class:"function-signature"},"cancelOrder(struct LibOrder.Order order)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"After calling, the order can not be filled anymore.\n@param order Order struct containing order specifications."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinExchangeCore.getOrderInfo(struct LibOrder.Order)"}),Object(n.b)("code",{class:"function-signature"},"getOrderInfo(struct LibOrder.Order order) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibOrder.OrderInfo")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Gets information about an order: status, hash, and amount filled.\n@param order Order to gather information on.\n@return orderInfo Information about the order and its state.\nSee LibOrder.OrderInfo for a complete description."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinExchangeCore._fillOrder(struct LibOrder.Order,uint256,bytes)"}),Object(n.b)("code",{class:"function-signature"},"_fillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Fills the input order.\n@param order Order struct containing order specifications.\n@param takerAssetFillAmount Desired amount of takerAsset to sell.\n@param signature Proof that order has been created by maker.\n@return fillResults Amounts filled and fees paid by maker and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinExchangeCore._cancelOrder(struct LibOrder.Order)"}),Object(n.b)("code",{class:"function-signature"},"_cancelOrder(struct LibOrder.Order order)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"After calling, the order can not be filled anymore.\nThrows if order is invalid or sender does not have permission to cancel.\n@param order Order to cancel. Order must be OrderStatus.FILLABLE."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinExchangeCore._updateFilledState(struct LibOrder.Order,address,bytes32,uint256,struct LibFillResults.FillResults)"}),Object(n.b)("code",{class:"function-signature"},"_updateFilledState(struct LibOrder.Order order, address takerAddress, bytes32 orderHash, uint256 orderTakerAssetFilledAmount, struct LibFillResults.FillResults fillResults)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Updates state with results of a fill order.\n@param order that was filled.\n@param takerAddress Address of taker who filled the order.\n@param orderTakerAssetFilledAmount Amount of order already filled."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinExchangeCore._updateCancelledState(struct LibOrder.Order,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"_updateCancelledState(struct LibOrder.Order order, bytes32 orderHash)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Updates state with results of cancelling an order.\nState is only updated if the order is currently fillable.\nOtherwise, updating state would have no effect.\n@param order that was cancelled.\n@param orderHash Hash of order that was cancelled."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinExchangeCore._assertFillableOrder(struct LibOrder.Order,struct LibOrder.OrderInfo,address,bytes)"}),Object(n.b)("code",{class:"function-signature"},"_assertFillableOrder(struct LibOrder.Order order, struct LibOrder.OrderInfo orderInfo, address takerAddress, bytes signature)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Validates context for fillOrder. Succeeds or throws.\n@param order to be filled.\n@param orderInfo OrderStatus, orderHash, and amount already filled of order.\n@param takerAddress Address of order taker.\n@param signature Proof that the orders was created by its maker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinExchangeCore._assertValidCancel(struct LibOrder.Order,struct LibOrder.OrderInfo)"}),Object(n.b)("code",{class:"function-signature"},"_assertValidCancel(struct LibOrder.Order order, struct LibOrder.OrderInfo orderInfo)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Validates context for cancelOrder. Succeeds or throws.\n@param order to be cancelled.\n@param orderInfo OrderStatus, orderHash, and amount already filled of order."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinExchangeCore._settleOrder(bytes32,struct LibOrder.Order,address,struct LibFillResults.FillResults)"}),Object(n.b)("code",{class:"function-signature"},"_settleOrder(bytes32 orderHash, struct LibOrder.Order order, address takerAddress, struct LibFillResults.FillResults fillResults)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Settles an order by transferring assets between counterparties.\n@param orderHash The order hash.\n@param order Order struct containing order specifications.\n@param takerAddress Address selling takerAsset and buying makerAsset.\n@param fillResults Amounts to be filled and fees paid by maker and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinExchangeCore._getOrderHashAndFilledAmount(struct LibOrder.Order)"}),Object(n.b)("code",{class:"function-signature"},"_getOrderHashAndFilledAmount(struct LibOrder.Order order) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes32,uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Gets the order","'","s hash and amount of takerAsset that has already been filled.\n@param order Order struct containing order specifications.\n@return The typed data hash and amount filled of the order."),Object(n.b)("h3",{id:"mixinmatchorders"},Object(n.b)("inlineCode",{parentName:"h3"},"MixinMatchOrders")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinMatchOrders.batchMatchOrders(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchMatchOrders(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinMatchOrders.batchMatchOrdersWithMaximalFill(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchMatchOrdersWithMaximalFill(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinMatchOrders.matchOrders(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"matchOrders(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinMatchOrders.matchOrdersWithMaximalFill(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"},Object(n.b)("code",{class:"function-signature"},"matchOrdersWithMaximalFill(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinMatchOrders._assertValidMatch(struct LibOrder.Order,struct LibOrder.Order,bytes32,bytes32)"},Object(n.b)("code",{class:"function-signature"},"_assertValidMatch(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes32 leftOrderHash, bytes32 rightOrderHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinMatchOrders._batchMatchOrders(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[],bool)"},Object(n.b)("code",{class:"function-signature"},"_batchMatchOrders(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures, bool shouldMaximallyFillOrders)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinMatchOrders._matchOrders(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes,bool)"},Object(n.b)("code",{class:"function-signature"},"_matchOrders(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature, bool shouldMaximallyFillOrders)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinMatchOrders._settleMatchedOrders(bytes32,bytes32,struct LibOrder.Order,struct LibOrder.Order,address,struct LibFillResults.MatchedFillResults)"},Object(n.b)("code",{class:"function-signature"},"_settleMatchedOrders(bytes32 leftOrderHash, bytes32 rightOrderHash, struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, address takerAddress, struct LibFillResults.MatchedFillResults matchedFillResults)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore.cancelOrdersUpTo(uint256)"},Object(n.b)("code",{class:"function-signature"},"cancelOrdersUpTo(uint256 targetOrderEpoch)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore.fillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"fillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore.cancelOrder(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"cancelOrder(struct LibOrder.Order order)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore.getOrderInfo(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"getOrderInfo(struct LibOrder.Order order)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._fillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"_fillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._cancelOrder(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"_cancelOrder(struct LibOrder.Order order)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._updateFilledState(struct LibOrder.Order,address,bytes32,uint256,struct LibFillResults.FillResults)"},Object(n.b)("code",{class:"function-signature"},"_updateFilledState(struct LibOrder.Order order, address takerAddress, bytes32 orderHash, uint256 orderTakerAssetFilledAmount, struct LibFillResults.FillResults fillResults)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._updateCancelledState(struct LibOrder.Order,bytes32)"},Object(n.b)("code",{class:"function-signature"},"_updateCancelledState(struct LibOrder.Order order, bytes32 orderHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._assertFillableOrder(struct LibOrder.Order,struct LibOrder.OrderInfo,address,bytes)"},Object(n.b)("code",{class:"function-signature"},"_assertFillableOrder(struct LibOrder.Order order, struct LibOrder.OrderInfo orderInfo, address takerAddress, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._assertValidCancel(struct LibOrder.Order,struct LibOrder.OrderInfo)"},Object(n.b)("code",{class:"function-signature"},"_assertValidCancel(struct LibOrder.Order order, struct LibOrder.OrderInfo orderInfo)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._settleOrder(bytes32,struct LibOrder.Order,address,struct LibFillResults.FillResults)"},Object(n.b)("code",{class:"function-signature"},"_settleOrder(bytes32 orderHash, struct LibOrder.Order order, address takerAddress, struct LibFillResults.FillResults fillResults)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._getOrderHashAndFilledAmount(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"_getOrderHashAndFilledAmount(struct LibOrder.Order order)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.preSign(bytes32)"},Object(n.b)("code",{class:"function-signature"},"preSign(bytes32 hash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.setSignatureValidatorApproval(address,bool)"},Object(n.b)("code",{class:"function-signature"},"setSignatureValidatorApproval(address validatorAddress, bool approval)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.isValidHashSignature(bytes32,address,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidHashSignature(bytes32 hash, address signerAddress, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.isValidOrderSignature(struct LibOrder.Order,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidOrderSignature(struct LibOrder.Order order, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator._isValidOrderWithHashSignature(struct LibOrder.Order,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidOrderWithHashSignature(struct LibOrder.Order order, bytes32 orderHash, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator._isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 transactionHash, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions.executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions.batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[] transactions, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions._executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"_executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions._assertExecutableTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes,bytes32)"},Object(n.b)("code",{class:"function-signature"},"_assertExecutableTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature, bytes32 transactionHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions._setCurrentContextAddressIfRequired(address,address)"},Object(n.b)("code",{class:"function-signature"},"_setCurrentContextAddressIfRequired(address signerAddress, address contextAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions._getCurrentContextAddress()"},Object(n.b)("code",{class:"function-signature"},"_getCurrentContextAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees.setProtocolFeeMultiplier(uint256)"},Object(n.b)("code",{class:"function-signature"},"setProtocolFeeMultiplier(uint256 updatedProtocolFeeMultiplier)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees.setProtocolFeeCollectorAddress(address)"},Object(n.b)("code",{class:"function-signature"},"setProtocolFeeCollectorAddress(address updatedProtocolFeeCollector)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees.detachProtocolFeeCollector()"},Object(n.b)("code",{class:"function-signature"},"detachProtocolFeeCollector()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees._setProtocolFeeCollectorAddress(address)"},Object(n.b)("code",{class:"function-signature"},"_setProtocolFeeCollectorAddress(address updatedProtocolFeeCollector)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees._paySingleProtocolFee(bytes32,uint256,address,address)"},Object(n.b)("code",{class:"function-signature"},"_paySingleProtocolFee(bytes32 orderHash, uint256 protocolFee, address makerAddress, address takerAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees._payTwoProtocolFees(bytes32,bytes32,uint256,address,address,address)"},Object(n.b)("code",{class:"function-signature"},"_payTwoProtocolFees(bytes32 orderHash1, bytes32 orderHash2, uint256 protocolFee, address makerAddress1, address makerAddress2, address takerAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees._payProtocolFeeToFeeCollector(bytes32,address,uint256,uint256,address,address)"},Object(n.b)("code",{class:"function-signature"},"_payProtocolFeeToFeeCollector(bytes32 orderHash, address feeCollector, uint256 exchangeBalance, uint256 protocolFee, address makerAddress, address takerAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinAssetProxyDispatcher.registerAssetProxy(address)"},Object(n.b)("code",{class:"function-signature"},"registerAssetProxy(address assetProxy)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinAssetProxyDispatcher.getAssetProxy(bytes4)"},Object(n.b)("code",{class:"function-signature"},"getAssetProxy(bytes4 assetProxyId)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinAssetProxyDispatcher._dispatchTransferFrom(bytes32,bytes,address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"_dispatchTransferFrom(bytes32 orderHash, bytes assetData, address from, address to, uint256 amount)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibEIP712ExchangeDomain.constructor(uint256,address)"},Object(n.b)("code",{class:"function-signature"},"constructor(uint256 chainId, address verifyingContractAddressIfExists)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._refundNonZeroBalanceIfEnabled()"},Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalanceIfEnabled()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._refundNonZeroBalance()"},Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalance()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._disableRefund()"},Object(n.b)("code",{class:"function-signature"},"_disableRefund()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._enableAndRefundNonZeroBalance()"},Object(n.b)("code",{class:"function-signature"},"_enableAndRefundNonZeroBalance()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._areRefundsDisabled()"},Object(n.b)("code",{class:"function-signature"},"_areRefundsDisabled()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ReentrancyGuard._lockMutexOrThrowIfAlreadyLocked()"},Object(n.b)("code",{class:"function-signature"},"_lockMutexOrThrowIfAlreadyLocked()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ReentrancyGuard._unlockMutex()"},Object(n.b)("code",{class:"function-signature"},"_unlockMutex()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable.constructor()"},Object(n.b)("code",{class:"function-signature"},"constructor()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable.transferOwnership(address)"},Object(n.b)("code",{class:"function-signature"},"transferOwnership(address newOwner)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable._assertSenderIsOwner()"},Object(n.b)("code",{class:"function-signature"},"_assertSenderIsOwner()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.protocolFeeMultiplier()"},Object(n.b)("code",{class:"function-signature"},"protocolFeeMultiplier()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.protocolFeeCollector()"},Object(n.b)("code",{class:"function-signature"},"protocolFeeCollector()")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ITransactions.TransactionExecution(bytes32)"},Object(n.b)("code",{class:"function-signature"},"TransactionExecution(bytes32 transactionHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.SignatureValidatorApproval(address,address,bool)"},Object(n.b)("code",{class:"function-signature"},"SignatureValidatorApproval(address signerAddress, address validatorAddress, bool isApproved)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IAssetProxyDispatcher.AssetProxyRegistered(bytes4,address)"},Object(n.b)("code",{class:"function-signature"},"AssetProxyRegistered(bytes4 id, address assetProxy)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IOwnable.OwnershipTransferred(address,address)"},Object(n.b)("code",{class:"function-signature"},"OwnershipTransferred(address previousOwner, address newOwner)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.ProtocolFeeMultiplier(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"ProtocolFeeMultiplier(uint256 oldProtocolFeeMultiplier, uint256 updatedProtocolFeeMultiplier)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.ProtocolFeeCollectorAddress(address,address)"},Object(n.b)("code",{class:"function-signature"},"ProtocolFeeCollectorAddress(address oldProtocolFeeCollector, address updatedProtocolFeeCollector)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.Fill(address,address,bytes,bytes,bytes,bytes,bytes32,address,address,uint256,uint256,uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"Fill(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, bytes makerFeeAssetData, bytes takerFeeAssetData, bytes32 orderHash, address takerAddress, address senderAddress, uint256 makerAssetFilledAmount, uint256 takerAssetFilledAmount, uint256 makerFeePaid, uint256 takerFeePaid, uint256 protocolFeePaid)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.Cancel(address,address,bytes,bytes,address,bytes32)"},Object(n.b)("code",{class:"function-signature"},"Cancel(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, address senderAddress, bytes32 orderHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.CancelUpTo(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"CancelUpTo(address makerAddress, address orderSenderAddress, uint256 orderEpoch)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinMatchOrders.batchMatchOrders(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchMatchOrders(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.BatchMatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Match complementary orders that have a profitable spread.\nEach order is filled at their respective price point, and\nthe matcher receives a profit denominated in the left maker asset.\n@param leftOrders Set of orders with the same maker / taker asset.\n@param rightOrders Set of orders to match against ",Object(n.b)("inlineCode",{parentName:"p"},"leftOrders"),"\n@param leftSignatures Proof that left orders were created by the left makers.\n@param rightSignatures Proof that right orders were created by the right makers.\n@return batchMatchedFillResults Amounts filled and profit generated."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinMatchOrders.batchMatchOrdersWithMaximalFill(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchMatchOrdersWithMaximalFill(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.BatchMatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Match complementary orders that have a profitable spread.\nEach order is maximally filled at their respective price point, and\nthe matcher receives a profit denominated in either the left maker asset,\nright maker asset, or a combination of both.\n@param leftOrders Set of orders with the same maker / taker asset.\n@param rightOrders Set of orders to match against ",Object(n.b)("inlineCode",{parentName:"p"},"leftOrders"),"\n@param leftSignatures Proof that left orders were created by the left makers.\n@param rightSignatures Proof that right orders were created by the right makers.\n@return batchMatchedFillResults Amounts filled and profit generated."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinMatchOrders.matchOrders(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"}),Object(n.b)("code",{class:"function-signature"},"matchOrders(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.MatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Match two complementary orders that have a profitable spread.\nEach order is filled at their respective price point. However, the calculations are\ncarried out as though the orders are both being filled at the right order","'","s price point.\nThe profit made by the left order goes to the taker (who matched the two orders).\n@param leftOrder First order to match.\n@param rightOrder Second order to match.\n@param leftSignature Proof that order was created by the left maker.\n@param rightSignature Proof that order was created by the right maker.\n@return matchedFillResults Amounts filled and fees paid by maker and taker of matched orders."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinMatchOrders.matchOrdersWithMaximalFill(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes)"}),Object(n.b)("code",{class:"function-signature"},"matchOrdersWithMaximalFill(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.MatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Match two complementary orders that have a profitable spread.\nEach order is maximally filled at their respective price point, and\nthe matcher receives a profit denominated in either the left maker asset,\nright maker asset, or a combination of both.\n@param leftOrder First order to match.\n@param rightOrder Second order to match.\n@param leftSignature Proof that order was created by the left maker.\n@param rightSignature Proof that order was created by the right maker.\n@return matchedFillResults Amounts filled by maker and taker of matched orders."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinMatchOrders._assertValidMatch(struct LibOrder.Order,struct LibOrder.Order,bytes32,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"_assertValidMatch(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes32 leftOrderHash, bytes32 rightOrderHash)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Validates context for matchOrders. Succeeds or throws.\n@param leftOrder First order to match.\n@param rightOrder Second order to match.\n@param leftOrderHash First matched order hash.\n@param rightOrderHash Second matched order hash."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinMatchOrders._batchMatchOrders(struct LibOrder.Order[],struct LibOrder.Order[],bytes[],bytes[],bool)"}),Object(n.b)("code",{class:"function-signature"},"_batchMatchOrders(struct LibOrder.Order[] leftOrders, struct LibOrder.Order[] rightOrders, bytes[] leftSignatures, bytes[] rightSignatures, bool shouldMaximallyFillOrders) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.BatchMatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Match complementary orders that have a profitable spread.\nEach order is filled at their respective price point, and\nthe matcher receives a profit denominated in the left maker asset.\nThis is the reentrant version of ",Object(n.b)("a",Object(s.a)({parentName:"p"},{href:"#MixinMatchOrders.batchMatchOrders(struct%20LibOrder.Order%5B%5D,struct%20LibOrder.Order%5B%5D,bytes%5B%5D,bytes%5B%5D)"}),Object(n.b)("inlineCode",{parentName:"a"},"batchMatchOrders"))," and ",Object(n.b)("a",Object(s.a)({parentName:"p"},{href:"#MixinMatchOrders.batchMatchOrdersWithMaximalFill(struct%20LibOrder.Order%5B%5D,struct%20LibOrder.Order%5B%5D,bytes%5B%5D,bytes%5B%5D)"}),Object(n.b)("inlineCode",{parentName:"a"},"batchMatchOrdersWithMaximalFill")),".\n@param leftOrders Set of orders with the same maker / taker asset.\n@param rightOrders Set of orders to match against ",Object(n.b)("inlineCode",{parentName:"p"},"leftOrders"),"\n@param leftSignatures Proof that left orders were created by the left makers.\n@param rightSignatures Proof that right orders were created by the right makers.\n@param shouldMaximallyFillOrders A value that indicates whether or not the order matching\nshould be done with maximal fill.\n@return batchMatchedFillResults Amounts filled and profit generated."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinMatchOrders._matchOrders(struct LibOrder.Order,struct LibOrder.Order,bytes,bytes,bool)"}),Object(n.b)("code",{class:"function-signature"},"_matchOrders(struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, bytes leftSignature, bytes rightSignature, bool shouldMaximallyFillOrders) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.MatchedFillResults")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Match two complementary orders that have a profitable spread.\nEach order is filled at their respective price point. However, the calculations are\ncarried out as though the orders are both being filled at the right order","'","s price point.\nThe profit made by the left order goes to the taker (who matched the two orders). This\nfunction is needed to allow for reentrant order matching (used by ",Object(n.b)("a",Object(s.a)({parentName:"p"},{href:"#MixinMatchOrders.batchMatchOrders(struct%20LibOrder.Order%5B%5D,struct%20LibOrder.Order%5B%5D,bytes%5B%5D,bytes%5B%5D)"}),Object(n.b)("inlineCode",{parentName:"a"},"batchMatchOrders"))," and\n",Object(n.b)("a",Object(s.a)({parentName:"p"},{href:"#MixinMatchOrders.batchMatchOrdersWithMaximalFill(struct%20LibOrder.Order%5B%5D,struct%20LibOrder.Order%5B%5D,bytes%5B%5D,bytes%5B%5D)"}),Object(n.b)("inlineCode",{parentName:"a"},"batchMatchOrdersWithMaximalFill")),").\n@param leftOrder First order to match.\n@param rightOrder Second order to match.\n@param leftSignature Proof that order was created by the left maker.\n@param rightSignature Proof that order was created by the right maker.\n@param shouldMaximallyFillOrders Indicates whether or not the maximal fill matching strategy should be used\n@return matchedFillResults Amounts filled and fees paid by maker and taker of matched orders."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinMatchOrders._settleMatchedOrders(bytes32,bytes32,struct LibOrder.Order,struct LibOrder.Order,address,struct LibFillResults.MatchedFillResults)"}),Object(n.b)("code",{class:"function-signature"},"_settleMatchedOrders(bytes32 leftOrderHash, bytes32 rightOrderHash, struct LibOrder.Order leftOrder, struct LibOrder.Order rightOrder, address takerAddress, struct LibFillResults.MatchedFillResults matchedFillResults)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Settles matched order by transferring appropriate funds between order makers, taker, and fee recipient.\n@param leftOrderHash First matched order hash.\n@param rightOrderHash Second matched order hash.\n@param leftOrder First matched order.\n@param rightOrder Second matched order.\n@param takerAddress Address that matched the orders. The taker receives the spread between orders as profit.\n@param matchedFillResults Struct holding amounts to transfer between makers, taker, and fee recipients."),Object(n.b)("h3",{id:"mixinprotocolfees"},Object(n.b)("inlineCode",{parentName:"h3"},"MixinProtocolFees")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinProtocolFees.setProtocolFeeMultiplier(uint256)"},Object(n.b)("code",{class:"function-signature"},"setProtocolFeeMultiplier(uint256 updatedProtocolFeeMultiplier)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinProtocolFees.setProtocolFeeCollectorAddress(address)"},Object(n.b)("code",{class:"function-signature"},"setProtocolFeeCollectorAddress(address updatedProtocolFeeCollector)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinProtocolFees.detachProtocolFeeCollector()"},Object(n.b)("code",{class:"function-signature"},"detachProtocolFeeCollector()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinProtocolFees._setProtocolFeeCollectorAddress(address)"},Object(n.b)("code",{class:"function-signature"},"_setProtocolFeeCollectorAddress(address updatedProtocolFeeCollector)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinProtocolFees._paySingleProtocolFee(bytes32,uint256,address,address)"},Object(n.b)("code",{class:"function-signature"},"_paySingleProtocolFee(bytes32 orderHash, uint256 protocolFee, address makerAddress, address takerAddress)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinProtocolFees._payTwoProtocolFees(bytes32,bytes32,uint256,address,address,address)"},Object(n.b)("code",{class:"function-signature"},"_payTwoProtocolFees(bytes32 orderHash1, bytes32 orderHash2, uint256 protocolFee, address makerAddress1, address makerAddress2, address takerAddress)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinProtocolFees._payProtocolFeeToFeeCollector(bytes32,address,uint256,uint256,address,address)"},Object(n.b)("code",{class:"function-signature"},"_payProtocolFeeToFeeCollector(bytes32 orderHash, address feeCollector, uint256 exchangeBalance, uint256 protocolFee, address makerAddress, address takerAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable.constructor()"},Object(n.b)("code",{class:"function-signature"},"constructor()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable.transferOwnership(address)"},Object(n.b)("code",{class:"function-signature"},"transferOwnership(address newOwner)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable._assertSenderIsOwner()"},Object(n.b)("code",{class:"function-signature"},"_assertSenderIsOwner()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.protocolFeeMultiplier()"},Object(n.b)("code",{class:"function-signature"},"protocolFeeMultiplier()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.protocolFeeCollector()"},Object(n.b)("code",{class:"function-signature"},"protocolFeeCollector()")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IOwnable.OwnershipTransferred(address,address)"},Object(n.b)("code",{class:"function-signature"},"OwnershipTransferred(address previousOwner, address newOwner)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.ProtocolFeeMultiplier(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"ProtocolFeeMultiplier(uint256 oldProtocolFeeMultiplier, uint256 updatedProtocolFeeMultiplier)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.ProtocolFeeCollectorAddress(address,address)"},Object(n.b)("code",{class:"function-signature"},"ProtocolFeeCollectorAddress(address oldProtocolFeeCollector, address updatedProtocolFeeCollector)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinProtocolFees.setProtocolFeeMultiplier(uint256)"}),Object(n.b)("code",{class:"function-signature"},"setProtocolFeeMultiplier(uint256 updatedProtocolFeeMultiplier)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Allows the owner to update the protocol fee multiplier.\n@param updatedProtocolFeeMultiplier The updated protocol fee multiplier."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinProtocolFees.setProtocolFeeCollectorAddress(address)"}),Object(n.b)("code",{class:"function-signature"},"setProtocolFeeCollectorAddress(address updatedProtocolFeeCollector)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Allows the owner to update the protocolFeeCollector address.\n@param updatedProtocolFeeCollector The updated protocolFeeCollector contract address."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinProtocolFees.detachProtocolFeeCollector()"}),Object(n.b)("code",{class:"function-signature"},"detachProtocolFeeCollector()"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Sets the protocolFeeCollector contract address to 0.\nOnly callable by owner."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinProtocolFees._setProtocolFeeCollectorAddress(address)"}),Object(n.b)("code",{class:"function-signature"},"_setProtocolFeeCollectorAddress(address updatedProtocolFeeCollector)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Sets the protocolFeeCollector address and emits an event.\n@param updatedProtocolFeeCollector The updated protocolFeeCollector contract address."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinProtocolFees._paySingleProtocolFee(bytes32,uint256,address,address)"}),Object(n.b)("code",{class:"function-signature"},"_paySingleProtocolFee(bytes32 orderHash, uint256 protocolFee, address makerAddress, address takerAddress) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Pays a protocol fee for a single fill.\n@param orderHash Hash of the order being filled.\n@param protocolFee Value of the fee being paid (equal to protocolFeeMultiplier"),Object(n.b)("p",null,"tx.gasPrice).\n@param makerAddress Address of maker of order being filled.\n@param takerAddress Address filling order."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinProtocolFees._payTwoProtocolFees(bytes32,bytes32,uint256,address,address,address)"}),Object(n.b)("code",{class:"function-signature"},"_payTwoProtocolFees(bytes32 orderHash1, bytes32 orderHash2, uint256 protocolFee, address makerAddress1, address makerAddress2, address takerAddress) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Pays a protocol fee for two orders (used when settling functions in MixinMatchOrders)\n@param orderHash1 Hash of the first order being filled.\n@param orderHash2 Hash of the second order being filled.\n@param protocolFee Value of the fee being paid (equal to protocolFeeMultiplier"),Object(n.b)("p",null,"tx.gasPrice).\n@param makerAddress1 Address of maker of first order being filled.\n@param makerAddress2 Address of maker of second order being filled.\n@param takerAddress Address filling orders."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinProtocolFees._payProtocolFeeToFeeCollector(bytes32,address,uint256,uint256,address,address)"}),Object(n.b)("code",{class:"function-signature"},"_payProtocolFeeToFeeCollector(bytes32 orderHash, address feeCollector, uint256 exchangeBalance, uint256 protocolFee, address makerAddress, address takerAddress) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"uint256")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Pays a single protocol fee.\n@param orderHash Hash of the order being filled.\n@param feeCollector Address of protocolFeeCollector contract.\n@param exchangeBalance Assumed ETH balance of Exchange contract (in wei).\n@param protocolFee Value of the fee being paid (equal to protocolFeeMultiplier"),Object(n.b)("p",null,"tx.gasPrice).\n@param makerAddress Address of maker of order being filled.\n@param takerAddress Address filling order."),Object(n.b)("h3",{id:"mixinsignaturevalidator"},Object(n.b)("inlineCode",{parentName:"h3"},"MixinSignatureValidator")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinSignatureValidator.preSign(bytes32)"},Object(n.b)("code",{class:"function-signature"},"preSign(bytes32 hash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinSignatureValidator.setSignatureValidatorApproval(address,bool)"},Object(n.b)("code",{class:"function-signature"},"setSignatureValidatorApproval(address validatorAddress, bool approval)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinSignatureValidator.isValidHashSignature(bytes32,address,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidHashSignature(bytes32 hash, address signerAddress, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinSignatureValidator.isValidOrderSignature(struct LibOrder.Order,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidOrderSignature(struct LibOrder.Order order, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinSignatureValidator.isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinSignatureValidator._isValidOrderWithHashSignature(struct LibOrder.Order,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidOrderWithHashSignature(struct LibOrder.Order order, bytes32 orderHash, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinSignatureValidator._isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 transactionHash, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions.executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions.batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[] transactions, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions._executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"_executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions._assertExecutableTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes,bytes32)"},Object(n.b)("code",{class:"function-signature"},"_assertExecutableTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature, bytes32 transactionHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions._setCurrentContextAddressIfRequired(address,address)"},Object(n.b)("code",{class:"function-signature"},"_setCurrentContextAddressIfRequired(address signerAddress, address contextAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions._getCurrentContextAddress()"},Object(n.b)("code",{class:"function-signature"},"_getCurrentContextAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibEIP712ExchangeDomain.constructor(uint256,address)"},Object(n.b)("code",{class:"function-signature"},"constructor(uint256 chainId, address verifyingContractAddressIfExists)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._refundNonZeroBalanceIfEnabled()"},Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalanceIfEnabled()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._refundNonZeroBalance()"},Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalance()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._disableRefund()"},Object(n.b)("code",{class:"function-signature"},"_disableRefund()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._enableAndRefundNonZeroBalance()"},Object(n.b)("code",{class:"function-signature"},"_enableAndRefundNonZeroBalance()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._areRefundsDisabled()"},Object(n.b)("code",{class:"function-signature"},"_areRefundsDisabled()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ReentrancyGuard._lockMutexOrThrowIfAlreadyLocked()"},Object(n.b)("code",{class:"function-signature"},"_lockMutexOrThrowIfAlreadyLocked()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ReentrancyGuard._unlockMutex()"},Object(n.b)("code",{class:"function-signature"},"_unlockMutex()")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ITransactions.TransactionExecution(bytes32)"},Object(n.b)("code",{class:"function-signature"},"TransactionExecution(bytes32 transactionHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.SignatureValidatorApproval(address,address,bool)"},Object(n.b)("code",{class:"function-signature"},"SignatureValidatorApproval(address signerAddress, address validatorAddress, bool isApproved)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinSignatureValidator.preSign(bytes32)"}),Object(n.b)("code",{class:"function-signature"},"preSign(bytes32 hash)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Approves a hash on-chain.\nAfter presigning a hash, the preSign signature type will become valid for that hash and signer.\n@param hash Any 32-byte hash."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinSignatureValidator.setSignatureValidatorApproval(address,bool)"}),Object(n.b)("code",{class:"function-signature"},"setSignatureValidatorApproval(address validatorAddress, bool approval)"),Object(n.b)("span",{class:"function-visibility"},"external")),Object(n.b)("p",null,"Approves/unnapproves a Validator contract to verify signatures on signer","'","s behalf\nusing the ",Object(n.b)("inlineCode",{parentName:"p"},"Validator")," signature type.\n@param validatorAddress Address of Validator contract.\n@param approval Approval or disapproval of  Validator contract."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinSignatureValidator.isValidHashSignature(bytes32,address,bytes)"}),Object(n.b)("code",{class:"function-signature"},"isValidHashSignature(bytes32 hash, address signerAddress, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Verifies that a hash has been signed by the given signer.\n@param hash Any 32-byte hash.\n@param signerAddress Address that should have signed the given hash.\n@param signature Proof that the hash has been signed by signer.\n@return isValid ",Object(n.b)("inlineCode",{parentName:"p"},"true")," if the signature is valid for the given hash and signer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinSignatureValidator.isValidOrderSignature(struct LibOrder.Order,bytes)"}),Object(n.b)("code",{class:"function-signature"},"isValidOrderSignature(struct LibOrder.Order order, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Verifies that a signature for an order is valid.\n@param order The order.\n@param signature Proof that the order has been signed by signer.\n@return isValid ",Object(n.b)("inlineCode",{parentName:"p"},"true")," if the signature is valid for the given order and signer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinSignatureValidator.isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes)"}),Object(n.b)("code",{class:"function-signature"},"isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Verifies that a signature for a transaction is valid.\n@param transaction The transaction.\n@param signature Proof that the order has been signed by signer.\n@return isValid ",Object(n.b)("inlineCode",{parentName:"p"},"true")," if the signature is valid for the given transaction and signer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinSignatureValidator._isValidOrderWithHashSignature(struct LibOrder.Order,bytes32,bytes)"}),Object(n.b)("code",{class:"function-signature"},"_isValidOrderWithHashSignature(struct LibOrder.Order order, bytes32 orderHash, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Verifies that an order, with provided order hash, has been signed\nby the given signer.\n@param order The order.\n@param orderHash The hash of the order.\n@param signature Proof that the hash has been signed by signer.\n@return isValid True if the signature is valid for the given order and signer."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinSignatureValidator._isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes32,bytes)"}),Object(n.b)("code",{class:"function-signature"},"_isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 transactionHash, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Verifies that a transaction, with provided order hash, has been signed\nby the given signer.\n@param transaction The transaction.\n@param transactionHash The hash of the transaction.\n@param signature Proof that the hash has been signed by signer.\n@return isValid True if the signature is valid for the given transaction and signer."),Object(n.b)("h3",{id:"mixintransactions"},Object(n.b)("inlineCode",{parentName:"h3"},"MixinTransactions")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinTransactions.executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinTransactions.batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[] transactions, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinTransactions._executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"_executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinTransactions._assertExecutableTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes,bytes32)"},Object(n.b)("code",{class:"function-signature"},"_assertExecutableTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature, bytes32 transactionHash)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinTransactions._setCurrentContextAddressIfRequired(address,address)"},Object(n.b)("code",{class:"function-signature"},"_setCurrentContextAddressIfRequired(address signerAddress, address contextAddress)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinTransactions._getCurrentContextAddress()"},Object(n.b)("code",{class:"function-signature"},"_getCurrentContextAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.preSign(bytes32)"},Object(n.b)("code",{class:"function-signature"},"preSign(bytes32 hash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.setSignatureValidatorApproval(address,bool)"},Object(n.b)("code",{class:"function-signature"},"setSignatureValidatorApproval(address validatorAddress, bool approval)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.isValidHashSignature(bytes32,address,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidHashSignature(bytes32 hash, address signerAddress, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.isValidOrderSignature(struct LibOrder.Order,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidOrderSignature(struct LibOrder.Order order, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator._isValidOrderWithHashSignature(struct LibOrder.Order,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidOrderWithHashSignature(struct LibOrder.Order order, bytes32 orderHash, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator._isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 transactionHash, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibEIP712ExchangeDomain.constructor(uint256,address)"},Object(n.b)("code",{class:"function-signature"},"constructor(uint256 chainId, address verifyingContractAddressIfExists)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._refundNonZeroBalanceIfEnabled()"},Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalanceIfEnabled()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._refundNonZeroBalance()"},Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalance()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._disableRefund()"},Object(n.b)("code",{class:"function-signature"},"_disableRefund()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._enableAndRefundNonZeroBalance()"},Object(n.b)("code",{class:"function-signature"},"_enableAndRefundNonZeroBalance()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._areRefundsDisabled()"},Object(n.b)("code",{class:"function-signature"},"_areRefundsDisabled()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ReentrancyGuard._lockMutexOrThrowIfAlreadyLocked()"},Object(n.b)("code",{class:"function-signature"},"_lockMutexOrThrowIfAlreadyLocked()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ReentrancyGuard._unlockMutex()"},Object(n.b)("code",{class:"function-signature"},"_unlockMutex()")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ITransactions.TransactionExecution(bytes32)"},Object(n.b)("code",{class:"function-signature"},"TransactionExecution(bytes32 transactionHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.SignatureValidatorApproval(address,address,bool)"},Object(n.b)("code",{class:"function-signature"},"SignatureValidatorApproval(address signerAddress, address validatorAddress, bool isApproved)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinTransactions.executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"}),Object(n.b)("code",{class:"function-signature"},"executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes an Exchange method call in the context of signer.\n@param transaction 0x transaction structure.\n@param signature Proof that transaction has been signed by signer.\n@return ABI encoded return data of the underlying Exchange function call."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinTransactions.batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[] transactions, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes a batch of Exchange method calls in the context of signer(s).\n@param transactions Array of 0x transaction structures.\n@param signatures Array of proofs that transactions have been signed by signer(s).\n@return returnData Array containing ABI encoded return data for each of the underlying Exchange function calls."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinTransactions._executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"}),Object(n.b)("code",{class:"function-signature"},"_executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bytes")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Executes an Exchange method call in the context of signer.\n@param transaction 0x transaction structure.\n@param signature Proof that transaction has been signed by signer.\n@return ABI encoded return data of the underlying Exchange function call."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinTransactions._assertExecutableTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes,bytes32)"}),Object(n.b)("code",{class:"function-signature"},"_assertExecutableTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature, bytes32 transactionHash)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Validates context for executeTransaction. Succeeds or throws.\n@param transaction 0x transaction structure.\n@param signature Proof that transaction has been signed by signer.\n@param transactionHash EIP712 typed data hash of 0x transaction."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinTransactions._setCurrentContextAddressIfRequired(address,address)"}),Object(n.b)("code",{class:"function-signature"},"_setCurrentContextAddressIfRequired(address signerAddress, address contextAddress)"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Sets the currentContextAddress if the current context is not msg.sender.\n@param signerAddress Address of the transaction signer.\n@param contextAddress The current context address."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinTransactions._getCurrentContextAddress()"}),Object(n.b)("code",{class:"function-signature"},"_getCurrentContextAddress() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"address")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"The current function will be called in the context of this address (either 0x transaction signer or ",Object(n.b)("inlineCode",{parentName:"p"},"msg.sender"),").\nIf calling a fill function, this address will represent the taker.\nIf calling a cancel function, this address will represent the maker.\n@return Signer of 0x transaction if entry point is ",Object(n.b)("a",Object(s.a)({parentName:"p"},{href:"#MixinTransactions.executeTransaction(struct%20LibZeroExTransaction.ZeroExTransaction,bytes)"}),Object(n.b)("inlineCode",{parentName:"a"},"executeTransaction")),".\n",Object(n.b)("inlineCode",{parentName:"p"},"msg.sender")," if entry point is any other function."),Object(n.b)("h3",{id:"mixintransfersimulator"},Object(n.b)("inlineCode",{parentName:"h3"},"MixinTransferSimulator")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinTransferSimulator.simulateDispatchTransferFromCalls(bytes[],address[],address[],uint256[])"},Object(n.b)("code",{class:"function-signature"},"simulateDispatchTransferFromCalls(bytes[] assetData, address[] fromAddresses, address[] toAddresses, uint256[] amounts)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinAssetProxyDispatcher.registerAssetProxy(address)"},Object(n.b)("code",{class:"function-signature"},"registerAssetProxy(address assetProxy)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinAssetProxyDispatcher.getAssetProxy(bytes4)"},Object(n.b)("code",{class:"function-signature"},"getAssetProxy(bytes4 assetProxyId)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinAssetProxyDispatcher._dispatchTransferFrom(bytes32,bytes,address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"_dispatchTransferFrom(bytes32 orderHash, bytes assetData, address from, address to, uint256 amount)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable.constructor()"},Object(n.b)("code",{class:"function-signature"},"constructor()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable.transferOwnership(address)"},Object(n.b)("code",{class:"function-signature"},"transferOwnership(address newOwner)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable._assertSenderIsOwner()"},Object(n.b)("code",{class:"function-signature"},"_assertSenderIsOwner()")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IAssetProxyDispatcher.AssetProxyRegistered(bytes4,address)"},Object(n.b)("code",{class:"function-signature"},"AssetProxyRegistered(bytes4 id, address assetProxy)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IOwnable.OwnershipTransferred(address,address)"},Object(n.b)("code",{class:"function-signature"},"OwnershipTransferred(address previousOwner, address newOwner)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinTransferSimulator.simulateDispatchTransferFromCalls(bytes[],address[],address[],uint256[])"}),Object(n.b)("code",{class:"function-signature"},"simulateDispatchTransferFromCalls(bytes[] assetData, address[] fromAddresses, address[] toAddresses, uint256[] amounts)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"This function may be used to simulate any amount of transfers\nAs they would occur through the Exchange contract. Note that this function\nwill always revert, even if all transfers are successful. However, it may\nbe used with eth_call or with a try/catch pattern in order to simulate\nthe results of the transfers.\n@param assetData Array of asset details, each encoded per the AssetProxy contract specification.\n@param fromAddresses Array containing the ",Object(n.b)("inlineCode",{parentName:"p"},"from")," addresses that correspond with each transfer.\n@param toAddresses Array containing the ",Object(n.b)("inlineCode",{parentName:"p"},"to")," addresses that correspond with each transfer.\n@param amounts Array containing the amounts that correspond to each transfer.\n@return This function does not return a value. However, it will always revert with\n",Object(n.b)("inlineCode",{parentName:"p"},"Error(&quot;TRANSFERS_SUCCESSFUL&quot;)")," if all of the transfers were successful."),Object(n.b)("h3",{id:"mixinwrapperfunctions"},Object(n.b)("inlineCode",{parentName:"h3"},"MixinWrapperFunctions")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinWrapperFunctions.fillOrKillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"fillOrKillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinWrapperFunctions.batchFillOrders(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinWrapperFunctions.batchFillOrKillOrders(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrKillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinWrapperFunctions.batchFillOrdersNoThrow(struct LibOrder.Order[],uint256[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchFillOrdersNoThrow(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinWrapperFunctions.marketSellOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketSellOrdersNoThrow(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinWrapperFunctions.marketBuyOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersNoThrow(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinWrapperFunctions.marketSellOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketSellOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinWrapperFunctions.marketBuyOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"},Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinWrapperFunctions.batchCancelOrders(struct LibOrder.Order[])"},Object(n.b)("code",{class:"function-signature"},"batchCancelOrders(struct LibOrder.Order[] orders)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinWrapperFunctions._fillOrKillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"_fillOrKillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#MixinWrapperFunctions._fillOrderNoThrow(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"_fillOrderNoThrow(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore.cancelOrdersUpTo(uint256)"},Object(n.b)("code",{class:"function-signature"},"cancelOrdersUpTo(uint256 targetOrderEpoch)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore.fillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"fillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore.cancelOrder(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"cancelOrder(struct LibOrder.Order order)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore.getOrderInfo(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"getOrderInfo(struct LibOrder.Order order)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._fillOrder(struct LibOrder.Order,uint256,bytes)"},Object(n.b)("code",{class:"function-signature"},"_fillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._cancelOrder(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"_cancelOrder(struct LibOrder.Order order)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._updateFilledState(struct LibOrder.Order,address,bytes32,uint256,struct LibFillResults.FillResults)"},Object(n.b)("code",{class:"function-signature"},"_updateFilledState(struct LibOrder.Order order, address takerAddress, bytes32 orderHash, uint256 orderTakerAssetFilledAmount, struct LibFillResults.FillResults fillResults)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._updateCancelledState(struct LibOrder.Order,bytes32)"},Object(n.b)("code",{class:"function-signature"},"_updateCancelledState(struct LibOrder.Order order, bytes32 orderHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._assertFillableOrder(struct LibOrder.Order,struct LibOrder.OrderInfo,address,bytes)"},Object(n.b)("code",{class:"function-signature"},"_assertFillableOrder(struct LibOrder.Order order, struct LibOrder.OrderInfo orderInfo, address takerAddress, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._assertValidCancel(struct LibOrder.Order,struct LibOrder.OrderInfo)"},Object(n.b)("code",{class:"function-signature"},"_assertValidCancel(struct LibOrder.Order order, struct LibOrder.OrderInfo orderInfo)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._settleOrder(bytes32,struct LibOrder.Order,address,struct LibFillResults.FillResults)"},Object(n.b)("code",{class:"function-signature"},"_settleOrder(bytes32 orderHash, struct LibOrder.Order order, address takerAddress, struct LibFillResults.FillResults fillResults)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinExchangeCore._getOrderHashAndFilledAmount(struct LibOrder.Order)"},Object(n.b)("code",{class:"function-signature"},"_getOrderHashAndFilledAmount(struct LibOrder.Order order)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.preSign(bytes32)"},Object(n.b)("code",{class:"function-signature"},"preSign(bytes32 hash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.setSignatureValidatorApproval(address,bool)"},Object(n.b)("code",{class:"function-signature"},"setSignatureValidatorApproval(address validatorAddress, bool approval)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.isValidHashSignature(bytes32,address,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidHashSignature(bytes32 hash, address signerAddress, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.isValidOrderSignature(struct LibOrder.Order,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidOrderSignature(struct LibOrder.Order order, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator.isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"isValidTransactionSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator._isValidOrderWithHashSignature(struct LibOrder.Order,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidOrderWithHashSignature(struct LibOrder.Order order, bytes32 orderHash, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinSignatureValidator._isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction,bytes32,bytes)"},Object(n.b)("code",{class:"function-signature"},"_isValidTransactionWithHashSignature(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes32 transactionHash, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions.executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions.batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[],bytes[])"},Object(n.b)("code",{class:"function-signature"},"batchExecuteTransactions(struct LibZeroExTransaction.ZeroExTransaction[] transactions, bytes[] signatures)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions._executeTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes)"},Object(n.b)("code",{class:"function-signature"},"_executeTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions._assertExecutableTransaction(struct LibZeroExTransaction.ZeroExTransaction,bytes,bytes32)"},Object(n.b)("code",{class:"function-signature"},"_assertExecutableTransaction(struct LibZeroExTransaction.ZeroExTransaction transaction, bytes signature, bytes32 transactionHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions._setCurrentContextAddressIfRequired(address,address)"},Object(n.b)("code",{class:"function-signature"},"_setCurrentContextAddressIfRequired(address signerAddress, address contextAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinTransactions._getCurrentContextAddress()"},Object(n.b)("code",{class:"function-signature"},"_getCurrentContextAddress()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees.setProtocolFeeMultiplier(uint256)"},Object(n.b)("code",{class:"function-signature"},"setProtocolFeeMultiplier(uint256 updatedProtocolFeeMultiplier)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees.setProtocolFeeCollectorAddress(address)"},Object(n.b)("code",{class:"function-signature"},"setProtocolFeeCollectorAddress(address updatedProtocolFeeCollector)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees.detachProtocolFeeCollector()"},Object(n.b)("code",{class:"function-signature"},"detachProtocolFeeCollector()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees._setProtocolFeeCollectorAddress(address)"},Object(n.b)("code",{class:"function-signature"},"_setProtocolFeeCollectorAddress(address updatedProtocolFeeCollector)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees._paySingleProtocolFee(bytes32,uint256,address,address)"},Object(n.b)("code",{class:"function-signature"},"_paySingleProtocolFee(bytes32 orderHash, uint256 protocolFee, address makerAddress, address takerAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees._payTwoProtocolFees(bytes32,bytes32,uint256,address,address,address)"},Object(n.b)("code",{class:"function-signature"},"_payTwoProtocolFees(bytes32 orderHash1, bytes32 orderHash2, uint256 protocolFee, address makerAddress1, address makerAddress2, address takerAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinProtocolFees._payProtocolFeeToFeeCollector(bytes32,address,uint256,uint256,address,address)"},Object(n.b)("code",{class:"function-signature"},"_payProtocolFeeToFeeCollector(bytes32 orderHash, address feeCollector, uint256 exchangeBalance, uint256 protocolFee, address makerAddress, address takerAddress)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinAssetProxyDispatcher.registerAssetProxy(address)"},Object(n.b)("code",{class:"function-signature"},"registerAssetProxy(address assetProxy)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinAssetProxyDispatcher.getAssetProxy(bytes4)"},Object(n.b)("code",{class:"function-signature"},"getAssetProxy(bytes4 assetProxyId)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#MixinAssetProxyDispatcher._dispatchTransferFrom(bytes32,bytes,address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"_dispatchTransferFrom(bytes32 orderHash, bytes assetData, address from, address to, uint256 amount)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#LibEIP712ExchangeDomain.constructor(uint256,address)"},Object(n.b)("code",{class:"function-signature"},"constructor(uint256 chainId, address verifyingContractAddressIfExists)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._refundNonZeroBalanceIfEnabled()"},Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalanceIfEnabled()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._refundNonZeroBalance()"},Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalance()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._disableRefund()"},Object(n.b)("code",{class:"function-signature"},"_disableRefund()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._enableAndRefundNonZeroBalance()"},Object(n.b)("code",{class:"function-signature"},"_enableAndRefundNonZeroBalance()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Refundable._areRefundsDisabled()"},Object(n.b)("code",{class:"function-signature"},"_areRefundsDisabled()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ReentrancyGuard._lockMutexOrThrowIfAlreadyLocked()"},Object(n.b)("code",{class:"function-signature"},"_lockMutexOrThrowIfAlreadyLocked()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ReentrancyGuard._unlockMutex()"},Object(n.b)("code",{class:"function-signature"},"_unlockMutex()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable.constructor()"},Object(n.b)("code",{class:"function-signature"},"constructor()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable.transferOwnership(address)"},Object(n.b)("code",{class:"function-signature"},"transferOwnership(address newOwner)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#Ownable._assertSenderIsOwner()"},Object(n.b)("code",{class:"function-signature"},"_assertSenderIsOwner()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.protocolFeeMultiplier()"},Object(n.b)("code",{class:"function-signature"},"protocolFeeMultiplier()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.protocolFeeCollector()"},Object(n.b)("code",{class:"function-signature"},"protocolFeeCollector()")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ITransactions.TransactionExecution(bytes32)"},Object(n.b)("code",{class:"function-signature"},"TransactionExecution(bytes32 transactionHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ISignatureValidator.SignatureValidatorApproval(address,address,bool)"},Object(n.b)("code",{class:"function-signature"},"SignatureValidatorApproval(address signerAddress, address validatorAddress, bool isApproved)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IAssetProxyDispatcher.AssetProxyRegistered(bytes4,address)"},Object(n.b)("code",{class:"function-signature"},"AssetProxyRegistered(bytes4 id, address assetProxy)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IOwnable.OwnershipTransferred(address,address)"},Object(n.b)("code",{class:"function-signature"},"OwnershipTransferred(address previousOwner, address newOwner)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.ProtocolFeeMultiplier(uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"ProtocolFeeMultiplier(uint256 oldProtocolFeeMultiplier, uint256 updatedProtocolFeeMultiplier)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IProtocolFees.ProtocolFeeCollectorAddress(address,address)"},Object(n.b)("code",{class:"function-signature"},"ProtocolFeeCollectorAddress(address oldProtocolFeeCollector, address updatedProtocolFeeCollector)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.Fill(address,address,bytes,bytes,bytes,bytes,bytes32,address,address,uint256,uint256,uint256,uint256,uint256)"},Object(n.b)("code",{class:"function-signature"},"Fill(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, bytes makerFeeAssetData, bytes takerFeeAssetData, bytes32 orderHash, address takerAddress, address senderAddress, uint256 makerAssetFilledAmount, uint256 takerAssetFilledAmount, uint256 makerFeePaid, uint256 takerFeePaid, uint256 protocolFeePaid)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.Cancel(address,address,bytes,bytes,address,bytes32)"},Object(n.b)("code",{class:"function-signature"},"Cancel(address makerAddress, address feeRecipientAddress, bytes makerAssetData, bytes takerAssetData, address senderAddress, bytes32 orderHash)"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IExchangeCore.CancelUpTo(address,address,uint256)"},Object(n.b)("code",{class:"function-signature"},"CancelUpTo(address makerAddress, address orderSenderAddress, uint256 orderEpoch)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinWrapperFunctions.fillOrKillOrder(struct LibOrder.Order,uint256,bytes)"}),Object(n.b)("code",{class:"function-signature"},"fillOrKillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Fills the input order. Reverts if exact ",Object(n.b)("inlineCode",{parentName:"p"},"takerAssetFillAmount")," not filled.\n@param order Order struct containing order specifications.\n@param takerAssetFillAmount Desired amount of takerAsset to sell.\n@param signature Proof that order has been created by maker.\n@return fillResults Amounts filled and fees paid."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinWrapperFunctions.batchFillOrders(struct LibOrder.Order[],uint256[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchFillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of fillOrder.\n@param orders Array of order specifications.\n@param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n@param signatures Proofs that orders have been created by makers.\n@return fillResults Array of amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinWrapperFunctions.batchFillOrKillOrders(struct LibOrder.Order[],uint256[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchFillOrKillOrders(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of fillOrKillOrder.\n@param orders Array of order specifications.\n@param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n@param signatures Proofs that orders have been created by makers.\n@return fillResults Array of amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinWrapperFunctions.batchFillOrdersNoThrow(struct LibOrder.Order[],uint256[],bytes[])"}),Object(n.b)("code",{class:"function-signature"},"batchFillOrdersNoThrow(struct LibOrder.Order[] orders, uint256[] takerAssetFillAmounts, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults[]")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of fillOrder. If any fill reverts, the error is caught and ignored.\n@param orders Array of order specifications.\n@param takerAssetFillAmounts Array of desired amounts of takerAsset to sell in orders.\n@param signatures Proofs that orders have been created by makers.\n@return fillResults Array of amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinWrapperFunctions.marketSellOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"marketSellOrdersNoThrow(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.\nIf any fill reverts, the error is caught and ignored.\nNOTE: This function does not enforce that the takerAsset is the same for each order.\n@param orders Array of order specifications.\n@param takerAssetFillAmount Desired amount of takerAsset to sell.\n@param signatures Proofs that orders have been signed by makers.\n@return fillResults Amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinWrapperFunctions.marketBuyOrdersNoThrow(struct LibOrder.Order[],uint256,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersNoThrow(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of fillOrder until total amount of makerAsset is bought by taker.\nIf any fill reverts, the error is caught and ignored.\nNOTE: This function does not enforce that the makerAsset is the same for each order.\n@param orders Array of order specifications.\n@param makerAssetFillAmount Desired amount of makerAsset to buy.\n@param signatures Proofs that orders have been signed by makers.\n@return fillResults Amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinWrapperFunctions.marketSellOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"marketSellOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 takerAssetFillAmount, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Calls marketSellOrdersNoThrow then reverts if ","<"," takerAssetFillAmount has been sold.\nNOTE: This function does not enforce that the takerAsset is the same for each order.\n@param orders Array of order specifications.\n@param takerAssetFillAmount Minimum amount of takerAsset to sell.\n@param signatures Proofs that orders have been signed by makers.\n@return fillResults Amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinWrapperFunctions.marketBuyOrdersFillOrKill(struct LibOrder.Order[],uint256,bytes[])"}),Object(n.b)("code",{class:"function-signature"},"marketBuyOrdersFillOrKill(struct LibOrder.Order[] orders, uint256 makerAssetFillAmount, bytes[] signatures) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Calls marketBuyOrdersNoThrow then reverts if ","<"," makerAssetFillAmount has been bought.\nNOTE: This function does not enforce that the makerAsset is the same for each order.\n@param orders Array of order specifications.\n@param makerAssetFillAmount Minimum amount of makerAsset to buy.\n@param signatures Proofs that orders have been signed by makers.\n@return fillResults Amounts filled and fees paid by makers and taker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinWrapperFunctions.batchCancelOrders(struct LibOrder.Order[])"}),Object(n.b)("code",{class:"function-signature"},"batchCancelOrders(struct LibOrder.Order[] orders)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Executes multiple calls of cancelOrder.\n@param orders Array of order specifications."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinWrapperFunctions._fillOrKillOrder(struct LibOrder.Order,uint256,bytes)"}),Object(n.b)("code",{class:"function-signature"},"_fillOrKillOrder(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Fills the input order. Reverts if exact takerAssetFillAmount not filled.\n@param order Order struct containing order specifications.\n@param takerAssetFillAmount Desired amount of takerAsset to sell.\n@param fillResults ignature Proof that order has been created by maker."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"MixinWrapperFunctions._fillOrderNoThrow(struct LibOrder.Order,uint256,bytes)"}),Object(n.b)("code",{class:"function-signature"},"_fillOrderNoThrow(struct LibOrder.Order order, uint256 takerAssetFillAmount, bytes signature) ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"struct LibFillResults.FillResults")),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("p",null,"Fills the input order.\nReturns a null FillResults instance if the transaction would otherwise revert.\n@param order Order struct containing order specifications.\n@param takerAssetFillAmount Desired amount of takerAsset to sell.\n@param signature Proof that order has been created by maker.\n@return fillResults Amounts filled and fees paid by maker and taker."),Object(n.b)("h3",{id:"ownable"},Object(n.b)("inlineCode",{parentName:"h3"},"Ownable")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#Ownable.constructor()"},Object(n.b)("code",{class:"function-signature"},"constructor()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#Ownable.transferOwnership(address)"},Object(n.b)("code",{class:"function-signature"},"transferOwnership(address newOwner)"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#Ownable._assertSenderIsOwner()"},Object(n.b)("code",{class:"function-signature"},"_assertSenderIsOwner()")))),Object(n.b)("span",{class:"contract-index-title"},"Events"),Object(n.b)("ul",null,Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#IOwnable.OwnershipTransferred(address,address)"},Object(n.b)("code",{class:"function-signature"},"OwnershipTransferred(address previousOwner, address newOwner)"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"Ownable.constructor()"}),Object(n.b)("code",{class:"function-signature"},"constructor()"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"Ownable.transferOwnership(address)"}),Object(n.b)("code",{class:"function-signature"},"transferOwnership(address newOwner)"),Object(n.b)("span",{class:"function-visibility"},"public")),Object(n.b)("p",null,"Change the owner of this contract.\n@param newOwner New owner address."),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"Ownable._assertSenderIsOwner()"}),Object(n.b)("code",{class:"function-signature"},"_assertSenderIsOwner()"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"reentrancyguard"},Object(n.b)("inlineCode",{parentName:"h3"},"ReentrancyGuard")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#ReentrancyGuard._lockMutexOrThrowIfAlreadyLocked()"},Object(n.b)("code",{class:"function-signature"},"_lockMutexOrThrowIfAlreadyLocked()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#ReentrancyGuard._unlockMutex()"},Object(n.b)("code",{class:"function-signature"},"_unlockMutex()"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ReentrancyGuard._lockMutexOrThrowIfAlreadyLocked()"}),Object(n.b)("code",{class:"function-signature"},"_lockMutexOrThrowIfAlreadyLocked()"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"ReentrancyGuard._unlockMutex()"}),Object(n.b)("code",{class:"function-signature"},"_unlockMutex()"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h3",{id:"refundable"},Object(n.b)("inlineCode",{parentName:"h3"},"Refundable")),Object(n.b)("div",{class:"contract-index"},Object(n.b)("span",{class:"contract-index-title"},"Functions"),Object(n.b)("ul",null,Object(n.b)("li",null,Object(n.b)("a",{href:"#Refundable._refundNonZeroBalanceIfEnabled()"},Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalanceIfEnabled()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#Refundable._refundNonZeroBalance()"},Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalance()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#Refundable._disableRefund()"},Object(n.b)("code",{class:"function-signature"},"_disableRefund()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#Refundable._enableAndRefundNonZeroBalance()"},Object(n.b)("code",{class:"function-signature"},"_enableAndRefundNonZeroBalance()"))),Object(n.b)("li",null,Object(n.b)("a",{href:"#Refundable._areRefundsDisabled()"},Object(n.b)("code",{class:"function-signature"},"_areRefundsDisabled()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ReentrancyGuard._lockMutexOrThrowIfAlreadyLocked()"},Object(n.b)("code",{class:"function-signature"},"_lockMutexOrThrowIfAlreadyLocked()"))),Object(n.b)("li",{class:"inherited"},Object(n.b)("a",{href:"src#ReentrancyGuard._unlockMutex()"},Object(n.b)("code",{class:"function-signature"},"_unlockMutex()"))))),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"Refundable._refundNonZeroBalanceIfEnabled()"}),Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalanceIfEnabled()"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"Refundable._refundNonZeroBalance()"}),Object(n.b)("code",{class:"function-signature"},"_refundNonZeroBalance()"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"Refundable._disableRefund()"}),Object(n.b)("code",{class:"function-signature"},"_disableRefund()"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"Refundable._enableAndRefundNonZeroBalance()"}),Object(n.b)("code",{class:"function-signature"},"_enableAndRefundNonZeroBalance()"),Object(n.b)("span",{class:"function-visibility"},"internal")),Object(n.b)("h4",null,Object(n.b)("a",{class:"anchor","aria-hidden":"true",id:"Refundable._areRefundsDisabled()"}),Object(n.b)("code",{class:"function-signature"},"_areRefundsDisabled() ",Object(n.b)("span",{class:"return-arrow"},"\u2192")," ",Object(n.b)("span",{class:"return-type"},"bool")),Object(n.b)("span",{class:"function-visibility"},"internal"))))}l.isMDXComponent=!0},517:function(e,t,r){"use strict";r.d(t,"a",(function(){return d})),r.d(t,"b",(function(){return h}));var s=r(0),a=r.n(s);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,s)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function b(e,t){if(null==e)return{};var r,s,a=function(e,t){if(null==e)return{};var r,s,a={},n=Object.keys(e);for(s=0;s<n.length;s++)r=n[s],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(s=0;s<n.length;s++)r=n[s],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=a.a.createContext({}),l=function(e){var t=a.a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},d=function(e){var t=l(e.components);return a.a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},O=a.a.forwardRef((function(e,t){var r=e.components,s=e.mdxType,n=e.originalType,i=e.parentName,o=b(e,["components","mdxType","originalType","parentName"]),d=l(r),O=s,h=d["".concat(i,".").concat(O)]||d[O]||u[O]||n;return r?a.a.createElement(h,c(c({ref:t},o),{},{components:r})):a.a.createElement(h,c({ref:t},o))}));function h(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var n=r.length,i=new Array(n);i[0]=O;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c.mdxType="string"==typeof e?e:s,i[1]=c;for(var o=2;o<n;o++)i[o]=r[o];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}O.displayName="MDXCreateElement"}}]);