@import (reference) '~assets/styles/shared';

.MarketViewBorders {
  border: @size-1 solid @color-dark-grey;
  border-radius: @size-1;
}

.MarketView {
  display: flex;
  flex-direction: column;
  flex-grow: 1;

  &.Inactive {
    pointer-events: none;
    min-width: 100%;
    padding-bottom: 40px;
  }

  > span:first-of-type {
    background: fade(@color-dark-grey, 50%);
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    position: absolute;
    z-index: @mask-obscure;
  }
}

.BackButton {
  padding: 0 @size-12 0 0;

  > svg {
    height: @size-8;
    margin-left: @size-16;
    width: @size-4;

    > path {
      stroke: @color-primary-text;
    }
  }
}

.PaneContainer {
  flex: 1;
  padding: @size-8 @size-4;

  > h1 {
    display: none;
  }
}

.container {
  display: grid;
  margin: @size-4 @size-6;
  min-height: calc(~'100vh - @{multi-top-bar-height}');
  grid-gap: @size-2 @size-4;
  grid-template-columns: minmax(250px, 325px) minmax(0%, 1fr) minmax(250px, 325px);
  grid-template-rows: 0fr 0fr 0fr 0fr 50vh;

  div[class*="module-tabs-style_Headers"] {
    background: @color-dark-grey;

    > button[class*="buttons-styles_ToggleExtendButton"] {
      margin-left: 0;
      min-width: @size-30;
      justify-content: center;
    }
  }

  @media all and (max-height: 700px) {
    min-height: 700px;
  }

  @media @breakpoint-tablet {
    grid-gap: @size-4;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 0fr 0fr 0fr 0fr 50vh;
    //  hide the toggle buttons because the layout doesn't allow them to do anything useful.
    button[class*="buttons-styles_ToggleExtendButton"] {
      display: none;
    }
  }

  &.Tutorial {
    min-height: calc(~'100vh - @{multi-top-bar-height} - @{tutorial-banner-height}');
  }
}

.Header {
  grid-column: 1 / span 2;
  grid-row: 1;

  @media @breakpoint-tablet {
    grid-column: 1 / span 3;
  }
}

.TradingForm {
  grid-column: 1;
  grid-row-start: 2;
  grid-row-end: -1;
  display: flex;
  flex-flow: column nowrap;

  @media @breakpoint-tablet {
    grid-row-start: 4;
    grid-row-end: 4;
  }

  > section:first-of-type {
    .MarketViewBorders;
  }
}

section[class*="OutcomesList"] {
  .MarketViewBorders;

  grid-column: 2;
  grid-row: 2;

  @media @breakpoint-tablet {
    grid-column: 1 / span 3;
  }

  @media @breakpoint-mobile {
    grid-column-start: 1;
    grid-column-end: -1;
  }

  > h3 {
    color: @color-primary-text;
  }
}

.ChartsPane {
  .MarketViewBorders;

  grid-column: 2;
  grid-row: 3;

  @media @breakpoint-tablet {
    grid-column: 1 / span 3;
  }
}

.OrdersPane {
  .MarketViewBorders;

  grid-column: 2;
  grid-row-start: 4;
  grid-row-end: -1;

  @media @breakpoint-tablet {
    grid-column: 1 / span 3;
    grid-row-start: 5;
    grid-row-end: 5;
  }


  > div {
    height: 100%;
  }
}

.OrderBookAndHistory {
  grid-column: 3;
  grid-row-start: 1;
  grid-row-end: -1;
  display: flex;
  flex-flow: column nowrap;
  height: 100%;

  @media @breakpoint-tablet {
    grid-column: 2 / span 2;
    grid-row: 4;
    overflow: auto;
    flex-flow: row nowrap;
  }

  > div {
    display: flex;
    flex-flow: column nowrap;
    flex: 1;

    &:not(.Hide) {
      max-height: 50%;

      @media @breakpoint-tablet {
        max-height: unset;
      }
    }
  }

  > div:first-of-type {
    margin-bottom: @size-2;

    &:not(.hide) {
      max-height: 53%;

      @media @breakpoint-tablet {
        max-height: unset;
      }
    }

    > section:first-of-type {
      .MarketViewBorders;
    }

    @media @breakpoint-tablet {
      margin-bottom: 0;
    }
  }

  > div:last-of-type {
    .MarketViewBorders;

    @media @breakpoint-tablet {
      margin-left: @size-4;
    }
  }
}

.HeaderTutorial,
.OrderBookTutorial,
.TradingFormTutorial {
  position: relative;

  > section:first-of-type {
    z-index: @mask-illuminate;
  }
}

.HeaderTutorial {
  > section:last-of-type {
    top: calc(100% - 32px);
  }
}

.TradingFormTutorial {
  > section:last-of-type {
    left: unset;
    right: -100%;
    top: 0;
    margin-right: @size-16;
  }

  &.PlaceOrderTutorial {
    > section:last-of-type {
      top: 320px;
    }

    > section:first-of-type > section > div:nth-of-type(2) {
      pointer-events: all;
    }
  }

  &.SelectOutcomeTutorial {
    > section:first-of-type > section > div:first-of-type > div > div {
      pointer-events: all;
    }

    > section:last-of-type {
      margin-top: @size-32;
    }
  }

  &.BuyingSharesTutorial {
    > section:last-of-type {
      margin-top: -@size-12;
    }
  }

  &.QuantityTutorial {
    > section:first-of-type > section > div:first-of-type > div > ul > li:first-of-type {
      pointer-events: all;
    }

    > section:last-of-type {
      margin-top: 95px;
    }
  }

  &.LimitPriceTutorial {
    > section:first-of-type > section > div:first-of-type > div > ul > li:nth-of-type(2) {
      pointer-events: all;
    }

    > section:last-of-type {
      margin-top: 155px;
    }
  }

  &.OrderValueTutorial {
    > section:last-of-type {
      margin-top: 220px;
    }
  }
}

.OrderBookTutorial {
  > section:last-of-type {
    left: -100%;
    top: 0;
  }
}

.OpenOrdersTutorial,
.FillsTutorial,
.PositionsTutorial {
  position: relative;
  z-index: @mask-illuminate;


  > section:last-of-type {
    top: 0;
  }
}

.OpenOrdersTutorial {
  > section:last-of-type {
    margin-top: -350px;
  }
}

.FillsTutorial {
  > section:last-of-type {
    left: 100px;
    margin-top: -180px;
  }
}

.PositionsTutorial {
  > section:last-of-type {
    left: 200px;
    margin-top: -190px;
  }
}

.Orders {
  display: flex;
  flex-direction: column;
}

.hide {
  height: 2rem !important;
  max-height: 2rem !important;
  overflow: hidden;
}

.show {
  max-height: 100% !important;
}

.History,
.Orders {
  transition: max-height 0.2s ease;
}

.PriceHistory {
  background-color: @color-module-background;
  border: 1px solid @color-dark-grey;
  border-radius: 1px;

  > h3 {
    .text-16;

    background-color: @color-module-background;
    border-bottom: 1px solid @color-dark-grey;
    color: @color-primary-text;
    padding: 1.125rem 1rem;
  }
}

.Comments {
  display: grid;
  margin: @size-4 @size-6;
  grid-gap: @size-2 @size-4;
  grid-template-columns: minmax(250px, 325px) minmax(0%, 1fr) minmax(250px, 325px);

  > button {
    grid-column: 2;
    margin: @size-50 auto @size-52;
  }

  > div {
    grid-column: 2;
    margin: @size-32 0 @size-24;
    max-width: 100%;
    width: 100%;

    button {
      padding: @size-1 @size-7 @size-2;
    }

    textarea {
      margin-left: 0;
      min-width: 100%;
    }

    img[class="input_user"] {
      left: @size-8;

      @media @breakpoint-mobile {
        left: 0;
      }
    }

    div[class="inputPicker"] {
      right: @size-8;
    }

    div[class="context"] {
      justify-content: flex-end;

      > div {
        .text-14-bold;
      }
    }

    div[class="comment_content_context"] {
      margin-bottom: @size-8;
    }

    div[class="comment_content_context_main_user_info_username"] {
      .text-16-bold;

      color: @color-primary-text;
    }

    div[class="comment_content_context_main_user_info_address"] {
      .text-14;

      color: @color-secondary-text;
      padding-bottom: 0;
    }

    div[class="comment_content_context_main"] {

    }

    div[class="comment_content_context_time"] {
      .text-10;

      color: @color-secondary-text;
    }

    div[class="comment_content_text"] {
      .text-14;

      color: @color-primary-text;
    }

    div[class*="sc-user-input--picker-wrapper"] {
      // component is using "!important", leaving me no choice but to use it as well
      padding: 0 !important;
      width: auto;
    }

    svg,
    svg[class*="sc-user-input--emoji-icon"] path,
    svg[class*="sc-user-input--emoji-icon"] circle,
    svg[class="comment_content_context_main_user_delete_button_icon"] path {
      fill: @color-primary-text;
      opacity: 1;

      @media all and (max-width: 600px) {
        fill: @color-dark-text;
        opacity: 1;
      }
    }

    div[class*="sc-user-input--picker-wrapper inlinePicker"]:hover {
      path,
      circle {
        fill: @color-dark-text;
      }
    }

    svg[class="comment_control_mobile_icon"] circle {
      fill: @color-secondary-text;
      opacity: 1;
    }

    button[class*="vote_btn"]:hover {
      svg[class*="upvote"] {
        fill: @color-upvote;
        opacity: 1;
      }

      svg[class*="downvote"] {
        fill: @color-downvote;
        opacity: 1;
      }
    }

    button[class="sc-user-input--emoji-icon-wrapper"] svg {
      padding: @size-1 0;
    }

    button[class="comment_content_context_main_user_reply_button"] {
      .text-12;

      &:hover {
        svg {
          fill: @color-dark-text;
        }
      }
    }

    svg[class="comment_content_context_main_user_reply_button_icon"] {
      padding: 0 0 @size-2;
    }

    div[class*="sc-user-input--picker-wrapper"]:hover {
      svg {
        fill: @color-dark-text;
      }
    }

    input[class="sc-popup-window--search"] {
      color: @color-primary-text;
      background-color: #fff;

      &:focus {
        border: none;
      }
    }

    div[class="reactions"] div[class="emoji-bar"] div[class*="emoji-item"] {
      background-color: transparent;
      color: @color-upvote;

      &[class*="has_reacted"] {
        background-color: fade(@color-upvote, 20%);
      }
    }

    div[class="comment_vote"] {
      div[class*="positive"] {
        color: @color-upvote;
      }

      div[class*="negative"] {
        color: @color-downvote;
      }

      button[class*="vote_btn"] {
        svg[class*="vote_icon"] {
          opacity: 1;
        }

        svg[class*="vote_icon upvote voted"] {
          fill: @color-upvote;
        }

        svg[class*="vote_icon downvote voted"] {
          fill: @color-downvote;
        }
      }
    }

    div[class*="isDeletedComment"] {
      background-color: @color-module-background;
      border-color: @color-module-background;

      p {
        .text-14;

        color: @color-primary-text;
      }
    }

    div[class="comments_footer"] {
      margin: @size-40 auto;

      > span {
        color: @color-secondary-text;

        svg {
          width: auto;

          path {
            fill: @color-secondary-text;
          }
        }
      }
    }

    div[class="dialogue_button_container"] {
      height: auto;

      button {
        .text-14-bold;

        background-color: transparent;
        border: @size-1 solid @color-secondary-text;
        border-radius: @size-3;
        color: @color-primary-text;
        padding: @size-12 auto;
        width: 100%;
      }
    }
  }
}

.Hide {
  height: @size-32;
  max-height: @size-32;
  min-height: @size-32;
  overflow-y: hidden;
}

div.OutcomeNameDisplay {
  .text-12;

  align-items: center;
  background: @color-dark-grey;
  border: 1px solid @color-secondary-action-outline;
  border-radius: @border-radius-default;
  color: @color-primary-text;
  display: flex;
  flex-flow: row nowrap;
  height: @size-40;
  padding: 0 @size-16;
  z-index: @mask;
}

@media @breakpoint-mobile-tablet {
  .OutcomeSelectionArea {
    padding: @size-12;
    width: 100%;
    background: @color-module-background;
    position: fixed;
    z-index: @mask-above;
    left: 0;
    top: 112px;

    > h1 {
      .text-14-bold;

      color: @color-primary-text;
      margin-bottom: @size-8;
    }
  }

  .TradesMobile {
    padding-top: 116px;

    > div,
    > section {
      border: 1px solid @color-dark-grey;
      border-radius: 1px;
    }
  }

  .PaneContainer {
    display: grid;
    grid-gap: @size-8 0;
    grid-template-rows: min-content;

    > h1 {
      .text-14-bold;

      color: @color-primary-text;
      display: block;
      margin: 0;
      padding: @size-12;
      background: @color-module-background;
      border: 1px solid @color-dark-grey;
      border-radius: 1px;
      word-break: break-word;
    }

    > div:last-of-type {
      margin-top: 0;
      border: 1px solid @color-dark-grey;
      border-radius: 1px;
    }
  }

  .Orders {
    max-height: 50vh;
    margin-bottom: 0;
    border-bottom: 1px solid @color-dark-grey;
    border-left: 1px solid @color-dark-grey;
    border-right: 1px solid @color-dark-grey;
  }

  .History {
    background: @color-module-background;
    margin-bottom: 0;
    max-height: unset;
  }

  .MarketView {
    height: unset;
  }

  .BackButton {
    > svg {
      height: 0.75rem;
      margin-left: @size-14;
      width: 0.5rem;
    }
  }

  .PriceHistory > h3 {
    .mono-11-bold;

    text-transform: uppercase;
    padding: @size-12 @size-16;
    background: @color-dark-grey;
  }

  .Comments {
    padding: @size-40 @size-12 @size-12;
    grid-template-columns: 1fr;

    > div, > button {
      grid-column: 1;
    }
  }
}
