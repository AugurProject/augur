@import (reference) "~assets/styles/shared";
// fixes an issue with firefox advanced dropdown...
@supports (-moz-appearance:none) {
  .TradingForm > ul > li.AdvancedShown > div:first-of-type > div:first-of-type {
    width: unset;
  }
}

.TradingForm {
  > ul {
  padding: @size-12 @size-12 0;

    > li {
      color: @color-primary-text;
      display: flex;
      flex-flow: column nowrap;
      width: 100%;

      &.yesOption {
        padding: @size-16 @size-32;
      }

      > div.TradingFormInputContainer {
        max-height: @size-32;
        min-height: @size-32;
        background-color: @color-dark-grey;

        > span {
          .mono-10-semi-bold;

          max-height: @size-32;
          min-height: @size-32;
          padding: @size-10 @size-10 @size-10 0;
        }

        > input {
          .mono-14-medium;

          max-height: @size-30;
          min-height: @size-30;
          padding: 0 @size-12;
          background-color: @color-dark-grey;
        }
      }

      &:not(:nth-of-type(4)) {
        margin-bottom: @size-12;

        > label {
          .mono-10-medium;

          color: @color-secondary-text;
        }
      }

      &:nth-of-type(1) {
        display: grid;
        grid-template-columns: auto auto;

        > label:nth-of-type(2) {
          display: flex;
          justify-content: flex-end;
        }

        > div {
          grid-column: 1 / span 2;
        }
      }

      &:nth-of-type(3) {
        margin-bottom: @size-8;
      }

      // 25%, 50%, 75%, 100%, Clear button
      &:nth-of-type(4) {
        align-items: center;
        border: none;
        flex-direction: row;
        min-height: @size-22;
        display: flex;
        flex: 1;

        > button {
          .mono-10-bold;

          min-height: @size-22;
          padding: @size-3 @size-6;

          &:hover {
            background: @color-secondary-hover;
          }
        }

        > button:not(:first-of-type) {
          margin-left: @size-4;
        }

        // Clear button
        > button:last-of-type {
          margin-left: auto;
        }

        > label {
          .mono-10-bold;

          color: @color-primary-text;
          margin-bottom: 0;
          padding: 0;
          margin-left: @size-22;
          margin-top: @size-1;
          text-transform: uppercase;
        }
      }

      &:nth-of-type(4),
      &:nth-of-type(5) {
        > label {
          align-items: center;
          text-transform: uppercase;
          border: none;
          display: flex;

          > svg {
            margin-right: @size-6;
          }
        }
      }

      // Advanced order dropdown
      &:nth-of-type(6) {
        margin: @size-12 0;
        width: min-content;

        > button {
          .mono-10-semi-bold;

          min-height: @size-22;
          padding: @size-3 @size-6;

          &:hover {
            background: @color-secondary-hover;

            > svg > path {
              stroke: @color-primary-text;
            }
          }
        }
      }

      // Used in TradingForm
      &.AdvancedShown {
        display: grid;
        grid-gap: @size-8 @size-4;
        grid-template-columns: repeat(2, auto) 1fr;
        grid-template-rows: auto;
        width: 100%;

        > span {
          .mono-10-medium;

          color: @color-primary-text;
          grid-row: 2;
          grid-column: 1 / span 3;
          text-align: right;
        }

        > span.tipText {
          .mono-10-medium;

          color: @color-secondary-text;
          text-align: left;
        }

        > div[class*="TextInput"] {
          max-width: 100%;

          > button {
            background: @color-secondary-action;

            > span {
              padding: @size-6 @size-8 @size-6 0;

              @media @breakpoint-mobile {
                padding: @size-5 @size-8 @size-5 0;
              }
            }
          }
        }

        // Order expiration dropdown
        > div[class*="Normal"] {
          height: @size-24;

          > button > span {
            padding: @size-5 @size-8 @size-5 0;
          }
        }

        // Order expiration date options
        > div:nth-of-type(2):not([class*="Normal"]) {
          display: inline-flex;
          grid-column: 3;
          justify-self: end;

          // Day input
          > div[class*="TextInput"] {

            > div > input {
              .mono-12;

              min-width: @size-44;
              width: @size-44;
              height: @size-24;
              margin-right: @size-4;
              padding: 0 @size-8;
              border: @size-1 solid @color-secondary-action;

              &:hover {
                border: @size-1 solid @color-secondary-action-outline;
              }

              &:focus-within {
                border: @size-1 solid @color-secondary-action-outline;
              }
            }
          }

          > div[class*="Normal"] {
            height: @size-24;

            > button > span {
              padding: @size-5 @size-8 @size-5 0;
            }
          }
        }

        > div[class*="DateTimeSelector"] {
          grid-row: 2;
          grid-column: 2 / span 2;
          margin-left: @size-4;

          > span {
            display: grid;
            grid-gap: @size-4;
            grid-template-columns: auto auto;
            margin: 0;

            > div[class*="DatePicker"] {
              margin-right: 0;

              > div > div > div > div[class*="DateInput_1"] {
                width: 100%;

                // Select Date
                > input[class*="DateInput_input"] {
                  .mono-10-bold;

                  height: @size-22;
                  width: 100%;
                  cursor: pointer;
                  color: @color-primary-text;
                  background: @color-secondary-action;
                  border: @size-1 solid @color-secondary-action-outline;

                  &:hover {
                    background: @color-secondary-hover;
                  }
                  &:focus {
                    background: @color-secondary-hover;
                  }
                }
              }
            }

            // Select Time
            > div[class*="TimeSelector"] {
              margin-right: 0;

              > button {
                .mono-10-bold;

                height: @size-22;
                color: @color-primary-text;
                background: @color-secondary-action;
                border: @size-1 solid @color-secondary-action-outline;
                padding: @size-2;

                &:hover {
                  background: @color-secondary-hover;
                }
                &:focus {
                  background: @color-secondary-hover;
                }
              }
            }

            // Select Timezones
            > section[class*="Timezones"] {
              grid-column: 1 / span 2;

              > div[class*="TextInput"] > div > input {
                .mono-10-bold;

                height: @size-22;
                width: 100%;
                color: @color-primary-text;
                background: @color-secondary-action;
                border: @size-1 solid @color-secondary-action-outline;

                &:hover {
                  background: @color-secondary-hover;
                }
                &:focus {
                  background: @color-secondary-hover;
                }
              }
            }
          }
        }
      }

      > label {
        color: @color-inactive-text;
        margin-bottom: 0;
        padding-bottom: @size-4;
        width: 100%;

        &.smallLabel {
          .mono-10-medium;

          color: @color-primary-text;
          padding-top: @size-12;
          text-transform: none;

          > svg {
            height: @size-12;
            width: @size-12;

            > circle {
              opacity: 1;
              stroke: @color-primary-text;
              fill: none;
            }

            > rect {
              fill: @color-primary-text;
            }

            > path {
              fill: @color-primary-text;
            }
          }
        }

        &.Liquidity {
          margin: @size-4 0 @size-12 0;

          > svg {
            height: @size-12;
            width: @size-12;

            > circle {
              opacity: 1;
              stroke: @color-primary-text;
              fill: none;
            }

            > rect {
              fill: @color-primary-text;
            }

            > path {
              fill: @color-primary-text;
            }
          }
        }
      }
    }
  }
}

.ErrorContainer {
  background: fade(@color-error, 20%);
  border: 1px solid @color-error;
  border-radius: 3px;
  box-sizing: border-box;
  display: block;
  font-size: @size-12;
  line-height: @size-14;
  margin: @size-16;
  padding: @size-13 @size-8;
}

.Error {
  .mono-10-bold;

  align-items: center;
  color: @color-primary-text;
  margin-bottom: @size-4;
  text-transform: uppercase;
  display: grid;
  grid-gap: @size-8;
  grid-template-columns: @size-12 auto;
  grid-template-rows: auto;

  &:last-of-type {
    margin-bottom: 0;
  }

  > svg {
    height: @size-12;
    vertical-align: text-bottom;
    width: @size-12;

    > circle {
      fill: fade(@color-error, 20%);
      opacity: 0.5;
      stroke: @color-error;
    }

    > rect {
      fill: @color-error;
    }

    > path {
      fill: @color-error;
    }
  }
}

.ErrorClickable {
  .Error;

  > span:nth-of-type(2) {
    .text-11;

    color: @color-primary-text;
    grid-column: 2;
    text-transform: none;
  }

  > div {
    grid-column: 2;
    display: flex;
    flex: 1;

    > button {
      width: 100%;
      border: 1px solid @color-primary-text;

      &:hover {
        background: fade(@color-primary-text, .15);
      }

      &:first-of-type {
        margin-right: @size-8;
      }
    }
  }
}

.Outcome {
  padding: @size-12 @size-12 0;

  > div > button {
    .text-12-medium;
  }
}

.Yes {
  .text-14-medium;

  background-color: @color-secondary-action;
  border: 1px solid @color-secondary-action-outline;
  border-radius: @border-radius-default;
  padding: @size-10 @size-10 @size-10 @size-16;

  > span {
    .mono-11;

    color: @color-inactive-text;
    text-transform: uppercase;
  }
}

.TradingFormInput {
  display: flex;
  flex-grow: 1;
  padding: @size-10 @size-12;
  width: auto;
  border-radius: @size-3;
  line-height: normal;
}

.TradingFormInputContainer {
  .mono-11;

  align-items: center;
  background-color: @color-secondary-action;
  border: @size-1 solid @color-secondary-action;
  display: flex;
  flex-direction: row;
  border-radius: @border-radius-default;

  > input[type="number"] {
    background-color: @color-secondary-action;
    border-width: 0;
    color: @color-primary-text;

    &::placeholder {
      color: fade(@color-primary-text, 20%);
    }
  }

  &.error {
    border: @size-1 solid fade(@color-error, 50%);

    &:focus-within,
    &:focus {
      border: @size-1 solid fade(@color-error, 50%);
    }
  }

  > span {
    .mono-10;

    color: @color-secondary-text;
    overflow: hidden;
    padding: @size-10 @size-12;
    text-align: right;
    text-overflow: ellipsis;
    text-transform: uppercase;
    white-space: nowrap;

    &.isScalar_smallText {
      font-size: @size-9;
    }

    &.isScalar_largeText {
      font-size: @size-11;
    }
  }

  > label {
    color: @color-inactive-text;
    font-size: @size-12;
  }

  &:hover {
    border: @size-1 solid @color-secondary-action-outline;
  }

  &:focus-within {
    border: @size-1 solid @color-secondary-action-outline;

    > input {
      border: 0;
    }
  }
}

@media @breakpoint-mobile {
  .Outcome {
    margin: @size-12 0;
    padding-bottom: 0;
    padding-top: 0;
  }

  .TradingFormInputContainer {
    > span {
      font-size: @size-10;
    }

    > input[type="number"] {
      font-size: @size-12;

      &::placeholder {
        font-size: @size-12;
      }
    }
  }

  .TradingForm__error_message {
    > svg {
      fill: none;
      height: @size-16;
      width: @size-16;

      > circle {
        stroke: @color-secondary-action-outline;
        fill: @color-secondary-action;
      }
    }
  }
}

.Ether {
  > svg {
    fill: @color-secondary-text;
  }
}
