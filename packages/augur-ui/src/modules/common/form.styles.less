@import (reference) '~assets/styles/shared';

.CategoryMultiSelect {
  display: flex;
  flex-flow: column;

  > li {
    margin-top: @size-12;
    display: grid;
    grid-row: @size-44;

    > div:nth-of-type(2) {
      margin-left: @size-12;
    }

    &:first-of-type {
      margin-top: 0;
      grid-template-columns: 252px 264px;
    }

    &:nth-of-type(2) {
      grid-template-columns: @size-24 252px 252px;
    }

    &:nth-of-type(3) {
      grid-template-columns: @size-24 @size-24 252px 230px @size-16;

      > svg {
        grid-column: 2 / span 1;
        height: @size-32;
        margin: 0;
      }

      > div {
        width: unset;

        > div {
          min-width: unset;
        }
      }

      > button {
        z-index: @above-all-content;
        max-width: @size-32;

        > svg {
          height: @size-10;
          width: @size-10;

          > path {
            stroke: @color-primary-text;
          }
        }
      }
    }

    > svg {
      height: @size-10;
      margin: auto;
      width: @size-10;

      > line {
        stroke: @color-secondary-text;
      }
    }

    > div,
    > div[class*='Normal'] {
      min-width: 252px;
      width: 252px;
    }

    > div[class*='TextInput'] {
      position: relative;
      align-items: flex-start;
    }
  }

  @media @breakpoint-mobile {
    > li {
      > div:nth-of-type(2) {
        margin-left: 0;
      }

      &:first-of-type {
        grid-template-columns: 1fr;
        grid-gap: @size-12;
      }

      &:nth-of-type(2) {
        grid-template-columns: @size-24 auto;
        grid-gap: @size-12;
      }

      &:nth-of-type(3) {
        grid-template-columns: @size-24 @size-24 auto;
        grid-gap: @size-12;

        > svg {
          grid-column: 2 / span 1;
        }

        > button {
          grid-row: 1;
          grid-column: 4;
        }
      }

      > div,
      > div[class*='Normal'] {
        min-width: 100%;
      }

      > div[class*='TextInput'],
      > div[class*='TextInput'] > div {
        min-width: 100%;
      }

      > div[class*='TextInput'] {
        grid-column: 2 / span 1;
      }
    }

    &.CustomPrimary {
      > li:first-of-type {
        > div:nth-of-type(2) {
          grid-column: 1;
        }
      }
    }
    &.CustomTertiary {
      > li:last-of-type {
        > div:last-of-type {
          grid-column: unset;
          > div > input {
            min-width: @size-210;
          }
        }
      }
    }
  }
}

.RadioStyleSelection {
  background: @color-secondary-action;
  border: @size-1 solid @color-secondary-action-outline;
  border-radius: @border-radius-default;

  > h5 {
    .text-14;

    color: @color-primary-text;
  }

  > h5,
  > p {
    overflow: hidden;
    text-overflow: ellipsis;
  }

  &:hover,
  &:focus {
    border: @size-1 solid @color-primary-action;
  }

  &:disabled {
    border: @size-1 solid @color-inactive-text;

    > svg > circle {
      stroke: @color-inactive-text;
    }

    > h5,
    > p {
      color: @color-inactive-text;
    }
  }
}

.LocationDisplay {
  align-items: center;
  border-radius: @border-radius-default;
  border: @size-1 solid @color-secondary-action-outline;
  display: flex;
  justify-content: center;
  padding: @size-16 @size-12;
  margin-bottom: @size-24;

  > span {
    .text-12-bold;

    color: @color-primary-action;
    cursor: default;
    padding: 0 @size-12;
    white-space: nowrap;

    &.Selected {
      color: @color-primary-text;
    }
  }

  > svg {
    min-width: @size-16;
    height: @size-16;

    > path {
      fill: @color-primary-action;
    }
  }

  @media @breakpoint-mobile {
    border: 0;
    padding: 0;
    overflow-x: auto;
    max-width: 100%;
    justify-content: flex-start;
    margin-bottom: @size-18;

    > span:first-of-type {
      padding-left: @size-8;
    }
  }
}

.CheckboxBar {
  .RadioStyleSelection;

  align-items: center;
  display: grid;
  grid-template-rows: auto;
  grid-template-columns: 52px auto @size-16;
  height: 52px;
  width: 304px;

  > svg {
    grid-column: 1;
    grid-row: 1;
    height: @size-20;
    margin: auto;
    width: @size-20;

    > rect {
      stroke: @color-secondary-action-outline;
    }

    > path {
      stroke: @color-primary-text;
    }
  }

  > h5 {
    grid-column: 2;
    grid-row: 1;
    width: 236px;
  }
}

.CheckboxBarChecked {
  > svg > rect {
    fill: @color-secondary-action;
    fill-opacity: 0.3;
  }
}

.RadioBar {
  .RadioStyleSelection;

  align-items: center;
  display: grid;
  grid-template-columns: 52px auto @size-16;
  grid-template-rows: auto;
  margin-bottom: @size-8;
  height: 51px;

  > svg {
    height: @size-20;
    grid-column: 1;
    grid-row: 1;
    margin: auto;

    // EmptyRadio
    > circle:first-of-type {
      stroke: @color-secondary-action-outline;
      fill: none;
    }

    > circle {
      fill: none;
    }
  }

  &:hover {
    > svg {
      > circle:not(:first-of-type) {
        fill: @color-secondary-action-outline;
      }
    }
  }

  > h5 {
    grid-column: 2;
    grid-row: 1;
  }

  // FilledRadio
  &.Checked {
    > svg {
      > circle:first-of-type {
        stroke: @color-secondary-action-outline;
        fill: none;
      }

      > circle {
        fill: @color-primary-text;
      }
    }

    &:hover {
      > svg {
        > circle:not(:first-of-type) {
          fill: @color-primary-text;
        }
      }
    }
  }

  &.MultiSelect {
    height: unset;
    padding: @size-16 0;

    > div {
      margin: auto;
      margin-left: @size-18;
    }
  }

  &.Disabled {
    pointer-events: none;
  }
}

.ReportingRadioBar {
  .RadioBar;

  border-radius: @size-6;
  grid-template-columns: 52px auto;
  grid-template-rows: auto;
  height: auto;

  &.Checked {
    border: @size-1 solid @color-negative;

    > svg {
      > circle:last-of-type {
        fill: @color-negative;
      }
    }
  }

  &.Hide {
    > svg {
      display: none;
    }
  }

  > svg {
    margin-top: @size-16;
  }

  > h5 {
    margin-top: @size-16;
  }

  > div {
    grid-column: 2;
    margin-top: @size-10;
    margin-bottom: @size-12;
    margin-right: @size-48;

    > span:first-of-type {
      .text-14-medium;

      color: @color-primary-text;
      display: flex;
      margin-bottom: @size-12;
      margin-top: @size-16;
    }
  }

  &.Invalid {
    > h5 {
      color: @color-outcome-invalid;
    }
  }

  @media @breakpoint-mobile {
    > div {
      grid-column: 1 / span 3;
      margin-left: @size-16;
      margin-right: @size-16;

      > button {
        width: 100%;
      }

      > div:first-of-type {
        flex-direction: column;

        > span {
          margin-bottom: @size-2;
        }
      }

      > div:nth-of-type(3) {
        max-width: unset;
      }
    }
  }
}

.RadioTwoLineBar {
  .RadioBar;

  cursor: pointer;
  height: unset;
  grid-template-columns: 52px 1fr;
  padding-right: @size-16;


  @media @breakpoint-mobile {
    > svg {
      grid-row: 1 / span 4;
    }
  }

  > svg {
    grid-row: 1 / span 5;
  }

  > h5 {
    .text-14;

    grid-row: 2;
    margin-top: @size-20;

    @media @breakpoint-mobile {
      .text-14;

      margin-top: @size-16;
    }

    &.RenderMarkdown {
      grid-row: 1;
    }
  }

  > span,
  > p {
    .text-14;

    color: @color-secondary-text;
    grid-column: 2;
    grid-row: 4;
    margin: @size-4 0 @size-20;
    padding: 0;
    line-height: 160%;

    @media @breakpoint-mobile {
      .text-12;

      white-space: normal;
      margin-bottom: @size-16;
    }
  }

  &.HideRadioButton {
    grid-template-columns: @size-16 1fr;
    grid-template-rows: 1fr;
    height: 68px;

    > p {
      .text-12;

      width: unset;
      margin: @size-4 0 @size-16;
    }

    > h5 {
      margin-top: @size-16;
    }

    @media @breakpoint-mobile {
      width: unset;
    }
  }

  &.Checked {
    border: @size-2 solid @color-primary-action;
  }
}

.RadioBarGroup {
  display: flex;
  flex: 1;
  flex-direction: column;
}

.ReportingRadioBarGroup {
  display: flex;
  flex-direction: column;
  flex: 1;

  > section > span,
  > span {
    display: flex;
  }

  > section > span:first-of-type,
  > span:first-of-type {
    .text-14-medium;

    color: @color-primary-text;
    margin-bottom: @size-8;
  }

  > span:nth-of-type(2),
  > span:nth-of-type(3),
  > section > span:nth-of-type(2) {
    .text-12;

    color: @color-secondary-text;
    margin-bottom: @size-12;
  }

  > span:nth-of-type(3) {
    margin-top: @size-16;
  }

  > section {
    border-bottom: @size-1 solid @color-secondary-action-outline;
    margin-bottom: @size-32;
    padding-bottom: @size-32;
  }

  > section:nth-of-type(2) {
    border-bottom: @size-1 solid @color-error;
    padding-bottom: @size-16;

    > svg {
      width: @size-13;
      height: @size-13;
    }
  }
}

.RadioBarExpanded {
  grid-template-columns: 52px auto;
  grid-template-rows: auto;
  height: auto;

  > svg {
    grid-row: 1 / span 20;
    margin: 0 auto;
  }

  > h5 {
    grid-row: unset;
    margin-bottom: @size-10;
    margin-top: @size-20;

    &:nth-of-type(2) {
      color: @color-secondary-text;
      margin-top: @size-16;
    }
  }

  > div {
    width: @size-210;

    &:last-of-type {
      margin-bottom: @size-20;
    }
  }
}

.RadioBarError {
  background: @color-dark-grey;
  border: @size-1 solid @color-error;
}

.RadioCardGroup {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-row-gap: 20px;

  > div:not(:last-of-type) {
    margin-right: @size-20;
  }

  @media @breakpoint-mobile {
    grid-template-columns: repeat(1, 1fr);
    grid-row-gap: @size-8;

    > div:not(:last-of-type) {
      margin-right: 0;
    }
  }
}

.Additional {
  display: flex;
  justify-content: left;
  text-align: left;

  > p {
    > span {
      padding-right: 0.25rem;
    }
  }

  @media @breakpoint-mobile {
    justify-content: center;
  }
}

.RadioCard {
  .RadioStyleSelection;

  cursor: pointer;
  display: grid;
  grid-template-rows: @size-20 auto auto auto;
  grid-template-columns: 100%;
  max-height: 230px;
  max-width: @size-210;
  min-height: 154px;
  min-width: @size-210;
  border: @size-1 solid transparent;
  box-shadow: 0 0 0 @size-1 @color-secondary-action-outline;

  &.hover,
  &.active {
    border: @size-4 solid transparent;
    box-shadow: 0 0 0 @size-1 @color-primary-action;
  }

  @media @breakpoint-mobile {
    min-height: 75px;
    max-width: 100%;
    grid-template-columns: 65px auto;
    grid-template-rows: @size-20 @size-20 auto;
    border: @size-4 solid transparent;
  }

  > div {
    border-radius: @border-radius-default;
    display: flex;
    bottom: 5%;
    left: calc(~'100% - @{size-18}');
    align-items: center;
    justify-content: center;
    position: relative;
    height: @size-20;
    width: @size-20;
    background: @color-primary-action;
    visibility: hidden;
    opacity: 0;

    @media @breakpoint-mobile {
      grid-column: 2;
      grid-row: 1;
      left: calc(~'100% - @{size-18}');
    }

    > svg {
      height: @size-16;
      width: @size-16;

      > path {
        stroke: @color-secondary-action;
      }
    }
  }

  > svg {
    height: @size-40;
    width: @size-40;
    margin: @size-4 auto 0;

    @media @breakpoint-mobile {
      align-self: center;
      justify-self: center;
      grid-column: 1;
      grid-row: span 3;
      margin: 0;
      height: unset;
      width: @size-32;
    }

    > circle {
      fill: @color-primary-action;
    }
  }

  > h5 {
    .text-16-bold;

    margin: @size-16 @size-12 0;
    text-align: center;
    text-transform: capitalize;

    @media @breakpoint-mobile {
      grid-column: 2;
      grid-row: 2;
      margin: 0;
      text-align: left;
    }
  }

  > p {
    .text-14;

    color: @color-secondary-text;
    line-height: @size-18;
    margin: @size-12 0 @size-24;
    text-align: center;

    @media @breakpoint-mobile {
      grid-column: 2;
      grid-row: 3;
      margin: 0 @size-4 @size-16 0;
      text-align: left;
    }
  }

  &.CustomIcon {
    > svg {
      width: @size-40;
      height: @size-40;

      > path {
        stroke: @color-primary-text;
      }

      @media @breakpoint-mobile {
        margin: @size-13;
      }
    }
  }

  &.InverseFill {
    svg {
      > path {
        stroke: unset;
        fill: @color-primary-text;
      }
    }
  }

  &.EmptyIcon {
    svg {
      > circle {
        fill: unset;
      }
    }
  }
}

.RadioCardActive {
  border: @size-4 solid @color-primary-action;

  > div {
    visibility: visible;
    opacity: 1;
  }

  > svg {
    @media @breakpoint-mobile {
      align-self: center;
      justify-self: center;
      grid-column: 1;
      grid-row: span 3;
      height: @size-24;
      margin: @size-20 @size-8;
      width: @size-24;
    }
  }

  &:hover,
  &:focus {
    border: @size-4 solid @color-primary-action;
  }
}

.Checkbox {
  cursor: pointer;
  display: block;
  font-size: @size-22;
  margin-bottom: @size-8;
  position: relative;
  top: 0;
  user-select: none;

  > input {
    visibility: hidden;
  }

  > span {
    background-color: transparent;
    border: @size-1 solid @color-primary-text;
    border-radius: @border-radius-default;
    height: @size-16;
    left: 0;
    position: absolute;
    top: 0;
    width: @size-16;

    &:focus {
      outline: none;
    }

    > svg {
      display: none;
      height: @size-9;
      left: @size-2;
      position: absolute;
      top: @size-2;
      width: @size-11;

      > path {
        stroke: @color-primary-text;
      }
    }
  }
}

.Checkbox:hover input ~ span {
  filter: brightness(95%);
}

.Checkbox input:checked ~ span {
  background: transparent;
  border: @size-1 solid @color-primary-text;

  > svg {
    display: block;
  }
}

.CheckboxSmall {
  margin-bottom: 0;
}

.CheckmarkSmall {
  height: @size-16;
  width: @size-16;

  @media @breakpoint-mobile {
    height: @size-24;
    width: @size-24;
  }
}

.TextInput {
  display: flex;
  flex-direction: column;

  > div {
    align-items: center;
    display: flex;
    position: relative;

    > input,
    > textarea {
      .text-14;

      background-color: @color-dark-grey;
      border-radius: @border-radius-default;
      border: @size-1 solid @color-secondary-action;
      color: @color-primary-text;
      height: @size-44;
      min-width: @size-150;

      &::placeholder {
        color: @color-secondary-text;
        opacity: 0.75;
      }

      &:hover {
        border: @size-1 solid @color-secondary-action-outline;
        cursor: pointer;
      }

      &:focus {
        border: @size-1 solid @color-secondary-action-outline;
      }

      &:disabled {
        background-color: @color-dark-grey;
        border: @size-1 solid @color-inactive-text;
        color: @color-inactive-text;

        &::placeholder {
          color: @color-inactive-text;
        }
      }
    }

    > div.AutoCompleteList {
      background-color: @color-primary-text;
      border-radius: @border-radius-default;
      display: none;
      position: absolute;
      right: 0;
      top: 106%;
      width: min-content;
      z-index: @mask;

      &.OpenTop {
        top: unset;
        bottom: @size-24;
      }

      &.active {
        display: block;
        max-height: @size-400;
        overflow-x: hidden;
        overflow-y: auto;
      }

      > button {
        .text-10;

        color: @color-dark-grey;
        height: @size-32;
        line-height: @size-12;
        padding: @size-10 @size-12;
        position: relative;
        text-align: left;
        transition: background-color 0.15s ease;
        white-space: nowrap;
        width: 100%;

        &:hover {
          background-color: fade(@color-primary-action, 20%);
        }

        &::before {
          background-color: fade(@color-primary-action, 10%);
          bottom: 0;
          content: '';
          height: @size-1;
          left: @size-12;
          position: absolute;
          right: @size-12;
        }
      }
    }

    > .Trailing,
    > .Inner {
      .text-14;

      color: @color-secondary-text;
    }

    @media @breakpoint-mobile {
      .Hide {
        display: none;
      }
    }

    > .Inner {
      position: absolute;
      margin-right: @size-10;
      right: 0;
    }

    > span:nth-of-type(2) {
      margin-left: @size-24;
    }

    > .Trailing {
      margin-left: @size-12;
      white-space: nowrap;
    }

    input[type='number']::-webkit-inner-spin-button,
    input[type='number']::-webkit-outer-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }

    > textarea {
      min-height: @size-88;
    }

    > input {
      min-width: @size-210;
    }
  }

  @media @breakpoint-mobile {
    > div > input {
      min-width: unset;
    }
  }
}

.FormDropdown {
  display: flex;
  flex-direction: column;

  > div {
    .text-14;

    background-color: @color-dark-grey;
    border-radius: @border-radius-default;
    border: @size-1 solid @color-module-background;
    min-width: @size-210;
    min-height: @size-44;
    max-width: unset;

    > div {
      left: 0;
      right: 0;
    }

    > button {
      .text-14;

      background-color: transparent;

      > span {
        color: @color-secondary-text;
        text-transform: capitalize;
      }

      > svg {
        min-width: @size-10;

        > path {
          stroke: @color-secondary-text;
        }
      }

      &:hover {
        background-color: transparent;
      }
    }

    > button[class*='SelectedLabel'] {
      color: @color-primary-text;

      > span {
        color: @color-primary-text;
      }
    }

    > div {
      right: unset;
    }

    &:hover {
      background-color: @color-dark-grey;
      border: @size-1 solid @color-primary-action;
      cursor: pointer;
    }

    &.disabled {
      background-color: @color-dark-grey;
      border: @size-1 solid @color-inactive-text;
      color: @color-inactive-text;
      opacity: 0.5;
    }

    &.error {
      border: @size-1 solid fade(@color-error, 50%);
    }
  }
}

div.FormDropdownActive {
  > button {
    background-color: transparent;
    color: @color-primary-text;

    &:hover {
      background-color: transparent;
    }
  }

  &:hover {
    background-color: @color-dark-grey;
    border: @size-1 solid @color-primary-text;
    color: @color-primary-text;
  }
}

.Input {
  background-color: @color-primary-text;
  border: @size-1 solid @color-primary-text;
  display: flex;

  button,
  .input-value-comparison {
    background-color: @color-primary-text;
    font-weight: @weight-medium;
  }

  input {
    border: @size-1 solid transparent;
    display: flex;
    flex: 1;
  }

  input::placeholder {
    color: @color-primary-text;
  }

  input:focus {
    border: @size-1 solid transparent;
  }

  &:focus-within {
    border: @size-1 solid @color-primary-text;
  }

  .box {
    font-size: inherit;
    padding: @size-16;
    width: 100%;

    &.search-input {
      padding-left: 0;
    }
  }

  .close {
    background-color: transparent;
    height: @size-16;
    line-height: @size-16;
    width: @size-16;

    > svg > path {
      stroke: @color-inactive-text;
    }

    @media @breakpoint-mobile {
      max-height: @size-24;
      min-height: @size-24;
      min-width: @size-24;
    }
  }
}

.noFocus {
  &:focus-within {
    border: @size-1 solid transparent;
  }
}

.Max {
  .text-10-medium;

  color: @color-inactive-text;
  padding: 0 @size-16;
  text-transform: capitalize;
}

button.MaxDark {
  background-color: @color-primary-text;
}

.Incremental {
  background-color: @color-primary-text;
  border: @size-1 solid transparent;
  display: flex;

  .box {
    font-size: inherit;
    padding: @size-16;
    width: 80%;

    &.search-input {
      padding-left: 0;
    }
  }

  button,
  .ValueComparison {
    background-color: @color-primary-text;
  }

  input {
    border: @size-1 solid transparent;
    display: flex;
    flex: 1 auto;
  }

  input::placeholder {
    color: @color-primary-text;
  }

  input:focus {
    border: @size-1 solid transparent;
  }

  &:focus-within {
    border: @size-1 solid @color-secondary-action-outline;
  }

  input[type='number'] {
    appearance: textfield;
  }

  input[type='number']::-webkit-outer-spin-button,
  input[type='number']::-webkit-inner-spin-button {
    appearance: none;
    margin: 0;
  }
}

.ValueIncrementers {
  display: flex;
  flex-direction: column;

  button {
    cursor: default;
    flex: 1;
    padding: 0 @size-4;

    &:active {
      background-color: @color-inactive-text;
    }
  }
}

.FocusBorder {
  border: @size-2 solid @color-primary-text;
}

.LightBorder {
  border: @size-1 solid @color-secondary-text;

  &:focus-within {
    border: @size-1 solid @color-secondary-text;
  }
}

.SetWidth {
  min-width: 17.81rem;
}

.DatePicker {
  :global {
    .SingleDatePicker_1 {
      display: block;
    }

    div.SingleDatePickerInput {
      background: none;
      border: none;
      border-radius: @border-radius-default;
    }

    div.DateInput {
      background: none;
      border-radius: @border-radius-default;
      width: auto;
    }

    .DateInput_input_1,
    .DateInput_input__focused,
    .DateInput_input__focused_2 {
      border-radius: @border-radius-default;
      border: @size-1 solid @color-secondary-action-outline;
      min-height: @size-44;
      min-width: @size-210;

      @media @breakpoint-mobile {
        min-width: @size-155;
      }
    }

    .DateInput_input.DateInput_input_1 {
      border: none;
    }

    .DateInput__openDown_3::before,
    .DateInput__openDown_3::after {
      content: none;
      display: none;
    }

    .DateInput__withCaret::before,
    .DateInput__withCaret::after {
      content: none;
      display: none;
    }

    .DateInput.DateInput_1.DateInput__withCaret.DateInput__withCaret_2.DateInput__openDown.DateInput__openDown_3 {
      &::before,
      &::after {
        content: none;
        display: none;
      }
    }

    .SingleDatePicker_picker__openDown_3.SingleDatePicker_picker__openDown_3.SingleDatePicker_picker__openDown_3 {
      top: auto;
    }

    .SingleDatePicker_picker {
      margin-top: -1px;
      z-index: @above-all-content;
    }

    .DayPicker_weekHeader.DayPicker_weekHeader_1 {
      top: 4.2rem;
    }

    .DayPicker__horizontal_2 {
      background-color: @color-primary-text;
      border-radius: 0;
      box-shadow: 0 @size-2 @size-4 rgba(0, 0, 0, 0.5);
      font-size: @size-12;
      line-height: @size-12;
      text-transform: uppercase;
    }

    .SingleDatePickerInput.SingleDatePickerInput_1 {
      border: 0;
      border-radius: @border-radius-default;
    }

    .SingleDatePickerInput,
    .SingleDatePickerInput_1 {
      .mono-12;

      background-color: @color-dark-grey;
      border: @size-1 solid @color-secondary-action-outline;
      border-radius: @border-radius-default;
      color: @color-primary-text;
    }

    .DateInput_input.DateInput_input_1 {
      .text-14;

      background-color: @color-dark-grey;
      color: @color-primary-text;
      border: @size-1 solid @color-secondary-action;

      &.DateInput_input__disabled {
        color: @color-inactive-text;
      }
    }

    .DateInput_1 {
      background: none;
      color: inherit;
      display: block;
      font-size: inherit;
      font-weight: inherit;
      line-height: inherit;
      width: auto;
    }

    .DateInput_displayText.DateInput_displayText_1 {
      .text-14;

      background: none;
      color: @color-primary-text;

      &.DateInput_displayText__hasInput {
        color: inherit;
      }
    }

    .DateInput_input__focused {
      border: 0;
    }


    .CalendarMonth_1,
    .CalendarMonthGrid_1,
    .CalendarMonthGrid_1 {
      background: none;
    }

    .CalendarMonth_caption_1 {
      .text-14-medium;

      color: @color-dark-grey;
      padding-bottom: @size-40;
      padding-top: 33px;
      text-transform: capitalize;

      > strong {
        font-weight: 500;
      }
    }

    .DayPickerNavigation_button__default_2.DayPickerNavigation_button__default_2 {
      background: none;
      border: none;
    }

    .DayPickerNavigation_leftButton__horizontal_3 {
      > svg {
        height: @size-32;
        width: @size-32;

        > rect,
        > path {
          stroke: @color-inactive-text;
        }

        &:hover {
          > rect,
          > path {
            stroke: @color-inactive-text;
          }
        }
      }
    }

    .DayPickerNavigation_rightButton__horizontal_3 {
      > svg {
        height: @size-32;
        transform: rotate(-180deg);
        width: @size-32;

        > rect,
        > path {
          stroke: @color-inactive-text;
        }

        &:hover {
          > rect,
          > path {
            stroke: @color-inactive-text;
          }
        }
      }
    }

    .SingleDatePickerInput_calendarIcon {
      position: absolute;
      right: 0;
      z-index: @default-z-index;

      > svg {
        height: @size-20;
        width: @size-20;

        > path {
          fill: @color-secondary-text;
        }
      }
    }

    .DayPicker_weekHeader_li_1 {
      .mono-11;

      color: @color-inactive-text;
      text-transform: capitalize;
    }

    .CalendarDay_container_1 {
      .mono-default;

      background: none;
      border: @size-1 solid @color-primary-text;
      color: @color-inactive-text;

      &.CalendarDay__selected_2:hover {
        background: @color-primary-text;
      }

      &.CalendarDay__selected {
        background: @color-primary-action;
        color: @color-primary-text;

        &:hover {
          background: @color-primary-action;
          border: @size-1 solid @color-primary-text;
          color: @color-primary-text;
        }
      }

      &.CalendarDay__blocked_out_of_range_2.CalendarDay__blocked_out_of_range_2,
      &:hover {
        background: fade(@color-primary-action, 10%);
        border: @size-1 solid @color-primary-text;
        color: @color-inactive-text;
      }

      &.CalendarDay__blocked_out_of_range_2.CalendarDay__blocked_out_of_range_2:hover {
        background: fade(@color-primary-action, 10%);
        border: @size-1 solid @color-primary-text;
      }

      &:hover {
        color: @color-inactive-text;
      }
    }

    .DayPickerKeyboardShortcuts_show__bottomRight_3.DayPickerKeyboardShortcuts_show__bottomRight_3.DayPickerKeyboardShortcuts_show__bottomRight_3 {
      display: none;
    }
  }

  &.Condensed {
    :global {
      .SingleDatePickerInput_calendarIcon {
        display: none;
      }

      .DateInput_input_1 {
        width: unset;
      }

      .DateInput_input.DateInput_input_1 {
        .mono-9;

        color: @color-primary-text;
        text-transform: uppercase;
        min-width: unset;
        padding: @size-2 @size-4;
        min-height: unset;
        width: 80px;

        &::placeholder {
          .mono-9;
        }
      }
    }
  }

  &.OpenTop {
    :global {
      .DateInput_1 {
        > svg {
          display: none;
        }
      }
    }
  }
}

.InputDropdown {
  background-color: @color-primary-text;
  color: @color-secondary-text;
  cursor: pointer;
  display: flex;
  padding: @size-8 @size-16;
  position: relative;
  width: 100%;
  z-index: @default-z-index;

  &:focus {
    outline: none;
  }

  > span:first-of-type {
    .text-18;

    line-height: @size-24;
    padding: 0;
    text-align: left;
    width: 100%;

    &.selected {
      color: @color-primary-text;
    }
  }

  > div {
    .text-18;

    background-color: @color-secondary-action;
    box-shadow: 0 @size-2 @size-4 rgba(0, 0, 0, 0.5);
    color: @color-primary-text;
    display: none;
    line-height: @size-24;
    max-height: 10rem;
    overflow: auto;
    padding: @size-8 0;
    position: absolute;
    right: 0;
    top: 100%;
    width: 100%;

    &.active {
      display: block;
    }

    > button {
      background-color: inherit;
      cursor: pointer;
      padding: @size-4 @size-16;
      text-align: left;
      transition: background-color 0.15s ease;
      white-space: nowrap;
      width: 100%;

      &:hover,
      &.active {
        background-color: @color-primary-text;
      }
    }
  }

  > select {
    display: none;
    width: 100%;

    &.selected {
      color: @color-primary-text;
    }
  }

  > span:last-of-type {
    align-self: flex-end;

    svg {
      height: @size-16;

      polyline {
        stroke: @color-secondary-text;
      }
    }
  }

  @media @breakpoint-mobile-small {
    > span:first-of-type,
    > div,
    > div.active {
      display: none;
    }

    > select {
      display: block;
    }
  }
}

.TimeSelector {
  position: relative;
  max-height: @size-44;
  min-width: @size-210;

  @media @breakpoint-mobile {
    max-height: unset;
  }

  > button {
    .text-14;

    align-items: center;
    background-color: @color-dark-grey;
    border-radius: @border-radius-default;
    border: @size-1 solid @color-secondary-action;
    color: @color-primary-text;
    display: flex;
    height: @size-44;
    padding: @size-12;
    text-align: left;
    width: 100%;

    > span {
      flex-grow: 1;
    }

    > svg {
      height: @size-20;
      width: @size-20;

      > path {
        fill: @color-secondary-text;
      }
    }
  }

  > div {
    background: @color-primary-text;
    border: @size-1 solid @color-secondary-action-outline;
    color: @color-primary-text;
    display: flex;
    left: 0;
    margin-top: @size-24;
    padding: @size-24;
    position: absolute;
    top: 100%;
    z-index: @above-all-content;

    > div:first-of-type {
      margin-right: @size-10;
    }

    > div:nth-of-type(2) {
      margin-left: @size-10;
    }

    > div:last-of-type {
      margin-left: @size-24;
    }

    > span {
      .text-16-medium;

      align-items: center;
      color: @color-secondary-action;
      display: flex;
      margin-top: @size-24;
    }
  }

  > svg {
    height: @size-22;
    left: @size-20;
    margin-top: @size-15;
    position: absolute;
    width: @size-20;
    z-index: @above-all-content-above;

    > path:first-of-type {
      fill: @color-primary-text;
    }

    > path:last-of-type {
      stroke: @color-primary-text;
      fill: transparent;
    }
  }

  &.Condensed {
    min-width: unset;

    > button {
      padding: @size-2 @size-4;
      height: unset;
      width: 55px;

      > span {
        .mono-9-bold;

        text-transform: uppercase;
        color: @color-primary-text;
      }

      > svg {
        display: none;
      }
    }

    &.Default {
      > button > span {
        .mono-9;

        color: @color-secondary-text;
      }
    }
  }

  &.Default {
    > button {
      color: @color-secondary-text;
    }
  }

  &.OpenTop {
    > div {
      top: unset;
      bottom: 24px;
      left: unset;
      right: 0;
    }

    > svg {
      display: none;
    }
  }

  &.Disabled {
    > button {
      border: @size-1 solid @color-inactive-text;
      color: @color-inactive-text;
    }
  }
}

.IndividualTimeSelector {
  align-items: center;
  display: flex;
  flex-direction: column;

  > span {
    .text-11;

    color: @color-inactive-text;
    margin-bottom: @size-14;
  }

  > input {
    .mono-14;

    background-color: @color-primary-text;
    border: @size-1 solid @color-inactive-text;
    color: @color-inactive-text;
    height: @size-40;
    margin: @size-14 0;
    padding: @size-4;
    text-align: center;
    width: @size-40;

    &:hover {
      border: @size-1 solid @color-secondary-text;
    }

    &:focus {
      border: @size-1 solid @color-dark-grey;
    }

    &:disabled {
      background-color: @color-inactive-text;
      border: @size-1 solid @color-inactive-text;
      color: @color-secondary-text;
    }
  }

  > input[type='number']::-webkit-inner-spin-button,
  > input[type='number']::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  > button {
    > svg {
      height: @size-8;
      width: @size-16;

      > path {
        fill: @color-inactive-text;
      }
    }

    &:hover {
      > svg > path {
        fill: @color-dark-grey;
      }
    }
  }

  > button:first-of-type > svg {
    transform: rotate(-180deg);
  }
}

.ErrorLabel {
  background: fade(@color-error, 20%);
  border-radius: @border-radius-default;
  border: @size-1 solid @color-error;
  border-left-width: @size-4;
  display: flex;
  padding: @size-12;
  padding-left: @size-8;

  > svg {
    margin-right: @size-6;
    width: @size-12;
    height: @size-12;

    > circle {
      fill: fade(@color-error, 20%);
      opacity: 1;
      stroke: @color-error;
    }

    > rect {
      fill: @color-error;
    }

    > path {
      fill: @color-error;
    }
  }

  > div {
    display: flex;
    flex-direction: column;

    > span:first-of-type {
      .mono-10-bold;

      color: @color-primary-text;
      text-transform: uppercase;
      margin-bottom: @size-9;
    }

    > span:last-of-type {
      .text-11;

      color: @color-primary-text;
    }
  }

  &.Alternate {
    background: transparent;
    padding: @size-20 @size-20 @size-24;
    border-radius: @size-8;
    border: @size-1 solid @color-primary-action;

    > div {
      > span:first-of-type {
        .text-14-medium;

        color: @color-negative;
        text-transform: none;
      }

      > span:last-of-type {
        .text-12;

        color: @color-secondary-text;
      }
    }
  }
}

textarea.error,
input.error,
button.error {
  border: @size-1 solid fade(@color-error, 50%);
}

div.error > div > div > div > div > input {
  border: @size-1 solid fade(@color-error, 50%);
}

.Timezones {
  display: flex;
  flex-flow: column;
  position: relative;

  &.Condensed {
    > div > div {
      > input {
        .mono-9;

        color: @color-primary-text;
        text-transform: uppercase;
        padding: @size-2 @size-4;
        min-width: unset;
        width: @size-34;
        height: unset;

        &::placeholder {
         .mono-9;
        }
      }

      > div {
        left: 0;
      }
    }
  }
}

.PreFilled {
  display: flex;
  justify-content: space-between;

  > div:nth-of-type(1) {
    > span > label > svg {
      > circle {
        stroke: @color-secondary-text;
      }

      > path {
        fill: @color-secondary-text;
      }
    }
  }

  > div:nth-of-type(2) {
    flex-direction: row;
    display: flex;
    justify-content: center;
    align-items: flex-end;

    > span {
      margin-bottom: 0;
      margin-right: @size-4;
    }
  }
}

// Used in category-filters.styles.less
.CategoryRow {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  text-transform: capitalize;
  margin: @size-13 0;
  user-select: none;
  cursor: pointer;

  @media @breakpoint-mobile {
    margin: @size-24 0;
  }

  > span:first-of-type {
    .text-12-bold;

    color: @color-secondary-text;
    display: flex;
    line-height: 100%;

    > svg {
      width: @size-12;
      height: @size-12;
      margin-right: @size-10;
      transform: translateY(-@size-1);

      > path {
        stroke: @color-secondary-text;
      }
    }

    @media @breakpoint-mobile {
      .text-14-bold;

      line-height: 100%;

      > svg {
        width: @size-16;
        height: @size-16;
        margin-right: @size-16;
        transform: translateY(-@size-2);

        > path {
          stroke: @color-secondary-text;
        }
      }
    }
  }

  > span:last-of-type {
    .text-10-bold;

    color: @color-secondary-text;
    background: @color-secondary-action;
    border: @size-1 solid @color-secondary-action-outline;
    border-radius: @border-radius-default;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0px @size-3;
    min-width: @size-21;
    height: @size-16;

    @media @breakpoint-mobile {
      .text-12-bold;

      min-width: @size-23;
      height: @size-17;
    }
  }

  &.loading {
    > span:last-of-type {
      background: none;
      animation: spin 2s linear infinite;
      border: none;

      > svg {
        width: @size-12;
        height: @size-12;
        transform: translateY(-@size-1);

        > path {
          stroke: @color-secondary-text;
        }
      }
    }
  }

  // When a category is selected
  &.active {
    > span:first-of-type {
      .text-12-bold;

      color: @color-primary-text;

      @media @breakpoint-mobile {
        .text-14-bold;
      }
    }

    > span:last-of-type {
      color: @color-primary-text;
    }
  }

  &.disabled {
    cursor: default;
    > span:last-of-type {
      background: none;
      border: none;
    }
  }
}

.CategoryRow:hover span:first-of-type {
  color: @color-primary-text;
}

.CategoryRow:hover span:last-of-type {
  color: @color-primary-text;
}

@keyframes spin {
  100% {
    transform: rotate(360deg);
  }
}

.MigrateRepInfo {
  .text-14;

  border: @size-1 solid @color-secondary-action-outline;
  box-sizing: border-box;
  border-radius: @size-8;
  color: @color-secondary-text;
  display: flex;
  flex-direction: column;
  margin-bottom: @size-16;
  padding: @size-16 @size-24;

  > span {
    .text-18-bold;

    color: @color-primary-text;
  }
}

.ErrorText {
  .text-12;

  color: @color-error;
  margin-top: @size-4;
}
