@import (reference) '~assets/styles/shared';

.RadioCardGroup {
  margin: @size-20;
  padding: @size-12;
  display: flex;
  flex-flow: row wrap;
  justify-content: space-around;
}

.RadioCard {
  background: @color-theme-primary;
  border: 1px solid @color-primary-alternate;
  border-radius: @border-radius-default;
  box-sizing: border-box;
  display: grid;
  grid-template-rows: @size-20 64px 44px 50px 38px;
  grid-template-columns: 100%;
  max-height: 216px;
  max-width: 210px;
  min-height: 216px;
  min-width: 210px;

  @media @breakpoint-mobile {
    min-height: 75px;
    max-height: 75px;
    min-width: 312px;
    max-width: 312px;
    grid-template-columns: 45px auto;
    grid-template-rows: @size-20 @size-20 auto;
  }

  &:hover,
  &:focus {
    border: 1px solid @color-primary-alternate-two;
  }

  > div {
    border-radius: @border-radius-default;
    display: flex;
    bottom: 5%;
    left: 91%;
    align-items: center;
    justify-content: center;
    position: relative;
    height: @size-20;
    width: @size-20;
    background: @color-positive;
    visibility: hidden;
    opacity: 0;

    @media @breakpoint-mobile {
      grid-column: 2;
      grid-row: 1;
      left: 93%;
    }

    > svg {
      height: @size-16;
      width: @size-16;

      > path {
        stroke: @color-primary-text;
      }
    }
  }

  > svg {
    height: @size-40;
    width: @size-40;
    margin: @size-24 auto 0;

    @media @breakpoint-mobile {
      align-self: center;
      justify-self: center;
      grid-column: 1;
      grid-row: span 3;
      height: @size-24;
      margin: @size-24 @size-11;
      width: @size-24;
    }

    > circle {
      fill: @color-positive;
    }
  }

  > h5 {
    .text-16-bold;

    color: @color-alternate-info-text;
    margin: @size-24 @size-12 0;
    text-align: center;
    text-transform: capitalize;

    @media @breakpoint-mobile {
      grid-column: 2;
      grid-row: 2;
      margin: 0;
      text-align: left;
    }
  }

  > p {
    .text-14;

    color: @color-tertiary-info-text;
    line-height: @size-18;
    margin: @size-12 @size-12 0;
    text-align: center;

    @media @breakpoint-mobile {
      grid-column: 2;
      grid-row: 3;
      margin: 0 @size-4 0 0;
      text-align: left;
      white-space: nowrap;
      text-overflow: ellipsis;
      overflow: hidden;
    }
  }
}

.RadioCardActive {
  border: @size-4 solid @color-positive;

  > div {
    visibility: visible;
    opacity: 1;
  }

  > svg {
    @media @breakpoint-mobile {
      align-self: center;
      justify-self: center;
      grid-column: 1;
      grid-row: span 3;
      height: @size-24;
      margin: @size-20 @size-8;
      width: @size-24;
    }
  }

  &:hover,
  &:focus {
    border: @size-4 solid @color-positive;
  }
}

.Checkbox {
  cursor: pointer;
  display: block;
  font-size: @size-22;
  margin-bottom: @size-8;
  position: relative;
  user-select: none;

  > input {
    visibility: hidden;
  }

  > span {
    background-color: @color-theme-primary;
    border: 1px solid @color-highlight;
    border-radius: @border-radius-default;
    height: @size-24;
    left: 0;
    position: absolute;
    top: 0;
    width: @size-24;

    &:focus {
      outline: none;
    }

    > svg {
      display: none;
      height: @size-9;
      left: @size-6;
      position: absolute;
      top: @size-6;
      width: @size-11;

      > path {
        stroke: @color-secondary-text;
      }
    }
  }
}

.Checkbox:hover input ~ span {
  filter: brightness(95%);
}

.Checkbox input:checked ~ span {
  background: fade(@color-highlight, 30%);
  border: 1px solid @color-highlight;

  > svg {
    display: block;
  }
}

.CheckboxSmall {
  margin-bottom: 0;

  @media @breakpoint-mobile {
    margin-bottom: @size-8;
  }
}

.CheckmarkSmall {
  height: @size-16;
  width: @size-16;

  @media @breakpoint-mobile {
    height: @size-24;
    width: @size-24;
  }
}

.TextInput {
  .text-14;

  background-color: @color-secondary-action;
  border-radius: @border-radius-default;
  border: 1px solid @color-primary-light;
  color: @color-secondary-text;
  height: 44px;
  margin-bottom: @size-4;
  min-width: 150px;
  
  &::placeholder {
    color: @color-primary-alternate-two;
  }

  &:hover {
    border: 1px solid @color-highlight;
    cursor: pointer;
  }

  &:focus {
    border: 1px solid @color-active;
  }

  &:disabled {
    background-color: @color-extra-darkpurple;
    border: 1px solid @color-shadow-text;
    color: @color-shadow-text;
    opacity: 0.5;

    &::placeholder {
      color: @color-shadow-text;
    }
  }

  &.error {
    border: 1px solid fade(@color-error-text, 50%);
  }
}

.ErrorText {
  .text-12;

  color: @color-error-text;
  margin-bottom: @size-4;
}


.Input {
  .border(true, @border-all, @color-input-border-no-focus, 1px);

  background-color: @color-input-background;
  display: flex;

  button,
  .input-value-comparison {
    background-color: @color-input-background;
    font-weight: @weight-medium;
  }

  input {
    .border(true, @border-all, @color-transparent, 1px);

    display: flex;
    flex: 1;
  }

  input::placeholder {
    color: @color-input-border-no-focus;
  }

  input:focus {
    .border(true, @border-all, @color-transparent, 1px);
  }

  &:focus-within {
    .border(true, @border-all, @color-input-border, 1px);
  }

  .box {
    font-size: inherit;
    padding: @size-16;
    width: 100%;

    &.search-input {
      padding-left: 0;
    }
  }

  .close {
    background-color: @color-transparent;
    height: @size-16;
    line-height: @size-16;
    width: @size-16;

    > svg > path {
      stroke: @color-primary-text;
    }

    @media @breakpoint-mobile {
      max-height: @size-24;
      min-height: @size-24;
      min-width: @size-24;
    }
  }
}

.noFocus {
  &:focus-within {
    .border(true, @border-all, @color-transparent, 1px);
  }
}

.Max {
  .text-10-medium;

  color: @color-neutral;
  padding: 0 @size-16;
  text-transform: capitalize;
}

.MaxDark {
  background-color: @color-lightergray !important;
}

.Incremental {
  .border(true, @border-all, @color-transparent, 1px);

  background-color: @color-input-background;
  display: flex;

  .box {
    font-size: inherit;
    padding: @size-16;
    width: 80%;

    &.search-input {
      padding-left: 0;
    }
  }

  button,
  .ValueComparison {
    background-color: @color-input-background;
  }

  input {
    .border(true, @border-all, @color-transparent, 1px);

    display: flex;
    flex: 1 auto;
  }

  input::placeholder {
    color: @color-input-border-no-focus;
  }

  input:focus {
    .border(true, @border-all, @color-transparent, 1px);
  }

  &:focus-within {
    .border(true, @border-all, @color-input-border, 1px);
  }

  input[type='number'] {
    appearance: textfield;
  }

  input[type=number]::-webkit-outer-spin-button,
  input[type=number]::-webkit-inner-spin-button {
    appearance: none;
    margin: 0;
  }
}

.ValueIncrementers {
  // .border(true, @border-left);

  display: flex;
  flex-direction: column;

  button {
    cursor: default;
    flex: 1;
    padding: 0 @size-4;

    &:active {
      background-color: @color-gray;
    }
  }
}

.FocusBorder {
  .border(true, @border-all, @color-input-border, @border-width-2);
}

.LightBorder {
  .border(true, @border-all, @color-lightgray, 1px);

  &:focus-within {
    .border(true, @border-all, @color-lightgray, 1px);
  }
}

.SetWidth {
  min-width: 17.81rem;
}



.InputDropdown {
  background-color: @color-input-background;
  color: @color-lightgray;
  cursor: pointer;
  display: flex;
  padding: @size-8 @size-16;
  position: relative;
  width: 100%;
  z-index: @default-z-index;

  &:focus {
    outline: none;
  }

  > span:first-of-type {
    .text-18;
  
    line-height: @size-24;
    padding: 0;
    text-align: left;
    width: 100%;
  
    &.selected {
      color: @color-darkpurple;
    }
  }

  > div {
    .text-18;
  
    background-color: @color-secondary-text;
    box-shadow: 0 2px @size-4 rgba(0, 0, 0, 0.5);
    color: @color-darkpurple;
    display: none;
    line-height: @size-24;
    max-height: 10rem;
    overflow: auto;
    padding: @size-8 0;
    position: absolute;
    right: 0;
    top: 100%;
    width: 100%;
  
    &.active {
      display: block;
    }
  
    > button {
      background-color: inherit;
      cursor: pointer;
      padding: @size-4 @size-16;
      text-align: left;
      transition: background-color 0.15s ease;
      white-space: nowrap;
      width: 100%;
  
      &:hover,
      &.active {
        background-color: @color-lightergray;
      }
    }
  }

  > select {
    display: none;
    width: 100%;
  
    &.selected {
      color: @color-darkpurple;
    }
  }

  > span:last-of-type {
    align-self: flex-end;
  
    svg {
      height: @size-16;
  
      polyline {
        stroke: @color-lightgray;
      }
    }
  }

  @media @breakpoint-mobile-small {
    > span:first-of-type,
    > div,
    > div.active {
      display: none;
    }
  
    > select {
      display: block;
    }
  }
}
