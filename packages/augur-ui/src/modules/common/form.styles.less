@import (reference) '~assets/styles/shared';

.RadioStyleSelection {
  background: @color-theme-primary;
  border: 1px solid @color-primary-alternate;
  border-radius: @border-radius-default;

  > h5 {
    .text-14;

    color: @color-alternate-info-text;
  }

  > h5,
  > p {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  &:hover,
  &:focus {
    border: 1px solid @color-primary-alternate-two;
  }

  &:disabled {
    border: 1px solid @color-shadow-text;

    > svg > circle {
      stroke: @color-shadow-text;
    }

    > h5,
    > p {
      color: @color-shadow-text;
    }
  }
}

.LocationDisplay {
  align-items: center;
  border-radius: @border-radius-default;
  border: 1px solid @color-primary-light;
  display: flex;
  justify-content: center;
  padding: @size-16 @size-12;

  > span {
    .text-12-bold;

    color: @color-primary-alternate-two;
    cursor: default;
    padding: 0 @size-12;

    &.Selected {
      color: @color-alternate-info-text;
    }
  }

  > svg {
    width: @size-16;
    height: @size-16;

    > path {
       fill: @color-primary-alternate-two;
    }
  }
}

.CheckboxBar {
  .RadioStyleSelection;

  align-items: center;
  display: grid;
  grid-template-rows: auto;
  grid-template-columns: 52px auto @size-16;
  height: 52px;
  width: 304px;

  > svg {
    grid-column: 1;
    grid-row: 1;
    height: @size-20;
    margin: auto;
    width: @size-20;

    > rect {
      stroke: @color-primary-alternate-two;
    }

    > path {
      stroke: @color-secondary-text;
    }
  }

  > h5 {
    grid-column: 2;
    grid-row: 1;
    width: 236px;
  }
}

.CheckboxBarChecked {
  > svg > rect {
    fill: @color-primary-alternate-two;
    fill-opacity: 0.3;
  }
}

.RadioBar {
  .RadioStyleSelection;

  align-items: center;
  display: grid;
  grid-template-rows: auto;
  grid-template-columns: 52px auto @size-16;
  height: 51px;  
  width: 304px;

  > svg {
    height: @size-20;
    grid-column: 1;
    grid-row: 1;
    margin: auto;
    width: @size-20;

    > circle:first-of-type {
      stroke: @color-primary-alternate-two;
      fill: none;
    }

    > circle {
      fill: @color-alternate-info-text;
    }
  }

  > h5 {
    grid-column: 2;
    grid-row: 1;
    width: 236px;
  }
}

.RadioTwoLineBar {
  .RadioBar;

  height: 82px;
  grid-template-rows: @size-20 @size-19 @size-4 @size-19 @size-20;

  @media @breakpoint-mobile {
    height: 128px;
    grid-template-rows: @size-16 @size-38 @size-8 50px @size-16;
    width: 312px;
  }

  > svg {
    grid-row: 1 / span 5;
  }

  > h5 {
    width: 236px;
    grid-row: 2;

    @media @breakpoint-mobile {
      .text-14;

      width: 244px;
    }
  }

  > p {
    .text-14;

    color: @color-tertiary-info-text;
    grid-column: 2;
    grid-row: 4;
    width: 236px;

    @media @breakpoint-mobile {
      .text-12;

      max-height: 50px;
      white-space: normal;
      width: 244px;
    }
  }
}

.RadioBarExpanded {
  grid-template-columns: 52px auto @size-16;
  grid-template-rows: @size-20 @size-16 @size-12 44px @size-20;
  height: 113px;

  > svg {
    grid-row: 1 / span 5;
  }

  > h5 {
    grid-row: 2;
  }

  > input {
    grid-column: 2;
    grid-row: 4;
    width: 210px;
  }
}

.RadioBarError {
  background: @color-secondary-action;
  border: 1px solid @color-error-text;
}

.RadioCardGroup {
  margin: @size-20;
  padding: @size-12;
  display: flex;
  flex-flow: row wrap;
  justify-content: space-around;
}

.RadioCard {
  .RadioStyleSelection;

  display: grid;
  grid-template-rows: @size-20 64px 44px 50px 38px;
  grid-template-columns: 100%;
  max-height: 216px;
  max-width: 210px;
  min-height: 216px;
  min-width: 210px;

  @media @breakpoint-mobile {
    min-height: 75px;
    max-height: 75px;
    min-width: 312px;
    max-width: 312px;
    grid-template-columns: 45px auto;
    grid-template-rows: @size-20 @size-20 auto;
  }

  > div {
    border-radius: @border-radius-default;
    display: flex;
    bottom: 5%;
    left: 91%;
    align-items: center;
    justify-content: center;
    position: relative;
    height: @size-20;
    width: @size-20;
    background: @color-positive;
    visibility: hidden;
    opacity: 0;

    @media @breakpoint-mobile {
      grid-column: 2;
      grid-row: 1;
      left: 93%;
    }

    > svg {
      height: @size-16;
      width: @size-16;

      > path {
        stroke: @color-primary-text;
      }
    }
  }

  > svg {
    height: @size-40;
    width: @size-40;
    margin: @size-24 auto 0;

    @media @breakpoint-mobile {
      align-self: center;
      justify-self: center;
      grid-column: 1;
      grid-row: span 3;
      height: @size-24;
      margin: @size-24 @size-11;
      width: @size-24;
    }

    > circle {
      fill: @color-positive;
    }
  }

  > h5 {
    .text-16-bold;

    margin: @size-24 @size-12 0;
    text-align: center;
    text-transform: capitalize;

    @media @breakpoint-mobile {
      grid-column: 2;
      grid-row: 2;
      margin: 0;
      text-align: left;
    }
  }

  > p {
    .text-14;

    color: @color-tertiary-info-text;
    line-height: @size-18;
    margin: @size-12 @size-12 0;
    text-align: center;

    @media @breakpoint-mobile {
      grid-column: 2;
      grid-row: 3;
      margin: 0 @size-4 0 0;
      text-align: left;
      white-space: nowrap;
      text-overflow: ellipsis;
      overflow: hidden;
    }
  }
}

.RadioCardActive {
  border: @size-4 solid @color-positive;

  > div {
    visibility: visible;
    opacity: 1;
  }

  > svg {
    @media @breakpoint-mobile {
      align-self: center;
      justify-self: center;
      grid-column: 1;
      grid-row: span 3;
      height: @size-24;
      margin: @size-20 @size-8;
      width: @size-24;
    }
  }

  &:hover,
  &:focus {
    border: @size-4 solid @color-positive;
  }
}

.Checkbox {
  cursor: pointer;
  display: block;
  font-size: @size-22;
  margin-bottom: @size-8;
  position: relative;
  user-select: none;

  > input {
    visibility: hidden;
  }

  > span {
    background-color: @color-theme-primary;
    border: 1px solid @color-highlight;
    border-radius: @border-radius-default;
    height: @size-24;
    left: 0;
    position: absolute;
    top: 0;
    width: @size-24;

    &:focus {
      outline: none;
    }

    > svg {
      display: none;
      height: @size-9;
      left: @size-6;
      position: absolute;
      top: @size-6;
      width: @size-11;

      > path {
        stroke: @color-secondary-text;
      }
    }
  }
}

.Checkbox:hover input ~ span {
  filter: brightness(95%);
}

.Checkbox input:checked ~ span {
  background: fade(@color-highlight, 30%);
  border: 1px solid @color-highlight;

  > svg {
    display: block;
  }
}

.CheckboxSmall {
  margin-bottom: 0;

  @media @breakpoint-mobile {
    margin-bottom: @size-8;
  }
}

.CheckmarkSmall {
  height: @size-16;
  width: @size-16;

  @media @breakpoint-mobile {
    height: @size-24;
    width: @size-24;
  }
}

.TextInput {
  .text-14;

  background-color: @color-secondary-action;
  border-radius: @border-radius-default;
  border: 1px solid @color-primary-light;
  color: @color-secondary-text;
  height: 44px;
  margin-bottom: @size-4;
  min-width: 150px;
  
  &::placeholder {
    color: @color-primary-alternate-two;
  }

  &:hover {
    border: 1px solid @color-highlight;
    cursor: pointer;
  }

  &:focus {
    border: 1px solid @color-active;
  }

  &:disabled {
    background-color: @color-extra-darkpurple;
    border: 1px solid @color-shadow-text;
    color: @color-shadow-text;
    opacity: 0.5;

    &::placeholder {
      color: @color-shadow-text;
    }
  }

  &.error {
    border: 1px solid fade(@color-error-text, 50%);
  }
}

.ErrorText {
  .text-12;

  color: @color-error-text;
  margin-bottom: @size-4;
}

div.FormDropdown {
  .text-14;

  background-color: @color-secondary-action;
  border-radius: @border-radius-default;
  border: 1px solid @color-primary-light;
  margin-bottom: @size-4;

  > div {
    left: 0;
  }

  > button {
    background-color: transparent;
    color: @color-primary-alternate-two;

    > svg {
      height: @size-12;
      width: @size-12;

      > path {
        stroke: @color-secondary-text;
      }
    }

    &:hover {
      background-color: transparent;
    }
  }

  &:hover {
    background-color: @color-secondary-action;
    border: 1px solid @color-highlight;
    cursor: pointer;
  }

  &.disabled {
    background-color: @color-extra-darkpurple;
    border: 1px solid @color-shadow-text;
    color: @color-shadow-text;
    opacity: 0.5;
  }

  &.error {
    border: 1px solid fade(@color-error-text, 50%);
  }
}

div.FormDropdownActive {
  > button {
    background-color: transparent;
    color: @color-secondary-text;

    &:hover {
      background-color: transparent;
    }
  }

  &:hover {
    background-color: @color-secondary-action;
    border: 1px solid @color-primary-light;
    color: @color-secondary-text;
  }
}

.Input {
  .border(true, @border-all, @color-input-border-no-focus, 1px);

  background-color: @color-input-background;
  display: flex;

  button,
  .input-value-comparison {
    background-color: @color-input-background;
    font-weight: @weight-medium;
  }

  input {
    .border(true, @border-all, @color-transparent, 1px);

    display: flex;
    flex: 1;
  }

  input::placeholder {
    color: @color-input-border-no-focus;
  }

  input:focus {
    .border(true, @border-all, @color-transparent, 1px);
  }

  &:focus-within {
    .border(true, @border-all, @color-input-border, 1px);
  }

  .box {
    font-size: inherit;
    padding: @size-16;
    width: 100%;

    &.search-input {
      padding-left: 0;
    }
  }

  .close {
    background-color: @color-transparent;
    height: @size-16;
    line-height: @size-16;
    width: @size-16;

    > svg > path {
      stroke: @color-primary-text;
    }

    @media @breakpoint-mobile {
      max-height: @size-24;
      min-height: @size-24;
      min-width: @size-24;
    }
  }
}

.noFocus {
  &:focus-within {
    .border(true, @border-all, @color-transparent, 1px);
  }
}

.Max {
  .text-10-medium;

  color: @color-neutral;
  padding: 0 @size-16;
  text-transform: capitalize;
}

.MaxDark {
  background-color: @color-lightergray !important;
}

.Incremental {
  .border(true, @border-all, @color-transparent, 1px);

  background-color: @color-input-background;
  display: flex;

  .box {
    font-size: inherit;
    padding: @size-16;
    width: 80%;

    &.search-input {
      padding-left: 0;
    }
  }

  button,
  .ValueComparison {
    background-color: @color-input-background;
  }

  input {
    .border(true, @border-all, @color-transparent, 1px);

    display: flex;
    flex: 1 auto;
  }

  input::placeholder {
    color: @color-input-border-no-focus;
  }

  input:focus {
    .border(true, @border-all, @color-transparent, 1px);
  }

  &:focus-within {
    .border(true, @border-all, @color-input-border, 1px);
  }

  input[type='number'] {
    appearance: textfield;
  }

  input[type=number]::-webkit-outer-spin-button,
  input[type=number]::-webkit-inner-spin-button {
    appearance: none;
    margin: 0;
  }
}

.ValueIncrementers {
  // .border(true, @border-left);

  display: flex;
  flex-direction: column;

  button {
    cursor: default;
    flex: 1;
    padding: 0 @size-4;

    &:active {
      background-color: @color-gray;
    }
  }
}

.FocusBorder {
  .border(true, @border-all, @color-input-border, @border-width-2);
}

.LightBorder {
  .border(true, @border-all, @color-lightgray, 1px);

  &:focus-within {
    .border(true, @border-all, @color-lightgray, 1px);
  }
}

.SetWidth {
  min-width: 17.81rem;
}

.DatePicker {
  :global {
    .SingleDatePicker_1 {
      display: block;
      max-width: 19.875rem;
      z-index: @above-all-content;
    }

    .SingleDatePickerInput {
      background: none !important;
      border: none;
      border-radius: @border-radius-default !important;
    }

    .DateInput {
      background: none !important;
      border-radius: @border-radius-default !important;
      height: @size-40;
      max-height: @size-40;
      width: auto !important;
    }

    .DateInput_input_1,
    .DateInput_input__focused,
    .DateInput_input__focused_2 {
      border: 1px solid @color-highlight;
      border-radius: @border-radius-default;
      height: @size-38;
      max-height: @size-38;
    }

    .DateInput_input.DateInput_input_1,
    .DateInput_input.DateInput_input_1.DateInput_input__focused.DateInput_input__focused_2 {
      border: none;
    }

    .DateInput__openDown_3::before,
    .DateInput__openDown_3::after {
      content: none;
      display: none;
    }

    .DateInput__withCaret::before,
    .DateInput__withCaret::after {
      content: none;
      display: none;
    }

    .DateInput.DateInput_1.DateInput__withCaret.DateInput__withCaret_2.DateInput__openDown.DateInput__openDown_3 {
      &::before,
      &::after {
        content: none;
        display: none;
      }
    }

    .SingleDatePicker_picker__openDown_3.SingleDatePicker_picker__openDown_3.SingleDatePicker_picker__openDown_3 {
      top: auto;
    }

    .DayPicker_weekHeader.DayPicker_weekHeader_1 {
      top: 4.2rem;
    }

    .DayPicker__horizontal_2 {
      background-color: @color-input-background;
      border-radius: 0;
      box-shadow: 0 2px @size-4 rgba(0, 0, 0, 0.5);
      font-size: @size-12;
      line-height: @size-12;
      text-transform: uppercase;
    }

    .SingleDatePickerInput.SingleDatePickerInput_1 {
      border: 1px solid @color-highlight;
      border-radius: @border-radius-default;
    }

    .SingleDatePickerInput,
    .SingleDatePickerInput_1 {
      .mono-12;

      background: @color-theme-primary;
      border: 1px solid @color-highlight;
      border-radius: @border-radius-default;
      color: @color-secondary-text;
      max-height: @size-40;
    }

    .DateInput_input.DateInput_input_1 {
      .mono-12;

      background: @color-theme-primary;
      color: @color-secondary-text;
    }

    .DateInput_1 {
      background: none;
      color: inherit;
      display: block;
      font-size: inherit;
      font-weight: inherit;
      line-height: inherit;
      width: auto;
    }

    .DateInput_displayText.DateInput_displayText_1 {
      .mono-12;

      background: none;
      color: @color-secondary-text;

      &.DateInput_displayText__hasInput {
        color: inherit;
      }
    }

    .DateInput_input__focused {
      border: 0;
    }

    .CalendarMonth_1,
    .CalendarMonthGrid_1,
    .CalendarMonthGrid_1 {
      background: none;
    }

    .CalendarMonth_caption_1 {
      .text-14-medium;

      color: @color-primary-background;
      padding-bottom: @size-40;
      padding-top: 33px;
      text-transform: capitalize;

      > strong {
        font-weight: 500;
      }
    }

    .DayPickerNavigation_button__default_2.DayPickerNavigation_button__default_2 {
      background: none;
      border: none;
    }

    .DayPickerNavigation_leftButton__horizontal_3 {
      > svg {
        height: @size-32;
        width: @size-32;

        > rect, 
        > path {
          stroke: @color-neutral;
        }

        &:hover {
          > rect, 
          > path {
            stroke: @color-primary-light;
          }
        }
      }
    }

    .DayPickerNavigation_rightButton__horizontal_3 {
      > svg {
        height: @size-32;
        transform: rotate(-180deg);
        width: @size-32;

        > rect, 
        > path {
          stroke: @color-neutral;
        }

        &:hover {
          > rect, 
          > path {
            stroke: @color-primary-light;
          }
        }
      }
    }

    .DayPicker_weekHeader_li_1 {
      .mono-11;

      color: @color-alternate-text;
      text-transform: capitalize;
    }

    .CalendarDay_container_1 {
      .mono-default;

      background: none;
      border: 1px solid @color-tertiary-text;
      color: @color-shadow-text;

      &.CalendarDay__selected_2:hover {
        background: @color-primary-light;
      }

      &.CalendarDay__selected {
        background: @color-primary-alternate-two;
        color: @color-secondary-text;

        &:hover {
          background: @color-primary-alternate-two;
          border: 1px solid @color-tertiary-text;
          color: @color-secondary-text;
        }
      }

      &.CalendarDay__blocked_out_of_range_2.CalendarDay__blocked_out_of_range_2,
      &:hover {
        background: fade(@color-primary-alternate-two, 10%);
        border: 1px solid @color-tertiary-text;
        color: @color-disabled-text-secondary;
      }

      &.CalendarDay__blocked_out_of_range_2.CalendarDay__blocked_out_of_range_2:hover {
        background: fade(@color-primary-alternate-two, 10%);
        border: 1px solid @color-tertiary-text;
      }

      &:hover {
        color: @color-shadow-text;
      }
    }

    .DayPickerKeyboardShortcuts_show__bottomRight_3.DayPickerKeyboardShortcuts_show__bottomRight_3.DayPickerKeyboardShortcuts_show__bottomRight_3 {
      display: none;
    }
  }
}

.InputDropdown {
  background-color: @color-input-background;
  color: @color-lightgray;
  cursor: pointer;
  display: flex;
  padding: @size-8 @size-16;
  position: relative;
  width: 100%;
  z-index: @default-z-index;

  &:focus {
    outline: none;
  }

  > span:first-of-type {
    .text-18;
  
    line-height: @size-24;
    padding: 0;
    text-align: left;
    width: 100%;
  
    &.selected {
      color: @color-darkpurple;
    }
  }

  > div {
    .text-18;
  
    background-color: @color-secondary-text;
    box-shadow: 0 2px @size-4 rgba(0, 0, 0, 0.5);
    color: @color-darkpurple;
    display: none;
    line-height: @size-24;
    max-height: 10rem;
    overflow: auto;
    padding: @size-8 0;
    position: absolute;
    right: 0;
    top: 100%;
    width: 100%;
  
    &.active {
      display: block;
    }
  
    > button {
      background-color: inherit;
      cursor: pointer;
      padding: @size-4 @size-16;
      text-align: left;
      transition: background-color 0.15s ease;
      white-space: nowrap;
      width: 100%;
  
      &:hover,
      &.active {
        background-color: @color-lightergray;
      }
    }
  }

  > select {
    display: none;
    width: 100%;
  
    &.selected {
      color: @color-darkpurple;
    }
  }

  > span:last-of-type {
    align-self: flex-end;
  
    svg {
      height: @size-16;
  
      polyline {
        stroke: @color-lightgray;
      }
    }
  }

  @media @breakpoint-mobile-small {
    > span:first-of-type,
    > div,
    > div.active {
      display: none;
    }
  
    > select {
      display: block;
    }
  }
}

.TimeSelector {
  position: relative;

  > button {
    .mono-12;

    background: @color-theme-primary;
    border-radius: @border-radius-default;
    border: 1px solid @color-highlight;
    color: @color-secondary-text;
    height: @size-38;
    max-height: @size-38;
    padding: @size-11 @size-12 @size-13;
  }

  > div {
    background: @color-secondary-text;
    border-radius: 3px;
    border: 1px solid @color-primary-light;
    color: @color-primary-background;
    display: flex;
    left: 0;
    margin-top: @size-5;
    padding: @size-24;
    position: absolute;
    top: 100%;
    z-index: @above-all-content;

    > div:first-of-type {
      margin-right: @size-10;
    }

    > div:nth-of-type(2) {
      margin-left: @size-10;
    }

    > div:last-of-type {
      margin-left: @size-24;
    }

    > span {
      .text-16-medium;

      align-items: center;
      color: @color-primary-dark;
      display: flex;
      margin-top: @size-24;
    }
  }
} 

.IndividualTimeSelector {
  align-items: center;
  display: flex;
  flex-direction: column;
  
  > span {
    .text-11;

    color: @color-primary-background;
    margin-bottom: @size-14;
  }

  > input {
    .mono-14;

    background-color: @color-secondary-text;
    border: 1px solid @color-tertiary-text;
    color: @color-shadow-text;
    height: @size-40;
    margin: @size-14 0;
    padding: @size-4;
    text-align: center;
    width: @size-40;

    &:hover {
      border: 1px solid @color-neutral;
    }

    &:focus {
      border: 1px solid @color-primary-background;
    }

    &:disabled {
      background-color: @color-secondary-text;
      border: 1px solid @color-tertiary-text;
      color: @color-shadow-text;
    }
  }

  > input[type=number]::-webkit-inner-spin-button, 
  > input[type=number]::-webkit-outer-spin-button { 
    -webkit-appearance: none; 
    margin: 0; 
  }

  > button {
    > svg {
      height: @size-8;
      width: @size-16;

      > path {
        fill: @color-neutral;
      }
    }

    &:hover {
      > svg > path {
        fill: @color-primary-background;
      }
    }
  }

  > button:first-of-type > svg {
    transform: rotate(-180deg);
  }
}

