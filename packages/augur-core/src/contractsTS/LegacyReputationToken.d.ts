/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface LegacyReputationTokenInterface extends ethers.utils.Interface {
  functions: {
    "allowance(address,address)": FunctionFragment;
    "allowances(address,address)": FunctionFragment;
    "approve(address,uint256)": FunctionFragment;
    "balanceOf(address)": FunctionFragment;
    "balances(address)": FunctionFragment;
    "controllerLookupName()": FunctionFragment;
    "decimals()": FunctionFragment;
    "decreaseAllowance(address,uint256)": FunctionFragment;
    "faucet(uint256)": FunctionFragment;
    "getInitialized()": FunctionFragment;
    "getIsMigratingFromLegacy()": FunctionFragment;
    "getLegacyRepToken()": FunctionFragment;
    "getTargetSupply()": FunctionFragment;
    "getTimestamp()": FunctionFragment;
    "getTotalMigrated()": FunctionFragment;
    "getTotalTheoreticalSupply()": FunctionFragment;
    "getTypeName()": FunctionFragment;
    "getUniverse()": FunctionFragment;
    "increaseAllowance(address,uint256)": FunctionFragment;
    "initialize(address)": FunctionFragment;
    "migrateAllowancesFromLegacyRep(address[],address[])": FunctionFragment;
    "migrateBalancesFromLegacyRep(address[])": FunctionFragment;
    "migrateIn(address,uint256)": FunctionFragment;
    "migrateOut(address,uint256)": FunctionFragment;
    "migrateOutByPayout(uint256[],uint256)": FunctionFragment;
    "mintForReportingParticipant(uint256)": FunctionFragment;
    "name()": FunctionFragment;
    "symbol()": FunctionFragment;
    "totalSupply()": FunctionFragment;
    "transfer(address,uint256)": FunctionFragment;
    "transferFrom(address,address,uint256)": FunctionFragment;
    "trustedDisputeWindowTransfer(address,address,uint256)": FunctionFragment;
    "trustedMarketTransfer(address,address,uint256)": FunctionFragment;
    "trustedReportingParticipantTransfer(address,address,uint256)": FunctionFragment;
    "trustedUniverseTransfer(address,address,uint256)": FunctionFragment;
    "updateParentTotalTheoreticalSupply()": FunctionFragment;
    "updateSiblingMigrationTotal(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "allowance",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "allowances",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "approve",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "balanceOf", values: [string]): string;
  encodeFunctionData(functionFragment: "balances", values: [string]): string;
  encodeFunctionData(
    functionFragment: "controllerLookupName",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "decimals", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "decreaseAllowance",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "faucet",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getInitialized",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getIsMigratingFromLegacy",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getLegacyRepToken",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTargetSupply",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTimestamp",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTotalMigrated",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTotalTheoreticalSupply",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTypeName",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getUniverse",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "increaseAllowance",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "initialize", values: [string]): string;
  encodeFunctionData(
    functionFragment: "migrateAllowancesFromLegacyRep",
    values: [string[], string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "migrateBalancesFromLegacyRep",
    values: [string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "migrateIn",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "migrateOut",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "migrateOutByPayout",
    values: [BigNumberish[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mintForReportingParticipant",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "name", values?: undefined): string;
  encodeFunctionData(functionFragment: "symbol", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "totalSupply",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transfer",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "trustedDisputeWindowTransfer",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "trustedMarketTransfer",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "trustedReportingParticipantTransfer",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "trustedUniverseTransfer",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateParentTotalTheoreticalSupply",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "updateSiblingMigrationTotal",
    values: [string]
  ): string;

  decodeFunctionResult(functionFragment: "allowance", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "allowances", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "approve", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "balances", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "controllerLookupName",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "decimals", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "decreaseAllowance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "faucet", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getInitialized",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getIsMigratingFromLegacy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLegacyRepToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTargetSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTimestamp",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTotalMigrated",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTotalTheoreticalSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTypeName",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUniverse",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increaseAllowance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "migrateAllowancesFromLegacyRep",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "migrateBalancesFromLegacyRep",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "migrateIn", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "migrateOut", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "migrateOutByPayout",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mintForReportingParticipant",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "name", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "symbol", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "transfer", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedDisputeWindowTransfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedMarketTransfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedReportingParticipantTransfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedUniverseTransfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateParentTotalTheoreticalSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateSiblingMigrationTotal",
    data: BytesLike
  ): Result;

  events: {
    "Approval(address,address,uint256)": EventFragment;
    "FundedAccount(address,address,uint256,uint256)": EventFragment;
    "Transfer(address,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Approval"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "FundedAccount"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Transfer"): EventFragment;
}

export class LegacyReputationToken extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  listeners<T, G>(
    eventFilter?: TypedEventFilter<T, G>
  ): Array<TypedListener<T, G>>;
  off<T, G>(
    eventFilter: TypedEventFilter<T, G>,
    listener: TypedListener<T, G>
  ): this;
  on<T, G>(
    eventFilter: TypedEventFilter<T, G>,
    listener: TypedListener<T, G>
  ): this;
  once<T, G>(
    eventFilter: TypedEventFilter<T, G>,
    listener: TypedListener<T, G>
  ): this;
  removeListener<T, G>(
    eventFilter: TypedEventFilter<T, G>,
    listener: TypedListener<T, G>
  ): this;
  removeAllListeners<T, G>(eventFilter: TypedEventFilter<T, G>): this;

  queryFilter<T, G>(
    event: TypedEventFilter<T, G>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<T & G>>>;

  interface: LegacyReputationTokenInterface;

  functions: {
    allowance(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "allowance(address,address)"(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    allowances(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "allowances(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    approve(
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "approve(address,uint256)"(
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    balanceOf(
      _account: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "balanceOf(address)"(
      _account: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    balances(arg0: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    "balances(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    controllerLookupName(overrides?: CallOverrides): Promise<[string]>;

    "controllerLookupName()"(overrides?: CallOverrides): Promise<[string]>;

    decimals(overrides?: CallOverrides): Promise<[number]>;

    "decimals()"(overrides?: CallOverrides): Promise<[number]>;

    decreaseAllowance(
      _spender: string,
      _subtractedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "decreaseAllowance(address,uint256)"(
      _spender: string,
      _subtractedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    faucet(
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "faucet(uint256)"(
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getInitialized(overrides?: CallOverrides): Promise<[boolean]>;

    "getInitialized()"(overrides?: CallOverrides): Promise<[boolean]>;

    getIsMigratingFromLegacy(overrides?: CallOverrides): Promise<[boolean]>;

    "getIsMigratingFromLegacy()"(overrides?: CallOverrides): Promise<[boolean]>;

    getLegacyRepToken(overrides?: CallOverrides): Promise<[string]>;

    "getLegacyRepToken()"(overrides?: CallOverrides): Promise<[string]>;

    getTargetSupply(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getTargetSupply()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    getTimestamp(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getTimestamp()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    getTotalMigrated(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getTotalMigrated()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    getTotalTheoreticalSupply(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getTotalTheoreticalSupply()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getTypeName(overrides?: CallOverrides): Promise<[string]>;

    "getTypeName()"(overrides?: CallOverrides): Promise<[string]>;

    getUniverse(overrides?: CallOverrides): Promise<[string]>;

    "getUniverse()"(overrides?: CallOverrides): Promise<[string]>;

    increaseAllowance(
      _spender: string,
      _addedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "increaseAllowance(address,uint256)"(
      _spender: string,
      _addedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    initialize(
      _universe: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(address)"(
      _universe: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    migrateAllowancesFromLegacyRep(
      _owners: string[],
      _spenders: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "migrateAllowancesFromLegacyRep(address[],address[])"(
      _owners: string[],
      _spenders: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    migrateBalancesFromLegacyRep(
      _holders: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "migrateBalancesFromLegacyRep(address[])"(
      _holders: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    migrateIn(
      _reporter: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "migrateIn(address,uint256)"(
      _reporter: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    migrateOut(
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "migrateOut(address,uint256)"(
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    migrateOutByPayout(
      _payoutNumerators: BigNumberish[],
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "migrateOutByPayout(uint256[],uint256)"(
      _payoutNumerators: BigNumberish[],
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    mintForReportingParticipant(
      _amountMigrated: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "mintForReportingParticipant(uint256)"(
      _amountMigrated: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    name(overrides?: CallOverrides): Promise<[string]>;

    "name()"(overrides?: CallOverrides): Promise<[string]>;

    symbol(overrides?: CallOverrides): Promise<[string]>;

    "symbol()"(overrides?: CallOverrides): Promise<[string]>;

    totalSupply(overrides?: CallOverrides): Promise<[BigNumber]>;

    "totalSupply()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    transfer(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transfer(address,uint256)"(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferFrom(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    trustedDisputeWindowTransfer(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "trustedDisputeWindowTransfer(address,address,uint256)"(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    trustedMarketTransfer(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "trustedMarketTransfer(address,address,uint256)"(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    trustedReportingParticipantTransfer(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "trustedReportingParticipantTransfer(address,address,uint256)"(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    trustedUniverseTransfer(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "trustedUniverseTransfer(address,address,uint256)"(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    updateParentTotalTheoreticalSupply(
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateParentTotalTheoreticalSupply()"(
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    updateSiblingMigrationTotal(
      _token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateSiblingMigrationTotal(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  allowance(
    _owner: string,
    _spender: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "allowance(address,address)"(
    _owner: string,
    _spender: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  allowances(
    arg0: string,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "allowances(address,address)"(
    arg0: string,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  approve(
    _spender: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "approve(address,uint256)"(
    _spender: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  balanceOf(_account: string, overrides?: CallOverrides): Promise<BigNumber>;

  "balanceOf(address)"(
    _account: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  balances(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

  "balances(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  controllerLookupName(overrides?: CallOverrides): Promise<string>;

  "controllerLookupName()"(overrides?: CallOverrides): Promise<string>;

  decimals(overrides?: CallOverrides): Promise<number>;

  "decimals()"(overrides?: CallOverrides): Promise<number>;

  decreaseAllowance(
    _spender: string,
    _subtractedValue: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "decreaseAllowance(address,uint256)"(
    _spender: string,
    _subtractedValue: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  faucet(
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "faucet(uint256)"(
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getInitialized(overrides?: CallOverrides): Promise<boolean>;

  "getInitialized()"(overrides?: CallOverrides): Promise<boolean>;

  getIsMigratingFromLegacy(overrides?: CallOverrides): Promise<boolean>;

  "getIsMigratingFromLegacy()"(overrides?: CallOverrides): Promise<boolean>;

  getLegacyRepToken(overrides?: CallOverrides): Promise<string>;

  "getLegacyRepToken()"(overrides?: CallOverrides): Promise<string>;

  getTargetSupply(overrides?: CallOverrides): Promise<BigNumber>;

  "getTargetSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

  getTimestamp(overrides?: CallOverrides): Promise<BigNumber>;

  "getTimestamp()"(overrides?: CallOverrides): Promise<BigNumber>;

  getTotalMigrated(overrides?: CallOverrides): Promise<BigNumber>;

  "getTotalMigrated()"(overrides?: CallOverrides): Promise<BigNumber>;

  getTotalTheoreticalSupply(overrides?: CallOverrides): Promise<BigNumber>;

  "getTotalTheoreticalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

  getTypeName(overrides?: CallOverrides): Promise<string>;

  "getTypeName()"(overrides?: CallOverrides): Promise<string>;

  getUniverse(overrides?: CallOverrides): Promise<string>;

  "getUniverse()"(overrides?: CallOverrides): Promise<string>;

  increaseAllowance(
    _spender: string,
    _addedValue: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "increaseAllowance(address,uint256)"(
    _spender: string,
    _addedValue: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  initialize(
    _universe: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(address)"(
    _universe: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  migrateAllowancesFromLegacyRep(
    _owners: string[],
    _spenders: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "migrateAllowancesFromLegacyRep(address[],address[])"(
    _owners: string[],
    _spenders: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  migrateBalancesFromLegacyRep(
    _holders: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "migrateBalancesFromLegacyRep(address[])"(
    _holders: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  migrateIn(
    _reporter: string,
    _attotokens: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "migrateIn(address,uint256)"(
    _reporter: string,
    _attotokens: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  migrateOut(
    _destination: string,
    _attotokens: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "migrateOut(address,uint256)"(
    _destination: string,
    _attotokens: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  migrateOutByPayout(
    _payoutNumerators: BigNumberish[],
    _attotokens: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "migrateOutByPayout(uint256[],uint256)"(
    _payoutNumerators: BigNumberish[],
    _attotokens: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  mintForReportingParticipant(
    _amountMigrated: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "mintForReportingParticipant(uint256)"(
    _amountMigrated: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  name(overrides?: CallOverrides): Promise<string>;

  "name()"(overrides?: CallOverrides): Promise<string>;

  symbol(overrides?: CallOverrides): Promise<string>;

  "symbol()"(overrides?: CallOverrides): Promise<string>;

  totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

  "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

  transfer(
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transfer(address,uint256)"(
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferFrom(
    _from: string,
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferFrom(address,address,uint256)"(
    _from: string,
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  trustedDisputeWindowTransfer(
    _source: string,
    _destination: string,
    _attotokens: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "trustedDisputeWindowTransfer(address,address,uint256)"(
    _source: string,
    _destination: string,
    _attotokens: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  trustedMarketTransfer(
    _source: string,
    _destination: string,
    _attotokens: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "trustedMarketTransfer(address,address,uint256)"(
    _source: string,
    _destination: string,
    _attotokens: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  trustedReportingParticipantTransfer(
    _source: string,
    _destination: string,
    _attotokens: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "trustedReportingParticipantTransfer(address,address,uint256)"(
    _source: string,
    _destination: string,
    _attotokens: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  trustedUniverseTransfer(
    _source: string,
    _destination: string,
    _attotokens: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "trustedUniverseTransfer(address,address,uint256)"(
    _source: string,
    _destination: string,
    _attotokens: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  updateParentTotalTheoreticalSupply(
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateParentTotalTheoreticalSupply()"(
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  updateSiblingMigrationTotal(
    _token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateSiblingMigrationTotal(address)"(
    _token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    allowance(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "allowance(address,address)"(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    allowances(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "allowances(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    approve(
      _spender: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "approve(address,uint256)"(
      _spender: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    balanceOf(_account: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balanceOf(address)"(
      _account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    balances(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balances(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    controllerLookupName(overrides?: CallOverrides): Promise<string>;

    "controllerLookupName()"(overrides?: CallOverrides): Promise<string>;

    decimals(overrides?: CallOverrides): Promise<number>;

    "decimals()"(overrides?: CallOverrides): Promise<number>;

    decreaseAllowance(
      _spender: string,
      _subtractedValue: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "decreaseAllowance(address,uint256)"(
      _spender: string,
      _subtractedValue: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    faucet(_amount: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

    "faucet(uint256)"(
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getInitialized(overrides?: CallOverrides): Promise<boolean>;

    "getInitialized()"(overrides?: CallOverrides): Promise<boolean>;

    getIsMigratingFromLegacy(overrides?: CallOverrides): Promise<boolean>;

    "getIsMigratingFromLegacy()"(overrides?: CallOverrides): Promise<boolean>;

    getLegacyRepToken(overrides?: CallOverrides): Promise<string>;

    "getLegacyRepToken()"(overrides?: CallOverrides): Promise<string>;

    getTargetSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "getTargetSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

    getTimestamp(overrides?: CallOverrides): Promise<BigNumber>;

    "getTimestamp()"(overrides?: CallOverrides): Promise<BigNumber>;

    getTotalMigrated(overrides?: CallOverrides): Promise<BigNumber>;

    "getTotalMigrated()"(overrides?: CallOverrides): Promise<BigNumber>;

    getTotalTheoreticalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "getTotalTheoreticalSupply()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTypeName(overrides?: CallOverrides): Promise<string>;

    "getTypeName()"(overrides?: CallOverrides): Promise<string>;

    getUniverse(overrides?: CallOverrides): Promise<string>;

    "getUniverse()"(overrides?: CallOverrides): Promise<string>;

    increaseAllowance(
      _spender: string,
      _addedValue: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "increaseAllowance(address,uint256)"(
      _spender: string,
      _addedValue: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    initialize(_universe: string, overrides?: CallOverrides): Promise<void>;

    "initialize(address)"(
      _universe: string,
      overrides?: CallOverrides
    ): Promise<void>;

    migrateAllowancesFromLegacyRep(
      _owners: string[],
      _spenders: string[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    "migrateAllowancesFromLegacyRep(address[],address[])"(
      _owners: string[],
      _spenders: string[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    migrateBalancesFromLegacyRep(
      _holders: string[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    "migrateBalancesFromLegacyRep(address[])"(
      _holders: string[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    migrateIn(
      _reporter: string,
      _attotokens: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "migrateIn(address,uint256)"(
      _reporter: string,
      _attotokens: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    migrateOut(
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "migrateOut(address,uint256)"(
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    migrateOutByPayout(
      _payoutNumerators: BigNumberish[],
      _attotokens: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "migrateOutByPayout(uint256[],uint256)"(
      _payoutNumerators: BigNumberish[],
      _attotokens: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    mintForReportingParticipant(
      _amountMigrated: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "mintForReportingParticipant(uint256)"(
      _amountMigrated: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    name(overrides?: CallOverrides): Promise<string>;

    "name()"(overrides?: CallOverrides): Promise<string>;

    symbol(overrides?: CallOverrides): Promise<string>;

    "symbol()"(overrides?: CallOverrides): Promise<string>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

    transfer(
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "transfer(address,uint256)"(
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    transferFrom(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "transferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    trustedDisputeWindowTransfer(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "trustedDisputeWindowTransfer(address,address,uint256)"(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    trustedMarketTransfer(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "trustedMarketTransfer(address,address,uint256)"(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    trustedReportingParticipantTransfer(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "trustedReportingParticipantTransfer(address,address,uint256)"(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    trustedUniverseTransfer(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "trustedUniverseTransfer(address,address,uint256)"(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    updateParentTotalTheoreticalSupply(
      overrides?: CallOverrides
    ): Promise<boolean>;

    "updateParentTotalTheoreticalSupply()"(
      overrides?: CallOverrides
    ): Promise<boolean>;

    updateSiblingMigrationTotal(
      _token: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "updateSiblingMigrationTotal(address)"(
      _token: string,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {
    Approval(
      owner: string | null,
      spender: string | null,
      value: null
    ): TypedEventFilter<
      [string, string, BigNumber],
      { owner: string; spender: string; value: BigNumber }
    >;

    FundedAccount(
      _universe: string | null,
      _sender: string | null,
      _repBalance: null,
      _timestamp: null
    ): TypedEventFilter<
      [string, string, BigNumber, BigNumber],
      {
        _universe: string;
        _sender: string;
        _repBalance: BigNumber;
        _timestamp: BigNumber;
      }
    >;

    Transfer(
      from: string | null,
      to: string | null,
      value: null
    ): TypedEventFilter<
      [string, string, BigNumber],
      { from: string; to: string; value: BigNumber }
    >;
  };

  estimateGas: {
    allowance(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "allowance(address,address)"(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    allowances(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "allowances(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    approve(
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "approve(address,uint256)"(
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    balanceOf(_account: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balanceOf(address)"(
      _account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    balances(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balances(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    controllerLookupName(overrides?: CallOverrides): Promise<BigNumber>;

    "controllerLookupName()"(overrides?: CallOverrides): Promise<BigNumber>;

    decimals(overrides?: CallOverrides): Promise<BigNumber>;

    "decimals()"(overrides?: CallOverrides): Promise<BigNumber>;

    decreaseAllowance(
      _spender: string,
      _subtractedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "decreaseAllowance(address,uint256)"(
      _spender: string,
      _subtractedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    faucet(_amount: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "faucet(uint256)"(
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getInitialized(overrides?: CallOverrides): Promise<BigNumber>;

    "getInitialized()"(overrides?: CallOverrides): Promise<BigNumber>;

    getIsMigratingFromLegacy(overrides?: CallOverrides): Promise<BigNumber>;

    "getIsMigratingFromLegacy()"(overrides?: CallOverrides): Promise<BigNumber>;

    getLegacyRepToken(overrides?: CallOverrides): Promise<BigNumber>;

    "getLegacyRepToken()"(overrides?: CallOverrides): Promise<BigNumber>;

    getTargetSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "getTargetSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

    getTimestamp(overrides?: CallOverrides): Promise<BigNumber>;

    "getTimestamp()"(overrides?: CallOverrides): Promise<BigNumber>;

    getTotalMigrated(overrides?: CallOverrides): Promise<BigNumber>;

    "getTotalMigrated()"(overrides?: CallOverrides): Promise<BigNumber>;

    getTotalTheoreticalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "getTotalTheoreticalSupply()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTypeName(overrides?: CallOverrides): Promise<BigNumber>;

    "getTypeName()"(overrides?: CallOverrides): Promise<BigNumber>;

    getUniverse(overrides?: CallOverrides): Promise<BigNumber>;

    "getUniverse()"(overrides?: CallOverrides): Promise<BigNumber>;

    increaseAllowance(
      _spender: string,
      _addedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "increaseAllowance(address,uint256)"(
      _spender: string,
      _addedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    initialize(_universe: string, overrides?: Overrides): Promise<BigNumber>;

    "initialize(address)"(
      _universe: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    migrateAllowancesFromLegacyRep(
      _owners: string[],
      _spenders: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "migrateAllowancesFromLegacyRep(address[],address[])"(
      _owners: string[],
      _spenders: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    migrateBalancesFromLegacyRep(
      _holders: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "migrateBalancesFromLegacyRep(address[])"(
      _holders: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    migrateIn(
      _reporter: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "migrateIn(address,uint256)"(
      _reporter: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    migrateOut(
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "migrateOut(address,uint256)"(
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    migrateOutByPayout(
      _payoutNumerators: BigNumberish[],
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "migrateOutByPayout(uint256[],uint256)"(
      _payoutNumerators: BigNumberish[],
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    mintForReportingParticipant(
      _amountMigrated: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "mintForReportingParticipant(uint256)"(
      _amountMigrated: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<BigNumber>;

    "name()"(overrides?: CallOverrides): Promise<BigNumber>;

    symbol(overrides?: CallOverrides): Promise<BigNumber>;

    "symbol()"(overrides?: CallOverrides): Promise<BigNumber>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

    transfer(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transfer(address,uint256)"(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferFrom(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    trustedDisputeWindowTransfer(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "trustedDisputeWindowTransfer(address,address,uint256)"(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    trustedMarketTransfer(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "trustedMarketTransfer(address,address,uint256)"(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    trustedReportingParticipantTransfer(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "trustedReportingParticipantTransfer(address,address,uint256)"(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    trustedUniverseTransfer(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "trustedUniverseTransfer(address,address,uint256)"(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    updateParentTotalTheoreticalSupply(
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateParentTotalTheoreticalSupply()"(
      overrides?: Overrides
    ): Promise<BigNumber>;

    updateSiblingMigrationTotal(
      _token: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateSiblingMigrationTotal(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    allowance(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "allowance(address,address)"(
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    allowances(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "allowances(address,address)"(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    approve(
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "approve(address,uint256)"(
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    balanceOf(
      _account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balanceOf(address)"(
      _account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    balances(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balances(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    controllerLookupName(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "controllerLookupName()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    decimals(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "decimals()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    decreaseAllowance(
      _spender: string,
      _subtractedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "decreaseAllowance(address,uint256)"(
      _spender: string,
      _subtractedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    faucet(
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "faucet(uint256)"(
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getInitialized(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getInitialized()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getIsMigratingFromLegacy(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getIsMigratingFromLegacy()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLegacyRepToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getLegacyRepToken()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTargetSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getTargetSupply()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTimestamp(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getTimestamp()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getTotalMigrated(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getTotalMigrated()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTotalTheoreticalSupply(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTotalTheoreticalSupply()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTypeName(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getTypeName()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getUniverse(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getUniverse()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    increaseAllowance(
      _spender: string,
      _addedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "increaseAllowance(address,uint256)"(
      _spender: string,
      _addedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    initialize(
      _universe: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(address)"(
      _universe: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    migrateAllowancesFromLegacyRep(
      _owners: string[],
      _spenders: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "migrateAllowancesFromLegacyRep(address[],address[])"(
      _owners: string[],
      _spenders: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    migrateBalancesFromLegacyRep(
      _holders: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "migrateBalancesFromLegacyRep(address[])"(
      _holders: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    migrateIn(
      _reporter: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "migrateIn(address,uint256)"(
      _reporter: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    migrateOut(
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "migrateOut(address,uint256)"(
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    migrateOutByPayout(
      _payoutNumerators: BigNumberish[],
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "migrateOutByPayout(uint256[],uint256)"(
      _payoutNumerators: BigNumberish[],
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    mintForReportingParticipant(
      _amountMigrated: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "mintForReportingParticipant(uint256)"(
      _amountMigrated: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "name()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "symbol()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "totalSupply()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transfer(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transfer(address,uint256)"(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferFrom(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferFrom(address,address,uint256)"(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    trustedDisputeWindowTransfer(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "trustedDisputeWindowTransfer(address,address,uint256)"(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    trustedMarketTransfer(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "trustedMarketTransfer(address,address,uint256)"(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    trustedReportingParticipantTransfer(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "trustedReportingParticipantTransfer(address,address,uint256)"(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    trustedUniverseTransfer(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "trustedUniverseTransfer(address,address,uint256)"(
      _source: string,
      _destination: string,
      _attotokens: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    updateParentTotalTheoreticalSupply(
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateParentTotalTheoreticalSupply()"(
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    updateSiblingMigrationTotal(
      _token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateSiblingMigrationTotal(address)"(
      _token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
