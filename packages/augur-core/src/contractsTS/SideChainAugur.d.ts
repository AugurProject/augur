/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface SideChainAugurInterface extends ethers.utils.Interface {
  functions: {
    "cash()": FunctionFragment;
    "finishDeployment()": FunctionFragment;
    "isKnownMarket(address)": FunctionFragment;
    "isTrustedSender(address)": FunctionFragment;
    "logCompleteSetsPurchased(address,address,address,uint256)": FunctionFragment;
    "logCompleteSetsSold(address,address,address,uint256,uint256)": FunctionFragment;
    "logMarketOIChanged(address,address,uint256)": FunctionFragment;
    "logShareTokensBalanceChanged(address,address,uint256,uint256)": FunctionFragment;
    "logTradingProceedsClaimed(address,address,address,uint256,uint256,uint256,uint256)": FunctionFragment;
    "lookup(bytes32)": FunctionFragment;
    "marketGetter()": FunctionFragment;
    "registerContract(bytes32,address)": FunctionFragment;
    "trustedCashTransfer(address,address,uint256)": FunctionFragment;
    "uploader()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "cash", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "finishDeployment",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isKnownMarket",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedSender",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "logCompleteSetsPurchased",
    values: [string, string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "logCompleteSetsSold",
    values: [string, string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "logMarketOIChanged",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "logShareTokensBalanceChanged",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "logTradingProceedsClaimed",
    values: [
      string,
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(functionFragment: "lookup", values: [BytesLike]): string;
  encodeFunctionData(
    functionFragment: "marketGetter",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "registerContract",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "trustedCashTransfer",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "uploader", values?: undefined): string;

  decodeFunctionResult(functionFragment: "cash", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "finishDeployment",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isKnownMarket",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedSender",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "logCompleteSetsPurchased",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "logCompleteSetsSold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "logMarketOIChanged",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "logShareTokensBalanceChanged",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "logTradingProceedsClaimed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "lookup", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "marketGetter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "registerContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedCashTransfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "uploader", data: BytesLike): Result;

  events: {
    "CompleteSetsPurchased(address,address,address,uint256,uint256)": EventFragment;
    "CompleteSetsSold(address,address,address,uint256,uint256,uint256)": EventFragment;
    "FinishDeployment()": EventFragment;
    "MarketOIChanged(address,address,uint256)": EventFragment;
    "RegisterContract(address,bytes32)": EventFragment;
    "ShareTokenBalanceChanged(address,address,address,uint256,uint256)": EventFragment;
    "TradingProceedsClaimed(address,address,address,uint256,uint256,uint256,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "CompleteSetsPurchased"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CompleteSetsSold"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "FinishDeployment"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MarketOIChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RegisterContract"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ShareTokenBalanceChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TradingProceedsClaimed"): EventFragment;
}

export class SideChainAugur extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  listeners<T, G>(
    eventFilter?: TypedEventFilter<T, G>
  ): Array<TypedListener<T, G>>;
  off<T, G>(
    eventFilter: TypedEventFilter<T, G>,
    listener: TypedListener<T, G>
  ): this;
  on<T, G>(
    eventFilter: TypedEventFilter<T, G>,
    listener: TypedListener<T, G>
  ): this;
  once<T, G>(
    eventFilter: TypedEventFilter<T, G>,
    listener: TypedListener<T, G>
  ): this;
  removeListener<T, G>(
    eventFilter: TypedEventFilter<T, G>,
    listener: TypedListener<T, G>
  ): this;
  removeAllListeners<T, G>(eventFilter: TypedEventFilter<T, G>): this;

  queryFilter<T, G>(
    event: TypedEventFilter<T, G>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<T & G>>>;

  interface: SideChainAugurInterface;

  functions: {
    cash(overrides?: CallOverrides): Promise<[string]>;

    "cash()"(overrides?: CallOverrides): Promise<[string]>;

    finishDeployment(overrides?: Overrides): Promise<ContractTransaction>;

    "finishDeployment()"(overrides?: Overrides): Promise<ContractTransaction>;

    isKnownMarket(
      _market: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isKnownMarket(address)"(
      _market: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isTrustedSender(
      _address: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isTrustedSender(address)"(
      _address: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    logCompleteSetsPurchased(
      _universe: string,
      _market: string,
      _account: string,
      _numCompleteSets: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "logCompleteSetsPurchased(address,address,address,uint256)"(
      _universe: string,
      _market: string,
      _account: string,
      _numCompleteSets: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    logCompleteSetsSold(
      _universe: string,
      _market: string,
      _account: string,
      _numCompleteSets: BigNumberish,
      _fees: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "logCompleteSetsSold(address,address,address,uint256,uint256)"(
      _universe: string,
      _market: string,
      _account: string,
      _numCompleteSets: BigNumberish,
      _fees: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    logMarketOIChanged(
      _universe: string,
      _market: string,
      _openInterest: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "logMarketOIChanged(address,address,uint256)"(
      _universe: string,
      _market: string,
      _openInterest: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    logShareTokensBalanceChanged(
      _account: string,
      _market: string,
      _outcome: BigNumberish,
      _balance: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "logShareTokensBalanceChanged(address,address,uint256,uint256)"(
      _account: string,
      _market: string,
      _outcome: BigNumberish,
      _balance: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    logTradingProceedsClaimed(
      _universe: string,
      _sender: string,
      _market: string,
      _outcome: BigNumberish,
      _numShares: BigNumberish,
      _numPayoutTokens: BigNumberish,
      _fees: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "logTradingProceedsClaimed(address,address,address,uint256,uint256,uint256,uint256)"(
      _universe: string,
      _sender: string,
      _market: string,
      _outcome: BigNumberish,
      _numShares: BigNumberish,
      _numPayoutTokens: BigNumberish,
      _fees: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    lookup(_key: BytesLike, overrides?: CallOverrides): Promise<[string]>;

    "lookup(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    marketGetter(overrides?: CallOverrides): Promise<[string]>;

    "marketGetter()"(overrides?: CallOverrides): Promise<[string]>;

    registerContract(
      _key: BytesLike,
      _address: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "registerContract(bytes32,address)"(
      _key: BytesLike,
      _address: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    trustedCashTransfer(
      _from: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "trustedCashTransfer(address,address,uint256)"(
      _from: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    uploader(overrides?: CallOverrides): Promise<[string]>;

    "uploader()"(overrides?: CallOverrides): Promise<[string]>;
  };

  cash(overrides?: CallOverrides): Promise<string>;

  "cash()"(overrides?: CallOverrides): Promise<string>;

  finishDeployment(overrides?: Overrides): Promise<ContractTransaction>;

  "finishDeployment()"(overrides?: Overrides): Promise<ContractTransaction>;

  isKnownMarket(_market: string, overrides?: CallOverrides): Promise<boolean>;

  "isKnownMarket(address)"(
    _market: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isTrustedSender(
    _address: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isTrustedSender(address)"(
    _address: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  logCompleteSetsPurchased(
    _universe: string,
    _market: string,
    _account: string,
    _numCompleteSets: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "logCompleteSetsPurchased(address,address,address,uint256)"(
    _universe: string,
    _market: string,
    _account: string,
    _numCompleteSets: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  logCompleteSetsSold(
    _universe: string,
    _market: string,
    _account: string,
    _numCompleteSets: BigNumberish,
    _fees: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "logCompleteSetsSold(address,address,address,uint256,uint256)"(
    _universe: string,
    _market: string,
    _account: string,
    _numCompleteSets: BigNumberish,
    _fees: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  logMarketOIChanged(
    _universe: string,
    _market: string,
    _openInterest: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "logMarketOIChanged(address,address,uint256)"(
    _universe: string,
    _market: string,
    _openInterest: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  logShareTokensBalanceChanged(
    _account: string,
    _market: string,
    _outcome: BigNumberish,
    _balance: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "logShareTokensBalanceChanged(address,address,uint256,uint256)"(
    _account: string,
    _market: string,
    _outcome: BigNumberish,
    _balance: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  logTradingProceedsClaimed(
    _universe: string,
    _sender: string,
    _market: string,
    _outcome: BigNumberish,
    _numShares: BigNumberish,
    _numPayoutTokens: BigNumberish,
    _fees: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "logTradingProceedsClaimed(address,address,address,uint256,uint256,uint256,uint256)"(
    _universe: string,
    _sender: string,
    _market: string,
    _outcome: BigNumberish,
    _numShares: BigNumberish,
    _numPayoutTokens: BigNumberish,
    _fees: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  lookup(_key: BytesLike, overrides?: CallOverrides): Promise<string>;

  "lookup(bytes32)"(
    _key: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  marketGetter(overrides?: CallOverrides): Promise<string>;

  "marketGetter()"(overrides?: CallOverrides): Promise<string>;

  registerContract(
    _key: BytesLike,
    _address: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "registerContract(bytes32,address)"(
    _key: BytesLike,
    _address: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  trustedCashTransfer(
    _from: string,
    _to: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "trustedCashTransfer(address,address,uint256)"(
    _from: string,
    _to: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  uploader(overrides?: CallOverrides): Promise<string>;

  "uploader()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    cash(overrides?: CallOverrides): Promise<string>;

    "cash()"(overrides?: CallOverrides): Promise<string>;

    finishDeployment(overrides?: CallOverrides): Promise<boolean>;

    "finishDeployment()"(overrides?: CallOverrides): Promise<boolean>;

    isKnownMarket(_market: string, overrides?: CallOverrides): Promise<boolean>;

    "isKnownMarket(address)"(
      _market: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isTrustedSender(
      _address: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isTrustedSender(address)"(
      _address: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    logCompleteSetsPurchased(
      _universe: string,
      _market: string,
      _account: string,
      _numCompleteSets: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "logCompleteSetsPurchased(address,address,address,uint256)"(
      _universe: string,
      _market: string,
      _account: string,
      _numCompleteSets: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    logCompleteSetsSold(
      _universe: string,
      _market: string,
      _account: string,
      _numCompleteSets: BigNumberish,
      _fees: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "logCompleteSetsSold(address,address,address,uint256,uint256)"(
      _universe: string,
      _market: string,
      _account: string,
      _numCompleteSets: BigNumberish,
      _fees: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    logMarketOIChanged(
      _universe: string,
      _market: string,
      _openInterest: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "logMarketOIChanged(address,address,uint256)"(
      _universe: string,
      _market: string,
      _openInterest: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    logShareTokensBalanceChanged(
      _account: string,
      _market: string,
      _outcome: BigNumberish,
      _balance: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "logShareTokensBalanceChanged(address,address,uint256,uint256)"(
      _account: string,
      _market: string,
      _outcome: BigNumberish,
      _balance: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    logTradingProceedsClaimed(
      _universe: string,
      _sender: string,
      _market: string,
      _outcome: BigNumberish,
      _numShares: BigNumberish,
      _numPayoutTokens: BigNumberish,
      _fees: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "logTradingProceedsClaimed(address,address,address,uint256,uint256,uint256,uint256)"(
      _universe: string,
      _sender: string,
      _market: string,
      _outcome: BigNumberish,
      _numShares: BigNumberish,
      _numPayoutTokens: BigNumberish,
      _fees: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    lookup(_key: BytesLike, overrides?: CallOverrides): Promise<string>;

    "lookup(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    marketGetter(overrides?: CallOverrides): Promise<string>;

    "marketGetter()"(overrides?: CallOverrides): Promise<string>;

    registerContract(
      _key: BytesLike,
      _address: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "registerContract(bytes32,address)"(
      _key: BytesLike,
      _address: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    trustedCashTransfer(
      _from: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "trustedCashTransfer(address,address,uint256)"(
      _from: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    uploader(overrides?: CallOverrides): Promise<string>;

    "uploader()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    CompleteSetsPurchased(
      universe: string | null,
      market: string | null,
      account: string | null,
      numCompleteSets: null,
      timestamp: null
    ): TypedEventFilter<
      [string, string, string, BigNumber, BigNumber],
      {
        universe: string;
        market: string;
        account: string;
        numCompleteSets: BigNumber;
        timestamp: BigNumber;
      }
    >;

    CompleteSetsSold(
      universe: string | null,
      market: string | null,
      account: string | null,
      numCompleteSets: null,
      fees: null,
      timestamp: null
    ): TypedEventFilter<
      [string, string, string, BigNumber, BigNumber, BigNumber],
      {
        universe: string;
        market: string;
        account: string;
        numCompleteSets: BigNumber;
        fees: BigNumber;
        timestamp: BigNumber;
      }
    >;

    FinishDeployment(): TypedEventFilter<[]>;

    MarketOIChanged(
      universe: string | null,
      market: string | null,
      marketOI: null
    ): TypedEventFilter<
      [string, string, BigNumber],
      { universe: string; market: string; marketOI: BigNumber }
    >;

    RegisterContract(
      contractAddress: null,
      key: null
    ): TypedEventFilter<
      [string, string],
      { contractAddress: string; key: string }
    >;

    ShareTokenBalanceChanged(
      universe: string | null,
      account: string | null,
      market: string | null,
      outcome: null,
      balance: null
    ): TypedEventFilter<
      [string, string, string, BigNumber, BigNumber],
      {
        universe: string;
        account: string;
        market: string;
        outcome: BigNumber;
        balance: BigNumber;
      }
    >;

    TradingProceedsClaimed(
      universe: string | null,
      sender: string | null,
      market: null,
      outcome: null,
      numShares: null,
      numPayoutTokens: null,
      fees: null,
      timestamp: null
    ): TypedEventFilter<
      [
        string,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ],
      {
        universe: string;
        sender: string;
        market: string;
        outcome: BigNumber;
        numShares: BigNumber;
        numPayoutTokens: BigNumber;
        fees: BigNumber;
        timestamp: BigNumber;
      }
    >;
  };

  estimateGas: {
    cash(overrides?: CallOverrides): Promise<BigNumber>;

    "cash()"(overrides?: CallOverrides): Promise<BigNumber>;

    finishDeployment(overrides?: Overrides): Promise<BigNumber>;

    "finishDeployment()"(overrides?: Overrides): Promise<BigNumber>;

    isKnownMarket(
      _market: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isKnownMarket(address)"(
      _market: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isTrustedSender(
      _address: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isTrustedSender(address)"(
      _address: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    logCompleteSetsPurchased(
      _universe: string,
      _market: string,
      _account: string,
      _numCompleteSets: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "logCompleteSetsPurchased(address,address,address,uint256)"(
      _universe: string,
      _market: string,
      _account: string,
      _numCompleteSets: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    logCompleteSetsSold(
      _universe: string,
      _market: string,
      _account: string,
      _numCompleteSets: BigNumberish,
      _fees: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "logCompleteSetsSold(address,address,address,uint256,uint256)"(
      _universe: string,
      _market: string,
      _account: string,
      _numCompleteSets: BigNumberish,
      _fees: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    logMarketOIChanged(
      _universe: string,
      _market: string,
      _openInterest: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "logMarketOIChanged(address,address,uint256)"(
      _universe: string,
      _market: string,
      _openInterest: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    logShareTokensBalanceChanged(
      _account: string,
      _market: string,
      _outcome: BigNumberish,
      _balance: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "logShareTokensBalanceChanged(address,address,uint256,uint256)"(
      _account: string,
      _market: string,
      _outcome: BigNumberish,
      _balance: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    logTradingProceedsClaimed(
      _universe: string,
      _sender: string,
      _market: string,
      _outcome: BigNumberish,
      _numShares: BigNumberish,
      _numPayoutTokens: BigNumberish,
      _fees: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "logTradingProceedsClaimed(address,address,address,uint256,uint256,uint256,uint256)"(
      _universe: string,
      _sender: string,
      _market: string,
      _outcome: BigNumberish,
      _numShares: BigNumberish,
      _numPayoutTokens: BigNumberish,
      _fees: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    lookup(_key: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "lookup(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    marketGetter(overrides?: CallOverrides): Promise<BigNumber>;

    "marketGetter()"(overrides?: CallOverrides): Promise<BigNumber>;

    registerContract(
      _key: BytesLike,
      _address: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "registerContract(bytes32,address)"(
      _key: BytesLike,
      _address: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    trustedCashTransfer(
      _from: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "trustedCashTransfer(address,address,uint256)"(
      _from: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    uploader(overrides?: CallOverrides): Promise<BigNumber>;

    "uploader()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    cash(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "cash()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    finishDeployment(overrides?: Overrides): Promise<PopulatedTransaction>;

    "finishDeployment()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    isKnownMarket(
      _market: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isKnownMarket(address)"(
      _market: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isTrustedSender(
      _address: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isTrustedSender(address)"(
      _address: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    logCompleteSetsPurchased(
      _universe: string,
      _market: string,
      _account: string,
      _numCompleteSets: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "logCompleteSetsPurchased(address,address,address,uint256)"(
      _universe: string,
      _market: string,
      _account: string,
      _numCompleteSets: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    logCompleteSetsSold(
      _universe: string,
      _market: string,
      _account: string,
      _numCompleteSets: BigNumberish,
      _fees: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "logCompleteSetsSold(address,address,address,uint256,uint256)"(
      _universe: string,
      _market: string,
      _account: string,
      _numCompleteSets: BigNumberish,
      _fees: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    logMarketOIChanged(
      _universe: string,
      _market: string,
      _openInterest: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "logMarketOIChanged(address,address,uint256)"(
      _universe: string,
      _market: string,
      _openInterest: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    logShareTokensBalanceChanged(
      _account: string,
      _market: string,
      _outcome: BigNumberish,
      _balance: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "logShareTokensBalanceChanged(address,address,uint256,uint256)"(
      _account: string,
      _market: string,
      _outcome: BigNumberish,
      _balance: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    logTradingProceedsClaimed(
      _universe: string,
      _sender: string,
      _market: string,
      _outcome: BigNumberish,
      _numShares: BigNumberish,
      _numPayoutTokens: BigNumberish,
      _fees: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "logTradingProceedsClaimed(address,address,address,uint256,uint256,uint256,uint256)"(
      _universe: string,
      _sender: string,
      _market: string,
      _outcome: BigNumberish,
      _numShares: BigNumberish,
      _numPayoutTokens: BigNumberish,
      _fees: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    lookup(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "lookup(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    marketGetter(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "marketGetter()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    registerContract(
      _key: BytesLike,
      _address: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "registerContract(bytes32,address)"(
      _key: BytesLike,
      _address: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    trustedCashTransfer(
      _from: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "trustedCashTransfer(address,address,uint256)"(
      _from: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    uploader(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "uploader()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
