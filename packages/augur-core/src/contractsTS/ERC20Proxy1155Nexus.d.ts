/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface ERC20Proxy1155NexusInterface extends ethers.utils.Interface {
  functions: {
    "allowance(address,address,address)": FunctionFragment;
    "approve(address,address,address,uint256)": FunctionFragment;
    "calculateERC20(uint256)": FunctionFragment;
    "clone2Address(address,uint256,address)": FunctionFragment;
    "getProxy(uint256)": FunctionFragment;
    "getProxyAddress(uint256)": FunctionFragment;
    "newERC20(uint256)": FunctionFragment;
    "newERC20s(uint256[])": FunctionFragment;
    "target1155()": FunctionFragment;
    "transfer(address,address,address,uint256)": FunctionFragment;
    "transferFrom(address,address,address,address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "allowance",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "approve",
    values: [string, string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "calculateERC20",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "clone2Address",
    values: [string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getProxy",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getProxyAddress",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "newERC20",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "newERC20s",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "target1155",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transfer",
    values: [string, string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom",
    values: [string, string, string, string, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "allowance", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "approve", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "calculateERC20",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "clone2Address",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getProxy", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getProxyAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "newERC20", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "newERC20s", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "target1155", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "transfer", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom",
    data: BytesLike
  ): Result;

  events: {};
}

export class ERC20Proxy1155Nexus extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  listeners<T, G>(
    eventFilter?: TypedEventFilter<T, G>
  ): Array<TypedListener<T, G>>;
  off<T, G>(
    eventFilter: TypedEventFilter<T, G>,
    listener: TypedListener<T, G>
  ): this;
  on<T, G>(
    eventFilter: TypedEventFilter<T, G>,
    listener: TypedListener<T, G>
  ): this;
  once<T, G>(
    eventFilter: TypedEventFilter<T, G>,
    listener: TypedListener<T, G>
  ): this;
  removeListener<T, G>(
    eventFilter: TypedEventFilter<T, G>,
    listener: TypedListener<T, G>
  ): this;
  removeAllListeners<T, G>(eventFilter: TypedEventFilter<T, G>): this;

  queryFilter<T, G>(
    event: TypedEventFilter<T, G>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<T & G>>>;

  interface: ERC20Proxy1155NexusInterface;

  functions: {
    allowance(
      _proxy: string,
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "allowance(address,address,address)"(
      _proxy: string,
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    approve(
      _proxy: string,
      _caller: string,
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "approve(address,address,address,uint256)"(
      _proxy: string,
      _caller: string,
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    calculateERC20(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "calculateERC20(uint256)"(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    clone2Address(
      target: string,
      salt: BigNumberish,
      creator: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "clone2Address(address,uint256,address)"(
      target: string,
      salt: BigNumberish,
      creator: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getProxy(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getProxy(uint256)"(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getProxyAddress(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getProxyAddress(uint256)"(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    newERC20(
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "newERC20(uint256)"(
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    newERC20s(
      _tokenIds: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "newERC20s(uint256[])"(
      _tokenIds: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    target1155(overrides?: CallOverrides): Promise<[string]>;

    "target1155()"(overrides?: CallOverrides): Promise<[string]>;

    transfer(
      _proxy: string,
      _caller: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transfer(address,address,address,uint256)"(
      _proxy: string,
      _caller: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferFrom(
      _proxy: string,
      _caller: string,
      _from: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferFrom(address,address,address,address,uint256)"(
      _proxy: string,
      _caller: string,
      _from: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  allowance(
    _proxy: string,
    _owner: string,
    _spender: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "allowance(address,address,address)"(
    _proxy: string,
    _owner: string,
    _spender: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  approve(
    _proxy: string,
    _caller: string,
    _spender: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "approve(address,address,address,uint256)"(
    _proxy: string,
    _caller: string,
    _spender: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  calculateERC20(
    _tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "calculateERC20(uint256)"(
    _tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  clone2Address(
    target: string,
    salt: BigNumberish,
    creator: string,
    overrides?: CallOverrides
  ): Promise<string>;

  "clone2Address(address,uint256,address)"(
    target: string,
    salt: BigNumberish,
    creator: string,
    overrides?: CallOverrides
  ): Promise<string>;

  getProxy(_tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "getProxy(uint256)"(
    _tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getProxyAddress(
    _tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getProxyAddress(uint256)"(
    _tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  newERC20(
    _tokenId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "newERC20(uint256)"(
    _tokenId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  newERC20s(
    _tokenIds: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "newERC20s(uint256[])"(
    _tokenIds: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  target1155(overrides?: CallOverrides): Promise<string>;

  "target1155()"(overrides?: CallOverrides): Promise<string>;

  transfer(
    _proxy: string,
    _caller: string,
    _to: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transfer(address,address,address,uint256)"(
    _proxy: string,
    _caller: string,
    _to: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferFrom(
    _proxy: string,
    _caller: string,
    _from: string,
    _to: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferFrom(address,address,address,address,uint256)"(
    _proxy: string,
    _caller: string,
    _from: string,
    _to: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    allowance(
      _proxy: string,
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "allowance(address,address,address)"(
      _proxy: string,
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    approve(
      _proxy: string,
      _caller: string,
      _spender: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "approve(address,address,address,uint256)"(
      _proxy: string,
      _caller: string,
      _spender: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    calculateERC20(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "calculateERC20(uint256)"(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    clone2Address(
      target: string,
      salt: BigNumberish,
      creator: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "clone2Address(address,uint256,address)"(
      target: string,
      salt: BigNumberish,
      creator: string,
      overrides?: CallOverrides
    ): Promise<string>;

    getProxy(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getProxy(uint256)"(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getProxyAddress(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getProxyAddress(uint256)"(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    newERC20(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "newERC20(uint256)"(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    newERC20s(
      _tokenIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<string[]>;

    "newERC20s(uint256[])"(
      _tokenIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<string[]>;

    target1155(overrides?: CallOverrides): Promise<string>;

    "target1155()"(overrides?: CallOverrides): Promise<string>;

    transfer(
      _proxy: string,
      _caller: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "transfer(address,address,address,uint256)"(
      _proxy: string,
      _caller: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    transferFrom(
      _proxy: string,
      _caller: string,
      _from: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "transferFrom(address,address,address,address,uint256)"(
      _proxy: string,
      _caller: string,
      _from: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {};

  estimateGas: {
    allowance(
      _proxy: string,
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "allowance(address,address,address)"(
      _proxy: string,
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    approve(
      _proxy: string,
      _caller: string,
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "approve(address,address,address,uint256)"(
      _proxy: string,
      _caller: string,
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    calculateERC20(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "calculateERC20(uint256)"(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    clone2Address(
      target: string,
      salt: BigNumberish,
      creator: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "clone2Address(address,uint256,address)"(
      target: string,
      salt: BigNumberish,
      creator: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProxy(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getProxy(uint256)"(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProxyAddress(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getProxyAddress(uint256)"(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    newERC20(_tokenId: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "newERC20(uint256)"(
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    newERC20s(
      _tokenIds: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "newERC20s(uint256[])"(
      _tokenIds: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    target1155(overrides?: CallOverrides): Promise<BigNumber>;

    "target1155()"(overrides?: CallOverrides): Promise<BigNumber>;

    transfer(
      _proxy: string,
      _caller: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transfer(address,address,address,uint256)"(
      _proxy: string,
      _caller: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferFrom(
      _proxy: string,
      _caller: string,
      _from: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferFrom(address,address,address,address,uint256)"(
      _proxy: string,
      _caller: string,
      _from: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    allowance(
      _proxy: string,
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "allowance(address,address,address)"(
      _proxy: string,
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    approve(
      _proxy: string,
      _caller: string,
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "approve(address,address,address,uint256)"(
      _proxy: string,
      _caller: string,
      _spender: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    calculateERC20(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "calculateERC20(uint256)"(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    clone2Address(
      target: string,
      salt: BigNumberish,
      creator: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "clone2Address(address,uint256,address)"(
      target: string,
      salt: BigNumberish,
      creator: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProxy(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getProxy(uint256)"(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProxyAddress(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getProxyAddress(uint256)"(
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    newERC20(
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "newERC20(uint256)"(
      _tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    newERC20s(
      _tokenIds: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "newERC20s(uint256[])"(
      _tokenIds: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    target1155(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "target1155()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transfer(
      _proxy: string,
      _caller: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transfer(address,address,address,uint256)"(
      _proxy: string,
      _caller: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferFrom(
      _proxy: string,
      _caller: string,
      _from: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferFrom(address,address,address,address,uint256)"(
      _proxy: string,
      _caller: string,
      _from: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
