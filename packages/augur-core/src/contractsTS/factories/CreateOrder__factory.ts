/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { CreateOrder } from "../CreateOrder";

export class CreateOrder__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CreateOrder {
    return new Contract(address, _abi, signerOrProvider) as CreateOrder;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "augur",
    outputs: [
      {
        internalType: "contract IAugur",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "augurTrading",
    outputs: [
      {
        internalType: "contract IAugurTrading",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "cash",
    outputs: [
      {
        internalType: "contract ICash",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "enum Order.Types",
        name: "_type",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_attoshares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "contract IMarket",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_outcome",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_betterOrderId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_worseOrderId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_tradeGroupId",
        type: "bytes32",
      },
    ],
    name: "createOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract IAugur",
        name: "_augur",
        type: "address",
      },
      {
        internalType: "contract IAugurTrading",
        name: "_augurTrading",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "orders",
    outputs: [
      {
        internalType: "contract IOrders",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "profitLoss",
    outputs: [
      {
        internalType: "contract IProfitLoss",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "enum Order.Types",
        name: "_type",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_attoshares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "contract IMarket",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_outcome",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_betterOrderId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_worseOrderId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_tradeGroupId",
        type: "bytes32",
      },
    ],
    name: "publicCreateOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256[]",
        name: "_outcomes",
        type: "uint256[]",
      },
      {
        internalType: "enum Order.Types[]",
        name: "_types",
        type: "uint8[]",
      },
      {
        internalType: "uint256[]",
        name: "_attoshareAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_prices",
        type: "uint256[]",
      },
      {
        internalType: "contract IMarket",
        name: "_market",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_tradeGroupId",
        type: "bytes32",
      },
    ],
    name: "publicCreateOrders",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "_orders",
        type: "bytes32[]",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "trade",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];
