/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { WarpSync } from "../WarpSync";

export class WarpSync__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WarpSync {
    return new Contract(address, _abi, signerOrProvider) as WarpSync;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "augur",
    outputs: [
      {
        internalType: "contract IAugur",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "data",
    outputs: [
      {
        internalType: "uint256",
        name: "warpSyncHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract IUniverse",
        name: "_universe",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_payoutNumerators",
        type: "uint256[]",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "doInitialReport",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "contract IUniverse",
        name: "_universe",
        type: "address",
      },
    ],
    name: "getCreationReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "contract IMarket",
        name: "_market",
        type: "address",
      },
    ],
    name: "getFinalizationReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract IAugur",
        name: "_augur",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract IUniverse",
        name: "_universe",
        type: "address",
      },
    ],
    name: "initializeUniverse",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "markets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "notifyMarketFinalized",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];
