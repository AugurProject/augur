/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { ParaAugur } from "../ParaAugur";

export class ParaAugur__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ParaAugur {
    return new Contract(address, _abi, signerOrProvider) as ParaAugur;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAugur",
        name: "_augur",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tradeIntervalModifier",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "universe",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numCompleteSets",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "para",
        type: "address",
      },
    ],
    name: "CompleteSetsPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "universe",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numCompleteSets",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "para",
        type: "address",
      },
    ],
    name: "CompleteSetsSold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "FinishDeployment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "universe",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "marketOI",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "para",
        type: "address",
      },
    ],
    name: "MarketOIChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "RegisterContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "universe",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reportingFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "para",
        type: "address",
      },
    ],
    name: "ReportingFeeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "universe",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "outcome",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "para",
        type: "address",
      },
    ],
    name: "ShareTokenBalanceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "universe",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "outcome",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numShares",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numPayoutTokens",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "para",
        type: "address",
      },
    ],
    name: "TradingProceedsClaimed",
    type: "event",
  },
  {
    constant: true,
    inputs: [],
    name: "OINexus",
    outputs: [
      {
        internalType: "contract IOINexus",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "augur",
    outputs: [
      {
        internalType: "contract IAugur",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "cash",
    outputs: [
      {
        internalType: "contract ICash",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256[]",
        name: "_payoutNumerators",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_numTicks",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numOutcomes",
        type: "uint256",
      },
    ],
    name: "derivePayoutDistributionHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "finishDeployment",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract IUniverse",
        name: "_universe",
        type: "address",
      },
    ],
    name: "generateParaUniverse",
    outputs: [
      {
        internalType: "contract IParaUniverse",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "genesisUniverse",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "contract IMarket",
        name: "_market",
        type: "address",
      },
    ],
    name: "getMarketCreationData",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "extraInfo",
            type: "string",
          },
          {
            internalType: "address",
            name: "marketCreator",
            type: "address",
          },
          {
            internalType: "bytes32[]",
            name: "outcomes",
            type: "bytes32[]",
          },
          {
            internalType: "int256[]",
            name: "displayPrices",
            type: "int256[]",
          },
          {
            internalType: "enum IMarket.MarketType",
            name: "marketType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "recommendedTradeInterval",
            type: "uint256",
          },
        ],
        internalType: "struct IAugurCreationDataGetter.MarketCreationData",
        name: "",
        type: "tuple",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "contract IMarket",
        name: "_market",
        type: "address",
      },
    ],
    name: "getMarketOutcomes",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "_outcomes",
        type: "bytes32[]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "contract IMarket",
        name: "_market",
        type: "address",
      },
    ],
    name: "getMarketRecommendedTradeInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "contract IMarket",
        name: "_market",
        type: "address",
      },
    ],
    name: "getMarketType",
    outputs: [
      {
        internalType: "enum IMarket.MarketType",
        name: "",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "getMaximumMarketEndDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getOriginCash",
    outputs: [
      {
        internalType: "contract ICash",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getParaUniverse",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "contract IUniverse",
        name: "_universe",
        type: "address",
      },
    ],
    name: "getUniverseForkIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "_feeSender",
        type: "address",
      },
    ],
    name: "isKnownFeeSender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "contract IMarket",
        name: "_market",
        type: "address",
      },
    ],
    name: "isKnownMarket",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "contract IParaUniverse",
        name: "_universe",
        type: "address",
      },
    ],
    name: "isKnownParaUniverse",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "contract IUniverse",
        name: "_universe",
        type: "address",
      },
    ],
    name: "isKnownUniverse",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract IUniverse",
        name: "_universe",
        type: "address",
      },
      {
        internalType: "contract IMarket",
        name: "_market",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_numCompleteSets",
        type: "uint256",
      },
    ],
    name: "logCompleteSetsPurchased",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract IUniverse",
        name: "_universe",
        type: "address",
      },
      {
        internalType: "contract IMarket",
        name: "_market",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_numCompleteSets",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fees",
        type: "uint256",
      },
    ],
    name: "logCompleteSetsSold",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract IUniverse",
        name: "_universe",
        type: "address",
      },
      {
        internalType: "contract IMarket",
        name: "_market",
        type: "address",
      },
    ],
    name: "logMarketOIChanged",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "_reportingFee",
        type: "uint256",
      },
    ],
    name: "logReportingFeeChanged",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "contract IMarket",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_outcome",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "logShareTokensBalanceChanged",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract IUniverse",
        name: "_universe",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_outcome",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numShares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numPayoutTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fees",
        type: "uint256",
      },
    ],
    name: "logTradingProceedsClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "lookup",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "paraUniverseFactory",
    outputs: [
      {
        internalType: "contract IParaUniverseFactory",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "registerContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "shareToken",
    outputs: [
      {
        internalType: "contract IParaShareToken",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "tradeIntervalModifier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "trustedCashTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "universes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];
