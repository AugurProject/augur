/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface FillOrderInterface extends ethers.utils.Interface {
  functions: {
    "augur()": FunctionFragment;
    "augurTrading()": FunctionFragment;
    "fillOrder(address,bytes32,uint256,bytes32,bytes32)": FunctionFragment;
    "fillZeroXOrder(address,uint256,uint256,uint8,address,uint256,bytes32,bytes32,address)": FunctionFragment;
    "getInitialized()": FunctionFragment;
    "getMarketOutcomeValues(address)": FunctionFragment;
    "getMarketVolume(address)": FunctionFragment;
    "initialize(address,address)": FunctionFragment;
    "marketOutcomeVolumes(address,uint256)": FunctionFragment;
    "marketTotalTrades(address)": FunctionFragment;
    "publicFillOrder(bytes32,uint256,bytes32,bytes32)": FunctionFragment;
    "trade()": FunctionFragment;
    "zeroXTrade()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "augur", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "augurTrading",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "fillOrder",
    values: [string, BytesLike, BigNumberish, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "fillZeroXOrder",
    values: [
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      string,
      BigNumberish,
      BytesLike,
      BytesLike,
      string
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getInitialized",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMarketOutcomeValues",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getMarketVolume",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "marketOutcomeVolumes",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "marketTotalTrades",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "publicFillOrder",
    values: [BytesLike, BigNumberish, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "trade", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "zeroXTrade",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "augur", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "augurTrading",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "fillOrder", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "fillZeroXOrder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInitialized",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMarketOutcomeValues",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMarketVolume",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "marketOutcomeVolumes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "marketTotalTrades",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "publicFillOrder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "trade", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "zeroXTrade", data: BytesLike): Result;

  events: {};
}

export class FillOrder extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  listeners<T, G>(
    eventFilter?: TypedEventFilter<T, G>
  ): Array<TypedListener<T, G>>;
  off<T, G>(
    eventFilter: TypedEventFilter<T, G>,
    listener: TypedListener<T, G>
  ): this;
  on<T, G>(
    eventFilter: TypedEventFilter<T, G>,
    listener: TypedListener<T, G>
  ): this;
  once<T, G>(
    eventFilter: TypedEventFilter<T, G>,
    listener: TypedListener<T, G>
  ): this;
  removeListener<T, G>(
    eventFilter: TypedEventFilter<T, G>,
    listener: TypedListener<T, G>
  ): this;
  removeAllListeners<T, G>(eventFilter: TypedEventFilter<T, G>): this;

  queryFilter<T, G>(
    event: TypedEventFilter<T, G>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<T & G>>>;

  interface: FillOrderInterface;

  functions: {
    augur(overrides?: CallOverrides): Promise<[string]>;

    "augur()"(overrides?: CallOverrides): Promise<[string]>;

    augurTrading(overrides?: CallOverrides): Promise<[string]>;

    "augurTrading()"(overrides?: CallOverrides): Promise<[string]>;

    fillOrder(
      _filler: string,
      _orderId: BytesLike,
      _amountFillerWants: BigNumberish,
      _tradeGroupId: BytesLike,
      _fingerprint: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "fillOrder(address,bytes32,uint256,bytes32,bytes32)"(
      _filler: string,
      _orderId: BytesLike,
      _amountFillerWants: BigNumberish,
      _tradeGroupId: BytesLike,
      _fingerprint: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    fillZeroXOrder(
      _market: string,
      _outcome: BigNumberish,
      _price: BigNumberish,
      _orderType: BigNumberish,
      _creator: string,
      _amount: BigNumberish,
      _fingerprint: BytesLike,
      _tradeGroupId: BytesLike,
      _filler: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "fillZeroXOrder(address,uint256,uint256,uint8,address,uint256,bytes32,bytes32,address)"(
      _market: string,
      _outcome: BigNumberish,
      _price: BigNumberish,
      _orderType: BigNumberish,
      _creator: string,
      _amount: BigNumberish,
      _fingerprint: BytesLike,
      _tradeGroupId: BytesLike,
      _filler: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getInitialized(overrides?: CallOverrides): Promise<[boolean]>;

    "getInitialized()"(overrides?: CallOverrides): Promise<[boolean]>;

    getMarketOutcomeValues(
      _market: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    "getMarketOutcomeValues(address)"(
      _market: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    getMarketVolume(
      _market: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getMarketVolume(address)"(
      _market: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    initialize(
      _augur: string,
      _augurTrading: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(address,address)"(
      _augur: string,
      _augurTrading: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    marketOutcomeVolumes(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "marketOutcomeVolumes(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    marketTotalTrades(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "marketTotalTrades(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    publicFillOrder(
      _orderId: BytesLike,
      _amountFillerWants: BigNumberish,
      _tradeGroupId: BytesLike,
      _fingerprint: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "publicFillOrder(bytes32,uint256,bytes32,bytes32)"(
      _orderId: BytesLike,
      _amountFillerWants: BigNumberish,
      _tradeGroupId: BytesLike,
      _fingerprint: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    trade(overrides?: CallOverrides): Promise<[string]>;

    "trade()"(overrides?: CallOverrides): Promise<[string]>;

    zeroXTrade(overrides?: CallOverrides): Promise<[string]>;

    "zeroXTrade()"(overrides?: CallOverrides): Promise<[string]>;
  };

  augur(overrides?: CallOverrides): Promise<string>;

  "augur()"(overrides?: CallOverrides): Promise<string>;

  augurTrading(overrides?: CallOverrides): Promise<string>;

  "augurTrading()"(overrides?: CallOverrides): Promise<string>;

  fillOrder(
    _filler: string,
    _orderId: BytesLike,
    _amountFillerWants: BigNumberish,
    _tradeGroupId: BytesLike,
    _fingerprint: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "fillOrder(address,bytes32,uint256,bytes32,bytes32)"(
    _filler: string,
    _orderId: BytesLike,
    _amountFillerWants: BigNumberish,
    _tradeGroupId: BytesLike,
    _fingerprint: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  fillZeroXOrder(
    _market: string,
    _outcome: BigNumberish,
    _price: BigNumberish,
    _orderType: BigNumberish,
    _creator: string,
    _amount: BigNumberish,
    _fingerprint: BytesLike,
    _tradeGroupId: BytesLike,
    _filler: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "fillZeroXOrder(address,uint256,uint256,uint8,address,uint256,bytes32,bytes32,address)"(
    _market: string,
    _outcome: BigNumberish,
    _price: BigNumberish,
    _orderType: BigNumberish,
    _creator: string,
    _amount: BigNumberish,
    _fingerprint: BytesLike,
    _tradeGroupId: BytesLike,
    _filler: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getInitialized(overrides?: CallOverrides): Promise<boolean>;

  "getInitialized()"(overrides?: CallOverrides): Promise<boolean>;

  getMarketOutcomeValues(
    _market: string,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getMarketOutcomeValues(address)"(
    _market: string,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getMarketVolume(
    _market: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getMarketVolume(address)"(
    _market: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  initialize(
    _augur: string,
    _augurTrading: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(address,address)"(
    _augur: string,
    _augurTrading: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  marketOutcomeVolumes(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "marketOutcomeVolumes(address,uint256)"(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  marketTotalTrades(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "marketTotalTrades(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  publicFillOrder(
    _orderId: BytesLike,
    _amountFillerWants: BigNumberish,
    _tradeGroupId: BytesLike,
    _fingerprint: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "publicFillOrder(bytes32,uint256,bytes32,bytes32)"(
    _orderId: BytesLike,
    _amountFillerWants: BigNumberish,
    _tradeGroupId: BytesLike,
    _fingerprint: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  trade(overrides?: CallOverrides): Promise<string>;

  "trade()"(overrides?: CallOverrides): Promise<string>;

  zeroXTrade(overrides?: CallOverrides): Promise<string>;

  "zeroXTrade()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    augur(overrides?: CallOverrides): Promise<string>;

    "augur()"(overrides?: CallOverrides): Promise<string>;

    augurTrading(overrides?: CallOverrides): Promise<string>;

    "augurTrading()"(overrides?: CallOverrides): Promise<string>;

    fillOrder(
      _filler: string,
      _orderId: BytesLike,
      _amountFillerWants: BigNumberish,
      _tradeGroupId: BytesLike,
      _fingerprint: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "fillOrder(address,bytes32,uint256,bytes32,bytes32)"(
      _filler: string,
      _orderId: BytesLike,
      _amountFillerWants: BigNumberish,
      _tradeGroupId: BytesLike,
      _fingerprint: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    fillZeroXOrder(
      _market: string,
      _outcome: BigNumberish,
      _price: BigNumberish,
      _orderType: BigNumberish,
      _creator: string,
      _amount: BigNumberish,
      _fingerprint: BytesLike,
      _tradeGroupId: BytesLike,
      _filler: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { _amountRemaining: BigNumber; _fees: BigNumber }
    >;

    "fillZeroXOrder(address,uint256,uint256,uint8,address,uint256,bytes32,bytes32,address)"(
      _market: string,
      _outcome: BigNumberish,
      _price: BigNumberish,
      _orderType: BigNumberish,
      _creator: string,
      _amount: BigNumberish,
      _fingerprint: BytesLike,
      _tradeGroupId: BytesLike,
      _filler: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { _amountRemaining: BigNumber; _fees: BigNumber }
    >;

    getInitialized(overrides?: CallOverrides): Promise<boolean>;

    "getInitialized()"(overrides?: CallOverrides): Promise<boolean>;

    getMarketOutcomeValues(
      _market: string,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getMarketOutcomeValues(address)"(
      _market: string,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getMarketVolume(
      _market: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getMarketVolume(address)"(
      _market: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialize(
      _augur: string,
      _augurTrading: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(address,address)"(
      _augur: string,
      _augurTrading: string,
      overrides?: CallOverrides
    ): Promise<void>;

    marketOutcomeVolumes(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "marketOutcomeVolumes(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    marketTotalTrades(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "marketTotalTrades(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    publicFillOrder(
      _orderId: BytesLike,
      _amountFillerWants: BigNumberish,
      _tradeGroupId: BytesLike,
      _fingerprint: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "publicFillOrder(bytes32,uint256,bytes32,bytes32)"(
      _orderId: BytesLike,
      _amountFillerWants: BigNumberish,
      _tradeGroupId: BytesLike,
      _fingerprint: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    trade(overrides?: CallOverrides): Promise<string>;

    "trade()"(overrides?: CallOverrides): Promise<string>;

    zeroXTrade(overrides?: CallOverrides): Promise<string>;

    "zeroXTrade()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    augur(overrides?: CallOverrides): Promise<BigNumber>;

    "augur()"(overrides?: CallOverrides): Promise<BigNumber>;

    augurTrading(overrides?: CallOverrides): Promise<BigNumber>;

    "augurTrading()"(overrides?: CallOverrides): Promise<BigNumber>;

    fillOrder(
      _filler: string,
      _orderId: BytesLike,
      _amountFillerWants: BigNumberish,
      _tradeGroupId: BytesLike,
      _fingerprint: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "fillOrder(address,bytes32,uint256,bytes32,bytes32)"(
      _filler: string,
      _orderId: BytesLike,
      _amountFillerWants: BigNumberish,
      _tradeGroupId: BytesLike,
      _fingerprint: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    fillZeroXOrder(
      _market: string,
      _outcome: BigNumberish,
      _price: BigNumberish,
      _orderType: BigNumberish,
      _creator: string,
      _amount: BigNumberish,
      _fingerprint: BytesLike,
      _tradeGroupId: BytesLike,
      _filler: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "fillZeroXOrder(address,uint256,uint256,uint8,address,uint256,bytes32,bytes32,address)"(
      _market: string,
      _outcome: BigNumberish,
      _price: BigNumberish,
      _orderType: BigNumberish,
      _creator: string,
      _amount: BigNumberish,
      _fingerprint: BytesLike,
      _tradeGroupId: BytesLike,
      _filler: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getInitialized(overrides?: CallOverrides): Promise<BigNumber>;

    "getInitialized()"(overrides?: CallOverrides): Promise<BigNumber>;

    getMarketOutcomeValues(
      _market: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getMarketOutcomeValues(address)"(
      _market: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMarketVolume(
      _market: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getMarketVolume(address)"(
      _market: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialize(
      _augur: string,
      _augurTrading: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize(address,address)"(
      _augur: string,
      _augurTrading: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    marketOutcomeVolumes(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "marketOutcomeVolumes(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    marketTotalTrades(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "marketTotalTrades(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    publicFillOrder(
      _orderId: BytesLike,
      _amountFillerWants: BigNumberish,
      _tradeGroupId: BytesLike,
      _fingerprint: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "publicFillOrder(bytes32,uint256,bytes32,bytes32)"(
      _orderId: BytesLike,
      _amountFillerWants: BigNumberish,
      _tradeGroupId: BytesLike,
      _fingerprint: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    trade(overrides?: CallOverrides): Promise<BigNumber>;

    "trade()"(overrides?: CallOverrides): Promise<BigNumber>;

    zeroXTrade(overrides?: CallOverrides): Promise<BigNumber>;

    "zeroXTrade()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    augur(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "augur()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    augurTrading(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "augurTrading()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    fillOrder(
      _filler: string,
      _orderId: BytesLike,
      _amountFillerWants: BigNumberish,
      _tradeGroupId: BytesLike,
      _fingerprint: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "fillOrder(address,bytes32,uint256,bytes32,bytes32)"(
      _filler: string,
      _orderId: BytesLike,
      _amountFillerWants: BigNumberish,
      _tradeGroupId: BytesLike,
      _fingerprint: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    fillZeroXOrder(
      _market: string,
      _outcome: BigNumberish,
      _price: BigNumberish,
      _orderType: BigNumberish,
      _creator: string,
      _amount: BigNumberish,
      _fingerprint: BytesLike,
      _tradeGroupId: BytesLike,
      _filler: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "fillZeroXOrder(address,uint256,uint256,uint8,address,uint256,bytes32,bytes32,address)"(
      _market: string,
      _outcome: BigNumberish,
      _price: BigNumberish,
      _orderType: BigNumberish,
      _creator: string,
      _amount: BigNumberish,
      _fingerprint: BytesLike,
      _tradeGroupId: BytesLike,
      _filler: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getInitialized(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getInitialized()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMarketOutcomeValues(
      _market: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getMarketOutcomeValues(address)"(
      _market: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMarketVolume(
      _market: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getMarketVolume(address)"(
      _market: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      _augur: string,
      _augurTrading: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(address,address)"(
      _augur: string,
      _augurTrading: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    marketOutcomeVolumes(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "marketOutcomeVolumes(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    marketTotalTrades(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "marketTotalTrades(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    publicFillOrder(
      _orderId: BytesLike,
      _amountFillerWants: BigNumberish,
      _tradeGroupId: BytesLike,
      _fingerprint: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "publicFillOrder(bytes32,uint256,bytes32,bytes32)"(
      _orderId: BytesLike,
      _amountFillerWants: BigNumberish,
      _tradeGroupId: BytesLike,
      _fingerprint: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    trade(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "trade()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    zeroXTrade(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "zeroXTrade()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
