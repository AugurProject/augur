variables:
    SOLC_VERSION: v0.4.24
    SOLC_MD5: dc791cd7db87b7df5e47975d222dc5fe

jobs:
  - job: Test_Augur_Core
    pool:
      vmImage: 'Ubuntu 16.04'
    strategy:
      maxParallel: 10
      matrix:
        trading_and_libs:
          TESTS: tests/test*.py tests/libraries tests/trading
        reporting:
          TESTS: tests/reporting
        fuzzy:
          TESTS: tests/fuzzy
        unit:
          TESTS: tests/unit
        trading_and_libs_subfork:
          TESTS: tests/test*.py tests/libraries tests/trading --subFork
        reporting_subfork:
          TESTS: tests/reporting --subFork
        fuzzy_subfork:
          TESTS: tests/fuzzy --subFork
        unit_subfork:
          TESTS: tests/unit --subFork
        geth_integration:
          TESTS: integration:geth
        parity_integration:
          TESTS: integration:parity
        security_mithril:
          TESTS: security:mythril
        security_main:
          TESTS: security:maian

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.6.5'
      - task: NodeTool@0
        inputs:
          versionSpec: '9.x'
      - script: |
          set -euxo pipefail
          if [[ "$TESTS" == "integration:geth" ]]; then
            yarn workspace augur-core docker:run:test:integration:geth;
          elif [[ "$TESTS" == "integration:parity" ]]; then
            yarn workspace augur-core docker:run:test:integration:parity;
          elif [[ "$TESTS" == "security:mythril" ]]; then
            yarn workspace augur-core docker:run:test:security:mythril;
            cat $(find . -name test-results.log)
          elif [[ "$TESTS" == "security:maian" ]]; then
            yarn workspace augur-core docker:run:test:security:maian;
          elif [[ "$TESTS" == "security:smt" ]]; then
            yarn workspace augur-core docker:run:test:security:smt;
          elif [[ "$TESTS" == "security:oyente" ]]; then
            yarn workspace augur-core docker:run:test:security:oyente;
          else
            yarn workspace augur-core docker:run:test:unit -- $TESTS;
          fi

  - job: Test_Augur_UI_and_Node
    displayName: 'Test augur UI and augur-node'
    pool:
      vmImage: 'Ubuntu 16.04'
    strategy:
      matrix:
        node_8_x:
          node_version: 8.x
        node_9_x:
          node_version: 9.x
    steps:
      - script: |
          yarn workspace augur-node add sqlite3 --force --build-from-source
          yarn install --ignore-scripts --frozen-lockfile
        displayName: 'Install Dependencies'
      - script: |
          yarn test --forceExit
        displayName: 'Run Tests'
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: 'junit.xml'

  - job: Test_Augur_js
    pool:
      vmImage: 'Ubuntu 16.04'
    strategy:
      matrix:
        node_8_x:
          node_version: 8.x
        node_9_x:
          node_version: 9.x
    steps:
      - script: |
          set -euxo pipefail
          yarn install --ignore-scripts --frozen-lockfile
          npx lerna run test --stream --scope augur.js
        displayName: 'test augur.js'

  - job: Build
    pool:
      vmImage: 'Ubuntu 16.04'
    strategy:
      matrix:
        node_8_x:
          node_version: 8.x
        node_9_x:
          node_version: 9.x
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.6.5'

    - script: |
        set -euxo pipefail
        yarn install --ignore-scripts --frozen-lockfile
        git config --global user.email "team@augur.net"
        git config --global user.name "Augur Developers"
        python -m pip install --upgrade pip pip-tools setuptools wheel
        pip install virtualenv
      displayName: 'setup'

    - script: |
        set -euxo pipefail
        PATH=$(Agent.BuildDirectory)/bin:$PATH
        mkdir $(Agent.BuildDirectory)/bin
        echo "$(SOLC_MD5) *$(Agent.BuildDirectory)/bin/solc" > solc.md5
        curl -vL -o $(Agent.BuildDirectory)/bin/solc https://github.com/ethereum/solidity/releases/download/$(SOLC_VERSION)/solc-static-linux
        md5sum -c solc.md5
        ls -l $(Agent.BuildDirectory)
        ls -l $(Agent.BuildDirectory)/bin
        chmod a+x $(Agent.BuildDirectory)/bin/solc
      displayName: 'contracts'

    - script: |
        set -euxo pipefail
        yarn workspace augur-core run build
        yarn workspace augur-node run build
        yarn workspace augur-ui run build
      displayName: 'build and test'
